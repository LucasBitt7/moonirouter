{
	"id": "5b843f48313d688cda31f667f619b942",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Mooniswap.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/math/Math.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./libraries/UniERC20.sol\";\nimport \"./libraries/Sqrt.sol\";\n\n\ninterface IFactory {\n    function fee() external view returns(uint256);\n}\n\n\nlibrary VirtualBalance {\n    using SafeMath for uint256;\n\n    struct Data {\n        uint216 balance;\n        uint40 time;\n    }\n\n    uint256 public constant DECAY_PERIOD = 5 minutes;\n\n    function set(VirtualBalance.Data storage self, uint256 balance) internal {\n        self.balance = uint216(balance);\n        self.time = uint40(block.timestamp);\n    }\n\n    function update(VirtualBalance.Data storage self, uint256 realBalance) internal {\n        set(self, current(self, realBalance));\n    }\n\n    function scale(VirtualBalance.Data storage self, uint256 realBalance, uint256 num, uint256 denom) internal {\n        set(self, current(self, realBalance).mul(num).add(denom.sub(1)).div(denom));\n    }\n\n    function current(VirtualBalance.Data memory self, uint256 realBalance) internal view returns(uint256) {\n        uint256 timePassed = Math.min(DECAY_PERIOD, block.timestamp.sub(self.time));\n        uint256 timeRemain = DECAY_PERIOD.sub(timePassed);\n        return uint256(self.balance).mul(timeRemain).add(\n            realBalance.mul(timePassed)\n        ).div(DECAY_PERIOD);\n    }\n}\n\n\ncontract Mooniswap is ERC20, ReentrancyGuard, Ownable {\n    using Sqrt for uint256;\n    using SafeMath for uint256;\n    using UniERC20 for IERC20;\n    using VirtualBalance for VirtualBalance.Data;\n\n    struct Balances {\n        uint256 src;\n        uint256 dst;\n    }\n\n    struct SwapVolumes {\n        uint128 confirmed;\n        uint128 result;\n    }\n\n    event Deposited(\n        address indexed account,\n        uint256 amount\n    );\n\n    event Withdrawn(\n        address indexed account,\n        uint256 amount\n    );\n\n    event Swapped(\n        address indexed account,\n        address indexed src,\n        address indexed dst,\n        uint256 amount,\n        uint256 result,\n        uint256 srcBalance,\n        uint256 dstBalance,\n        uint256 totalSupply,\n        address referral\n    );\n\n    uint256 public constant REFERRAL_SHARE = 20; // 1/share = 5% of LPs revenue\n    uint256 public constant BASE_SUPPLY = 1000;  // Total supply on first deposit\n    uint256 public constant FEE_DENOMINATOR = 1e18;\n   \n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n\n    IFactory public factory;\n    IERC20[] public tokens;\n    mapping(address => uint) public nonces;\n    mapping(IERC20 => bool) public isToken;\n    mapping(IERC20 => SwapVolumes) public volumes;\n    mapping(IERC20 => VirtualBalance.Data) public virtualBalancesForAddition;\n    mapping(IERC20 => VirtualBalance.Data) public virtualBalancesForRemoval;\n\n    constructor() public payable ERC20(\"LP-NAME\", \"SOMETHING\") {\n        factory = IFactory(msg.sender);\n        uint chainId;\n        assembly {\n            chainId := chainid()\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\n                keccak256(bytes(name())),\n                keccak256(bytes('1')),\n                chainId,\n                address(this)\n            )\n        );\n    }\n \n  \n\n    function initialize(IERC20[] memory assets) external {\n     \n        require(assets.length == 2, \"Mooniswap: only 2 tokens allowed\");\n     //   require(msg.sender == factory, \"FORBIDDEN\");\n        factory = IFactory(msg.sender);\n        tokens = assets;\n        for (uint i = 0; i < assets.length; i++) {\n            require(!isToken[assets[i]], \"Mooniswap: duplicate tokens\");\n            isToken[assets[i]] = true;\n        }\n    }\n\n    function fee() public view returns(uint256) {\n        return factory.fee();\n    }\n\n    function getTokens() external view returns(IERC20[] memory) {\n        return tokens;\n    }\n\n    function decayPeriod() external pure returns(uint256) {\n        return VirtualBalance.DECAY_PERIOD;\n    }\n\n    function getBalanceForAddition(IERC20 token) public view returns(uint256) {\n        uint256 balance = token.uniBalanceOf(address(this));\n        return Math.max(virtualBalancesForAddition[token].current(balance), balance);\n    }\n\n    function getBalanceForRemoval(IERC20 token) public view returns(uint256) {\n        uint256 balance = token.uniBalanceOf(address(this));\n        return Math.min(virtualBalancesForRemoval[token].current(balance), balance);\n    }\n\n    function getReturn(IERC20 src, IERC20 dst, uint256 amount) external view returns(uint256) {\n        return _getReturn(src, dst, amount, getBalanceForAddition(src), getBalanceForRemoval(dst));\n    }\n\n    function deposit(uint256[] calldata amounts, uint256[] calldata minAmounts) external payable nonReentrant returns(uint256 fairSupply) {\n        IERC20[] memory _tokens = tokens;\n        require(amounts.length == _tokens.length, \"Mooniswap: wrong amounts length\");\n        require(msg.value == (_tokens[0].isETH() ? amounts[0] : (_tokens[1].isETH() ? amounts[1] : 0)), \"Mooniswap: wrong value usage\");\n\n        uint256[] memory realBalances = new uint256[](amounts.length);\n        for (uint i = 0; i < realBalances.length; i++) {\n            realBalances[i] = _tokens[i].uniBalanceOf(address(this)).sub(_tokens[i].isETH() ? msg.value : 0);\n        }\n\n        uint256 totalSupply = totalSupply();\n        if (totalSupply == 0) {\n            fairSupply = BASE_SUPPLY.mul(99);\n            _mint(address(this), BASE_SUPPLY); // Donate up to 1%\n\n            // Use the greatest token amount but not less than 99k for the initial supply\n            for (uint i = 0; i < amounts.length; i++) {\n                fairSupply = Math.max(fairSupply, amounts[i]);\n            }\n        }\n        else {\n            // Pre-compute fair supply\n            fairSupply = type(uint256).max;\n            for (uint i = 0; i < amounts.length; i++) {\n                fairSupply = Math.min(fairSupply, totalSupply.mul(amounts[i]).div(realBalances[i]));\n            }\n        }\n\n        uint256 fairSupplyCached = fairSupply;\n        for (uint i = 0; i < amounts.length; i++) {\n            require(amounts[i] > 0, \"Mooniswap: amount is zero\");\n            uint256 amount = (totalSupply == 0) ? amounts[i] :\n                realBalances[i].mul(fairSupplyCached).add(totalSupply - 1).div(totalSupply);\n            require(amount >= minAmounts[i], \"Mooniswap: minAmount not reached\");\n\n            _tokens[i].uniTransferFromSenderToThis(amount);\n            if (totalSupply > 0) {\n                uint256 confirmed = _tokens[i].uniBalanceOf(address(this)).sub(realBalances[i]);\n                fairSupply = Math.min(fairSupply, totalSupply.mul(confirmed).div(realBalances[i]));\n            }\n        }\n\n        if (totalSupply > 0) {\n            for (uint i = 0; i < amounts.length; i++) {\n                virtualBalancesForRemoval[_tokens[i]].scale(realBalances[i], totalSupply.add(fairSupply), totalSupply);\n                virtualBalancesForAddition[_tokens[i]].scale(realBalances[i], totalSupply.add(fairSupply), totalSupply);\n            }\n        }\n\n        require(fairSupply > 0, \"Mooniswap: result is not enough\");\n        _mint(msg.sender, fairSupply);\n\n        emit Deposited(msg.sender, fairSupply);\n    }\n\n    function withdraw(uint256 amount, uint256[] memory minReturns) external nonReentrant {\n        uint256 totalSupply = totalSupply();\n        _burn(msg.sender, amount);\n\n        for (uint i = 0; i < tokens.length; i++) {\n            IERC20 token = tokens[i];\n\n            uint256 preBalance = token.uniBalanceOf(address(this));\n            uint256 value = preBalance.mul(amount).div(totalSupply);\n            token.uniTransfer(msg.sender, value);\n            require(i >= minReturns.length || value >= minReturns[i], \"Mooniswap: result is not enough\");\n\n            virtualBalancesForAddition[token].scale(preBalance, totalSupply.sub(amount), totalSupply);\n            virtualBalancesForRemoval[token].scale(preBalance, totalSupply.sub(amount), totalSupply);\n        }\n\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    function swap(IERC20 src, IERC20 dst, uint256 amount, uint256 minReturn, address referral) external payable nonReentrant returns(uint256 result) {\n        require(msg.value == (src.isETH() ? amount : 0), \"Mooniswap: wrong value usage\");\n\n        Balances memory balances = Balances({\n            src: src.uniBalanceOf(address(this)).sub(src.isETH() ? msg.value : 0),\n            dst: dst.uniBalanceOf(address(this))\n        });\n\n        // catch possible airdrops and external balance changes for deflationary tokens\n        uint256 srcAdditionBalance = Math.max(virtualBalancesForAddition[src].current(balances.src), balances.src);\n        uint256 dstRemovalBalance = Math.min(virtualBalancesForRemoval[dst].current(balances.dst), balances.dst);\n\n        src.uniTransferFromSenderToThis(amount);\n        uint256 confirmed = src.uniBalanceOf(address(this)).sub(balances.src);\n        result = _getReturn(src, dst, confirmed, srcAdditionBalance, dstRemovalBalance);\n        require(result > 0 && result >= minReturn, \"Mooniswap: return is not enough\");\n        dst.uniTransfer(msg.sender, result);\n\n        // Update virtual balances to the same direction only at imbalanced state\n        if (srcAdditionBalance != balances.src) {\n            virtualBalancesForAddition[src].set(srcAdditionBalance.add(confirmed));\n        }\n        if (dstRemovalBalance != balances.dst) {\n            virtualBalancesForRemoval[dst].set(dstRemovalBalance.sub(result));\n        }\n\n        // Update virtual balances to the opposite direction\n        virtualBalancesForRemoval[src].update(balances.src);\n        virtualBalancesForAddition[dst].update(balances.dst);\n\n        if (referral != address(0)) {\n            uint256 invariantRatio = uint256(1e36);\n            invariantRatio = invariantRatio.mul(balances.src.add(confirmed)).div(balances.src);\n            invariantRatio = invariantRatio.mul(balances.dst.sub(result)).div(balances.dst);\n            if (invariantRatio > 1e36) {\n                // calculate share only if invariant increased\n                uint256 referralShare = invariantRatio.sqrt().sub(1e18).mul(totalSupply()).div(1e18).div(REFERRAL_SHARE);\n                if (referralShare > 0) {\n                    _mint(referral, referralShare);\n                }\n            }\n        }\n\n        emit Swapped(msg.sender, address(src), address(dst), confirmed, result, balances.src, balances.dst, totalSupply(), referral);\n\n        // Overflow of uint128 is desired\n        volumes[src].confirmed += uint128(confirmed);\n        volumes[src].result += uint128(result);\n    }\n\n    function rescueFunds(IERC20 token, uint256 amount) external nonReentrant onlyOwner {\n        uint256[] memory balances = new uint256[](tokens.length);\n        for (uint i = 0; i < balances.length; i++) {\n            balances[i] = tokens[i].uniBalanceOf(address(this));\n        }\n\n        token.uniTransfer(msg.sender, amount);\n\n        for (uint i = 0; i < balances.length; i++) {\n            require(tokens[i].uniBalanceOf(address(this)) >= balances[i], \"Mooniswap: access denied\");\n        }\n        require(balanceOf(address(this)) >= BASE_SUPPLY, \"Mooniswap: access denied\");\n    }\n\n    function _getReturn(IERC20 src, IERC20 dst, uint256 amount, uint256 srcBalance, uint256 dstBalance) internal view returns(uint256) {\n        if (isToken[src] && isToken[dst] && src != dst && amount > 0) {\n            uint256 taxedAmount = amount.sub(amount.mul(fee()).div(FEE_DENOMINATOR));\n            return taxedAmount.mul(dstBalance).div(srcBalance.add(taxedAmount));\n        }\n    }\n\n\n    function permit(address _owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\n        require(deadline >= block.timestamp, \"EXPIRED\");\n        uint nonce = nonces[_owner]++;\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH, _owner, spender, value, nonce, deadline))\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(recoveredAddress != address(0) && recoveredAddress == _owner, \"INVALID_SIGNATURE\");\n        \n        _approve(_owner, spender, value);\n    }\n}\n"
			},
			"contracts/libraries/Sqrt.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n\nlibrary Sqrt {\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint256 y) internal pure returns (uint256) {\n        if (y > 3) {\n            uint256 z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n            return z;\n        } else if (y != 0) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n}\n"
			},
			"contracts/libraries/UniERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\n\n\nlibrary UniERC20 {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    function isETH(IERC20 token) internal pure returns(bool) {\n        return (address(token) == address(0));\n    }\n\n    function uniBalanceOf(IERC20 token, address account) internal view returns (uint256) {\n        if (isETH(token)) {\n            return account.balance;\n        } else {\n            return token.balanceOf(account);\n        }\n    }\n\n    function uniTransfer(IERC20 token, address payable to, uint256 amount) internal {\n        if (amount > 0) {\n            if (isETH(token)) {\n                to.transfer(amount);\n            } else {\n                token.safeTransfer(to, amount);\n            }\n        }\n    }\n\n    function uniTransferFromSenderToThis(IERC20 token, uint256 amount) internal {\n        if (amount > 0) {\n            if (isETH(token)) {\n                require(msg.value >= amount, \"UniERC20: not enough value\");\n                if (msg.value > amount) {\n                    // Return remainder if exist\n                    msg.sender.transfer(msg.value.sub(amount));\n                }\n            } else {\n                token.safeTransferFrom(msg.sender, address(this), amount);\n            }\n        }\n    }\n\n    function uniSymbol(IERC20 token) internal view returns(string memory) {\n        if (isETH(token)) {\n            return \"ETH\";\n        }\n\n        (bool success, bytes memory data) = address(token).staticcall{ gas: 20000 }(\n            abi.encodeWithSignature(\"symbol()\")\n        );\n        if (!success) {\n            (success, data) = address(token).staticcall{ gas: 20000 }(\n                abi.encodeWithSignature(\"SYMBOL()\")\n            );\n        }\n\n        if (success && data.length >= 96) {\n            (uint256 offset, uint256 len) = abi.decode(data, (uint256, uint256));\n            if (offset == 0x20 && len > 0 && len <= 256) {\n                return string(abi.decode(data, (bytes)));\n            }\n        }\n\n        if (success && data.length == 32) {\n            uint len = 0;\n            while (len < data.length && data[len] >= 0x20 && data[len] <= 0x7E) {\n                len++;\n            }\n\n            if (len > 0) {\n                bytes memory result = new bytes(len);\n                for (uint i = 0; i < len; i++) {\n                    result[i] = data[i];\n                }\n                return string(result);\n            }\n        }\n\n        return _toHex(address(token));\n    }\n\n    function _toHex(address account) private pure returns(string memory) {\n        return _toHex(abi.encodePacked(account));\n    }\n\n    function _toHex(bytes memory data) private pure returns(string memory) {\n        bytes memory str = new bytes(2 + data.length * 2);\n        str[0] = \"0\";\n        str[1] = \"x\";\n        uint j = 2;\n        for (uint i = 0; i < data.length; i++) {\n            uint a = uint8(data[i]) >> 4;\n            uint b = uint8(data[i]) & 0x0f;\n            str[j++] = byte(uint8(a + 48 + (a/10)*39));\n            str[j++] = byte(uint8(b + 48 + (b/10)*39));\n        }\n\n        return string(str);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"../../GSN/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"@openzeppelin/contracts/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\ncontract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor () internal {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"../GSN/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/GSN/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/GSN/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 30,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/math/Math.sol\":132:800  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/math/Math.sol\":132:800  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207d7612e6e24669c16fe6a116971b8ae54c166cf19275eab61606192736c8ffef64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207d7612e6e24669c16fe6a116971b8ae54c166cf19275eab61606192736c8ffef64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x7612E6E24669C16FE6A116971B8AE54C166CF19275EAB61606192736C8FF 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "132:668:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207d7612e6e24669c16fe6a116971b8ae54c166cf19275eab61606192736c8ffef64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x7612E6E24669C16FE6A116971B8AE54C166CF19275EAB61606192736C8FF 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "132:668:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 800,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 800,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 800,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 132,
									"end": 800,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 800,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 800,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 800,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 800,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 800,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 800,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 132,
									"end": 800,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207d7612e6e24669c16fe6a116971b8ae54c166cf19275eab61606192736c8ffef64736f6c634300060c0033",
									".code": [
										{
											"begin": 132,
											"end": 800,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 132,
											"end": 800,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 132,
											"end": 800,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 132,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 132,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 800,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 800,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x6c234834003dfb86e2c23d12dfdde7cc01e78013d71b52162cb308b4873562cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0e3f39b2ec26694a42c89a5d9e489d5228f1880fcf5e375c5c975ba816e5ffe\",\"dweb:/ipfs/QmUErheHopnbBUSLDQAtWsmw6HsEvqTNp1QiBEuSJhmhHn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/math/SafeMath.sol\":622:5200  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":622:5200  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061b01763dbdedb0c60c027b7130e3fc67be4183b7a39357b7894a0179c0f729864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061b01763dbdedb0c60c027b7130e3fc67be4183b7a39357b7894a0179c0f729864736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xB017 PUSH4 0xDBDEDB0C PUSH1 0xC0 0x27 0xB7 SGT 0xE EXTCODEHASH 0xC6 PUSH28 0xE4183B7A39357B7894A0179C0F729864736F6C634300060C00330000 ",
							"sourceMap": "622:4578:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061b01763dbdedb0c60c027b7130e3fc67be4183b7a39357b7894a0179c0f729864736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xB017 PUSH4 0xDBDEDB0C PUSH1 0xC0 0x27 0xB7 SGT 0xE EXTCODEHASH 0xC6 PUSH28 0xE4183B7A39357B7894A0179C0F729864736F6C634300060C00330000 ",
							"sourceMap": "622:4578:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061b01763dbdedb0c60c027b7130e3fc67be4183b7a39357b7894a0179c0f729864736f6c634300060c0033",
									".code": [
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1345:10791  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2013:2154  constructor (string memory name, string memory symbol) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2085:2097  _name = name */\n  dup3\n  mload\n  tag_19\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2085:2090  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2085:2097  _name = name */\n  0x20\n  dup6\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2107:2123  _symbol = symbol */\n  dup1\n  mload\n  tag_21\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2107:2114  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2107:2123  _symbol = symbol */\n  0x20\n  dup5\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2133:2142  _decimals */\n  0x05\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2133:2147  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2145:2147  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2133:2147  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1345:10791  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_29)\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1345:10791  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2219:2300  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4255:4421  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_23\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3262:3360  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4881:5198  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_28\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3121:3202  function decimals() public view returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5593:5808  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3418:3535  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_9:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_36\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2413:2498  function symbol() public view returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_38\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6295:6561  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3738:3910  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3968:4117  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_51\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2219:2300  function name() public view returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2288:2293  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2281:2293  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2256:2269  string memory */\n      0x60\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2281:2293  return _name */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2288:2293  _name */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2281:2293  return _name */\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2288:2293  _name */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2281:2293  return _name */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2219:2300  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4255:4421  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4338:4342  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4354:4393  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4363:4375  _msgSender() */\n      tag_58\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4363:4373  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4363:4375  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4377:4384  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4386:4392  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4354:4362  _approve */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4354:4393  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4410:4414  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4255:4421  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3262:3360  function totalSupply() public view override returns (uint256) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3341:3353  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3262:3360  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4881:5198  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4987:4991  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5003:5039  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5013:5019  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5021:5030  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5032:5038  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5003:5012  _transfer */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5003:5039  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5049:5170  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5058:5064  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5066:5078  _msgSender() */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5066:5076  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5066:5078  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5169  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5118:5124  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5169  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5099  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5091  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5099  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5100:5112  _msgSender() */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5100:5110  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5100:5112  _msgSender() */\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5113  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5169  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5117  _allowances[sender][_msgSender()].sub */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5169  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5049:5057  _approve */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5049:5170  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5187:5191  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4881:5198  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3121:3202  function decimals() public view returns (uint8) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3195  _decimals */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3121:3202  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5593:5808  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5681:5685  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5697:5780  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5718  _msgSender() */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5716  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5718  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5720:5727  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5779  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5768:5778  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5740  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5754  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5741:5753  _msgSender() */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5741:5751  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5741:5753  _msgSender() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5754  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5763  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5767  _allowances[_msgSender()][spender].add */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5779  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3418:3535  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3510:3528  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3484:3491  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3510:3528  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3418:3535  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2413:2498  function symbol() public view returns (string memory) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2484:2491  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2477:2491  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2452:2465  string memory */\n      0x60\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2477:2491  return _symbol */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2484:2491  _symbol */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2477:2491  return _symbol */\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2484:2491  _symbol */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2477:2491  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6295:6561  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6388:6392  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6404:6533  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6413:6425  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6413:6423  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6413:6425  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6427:6434  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6532  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6532  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6447  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6461  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6448:6460  _msgSender() */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6448:6458  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6448:6460  _msgSender() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6461  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6470  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6532  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6474  _allowances[_msgSender()][spender].sub */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6532  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3738:3910  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3824:3828  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3840:3882  _transfer(_msgSender(), recipient, amount) */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3850:3862  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3850:3860  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3850:3862  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3864:3873  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3875:3881  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3840:3849  _transfer */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3840:3882  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3968:4117  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4083:4101  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4057:4064  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4083:4101  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4083:4094  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4083:4101  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4083:4110  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3968:4117  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/GSN/Context.sol\":677:687  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9359:9699  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9460:9479  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9452:9520  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9538:9559  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9530:9598  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9609:9627  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9609:9620  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9609:9627  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9609:9636  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9609:9645  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9660:9692  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9359:9699  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7035:7565  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7140:7160  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7132:7202  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7220:7243  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7212:7283  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7341  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7315:7321  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7323:7332  recipient */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7334:7340  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7314  _beforeTokenTransfer */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7341  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7443  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7394:7400  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7443  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7389  _balances[sender] */\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7381  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7389  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7443  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7393  _balances[sender].sub */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7443  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7352:7369  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7352:7361  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7352:7369  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7352:7443  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7496  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  _balances[recipient].add(amount) */\n      tag_101\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7501:7507  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7500  _balances[recipient].add */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7453:7473  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7453:7462  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7453:7473  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7453:7508  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7523:7558  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7453:7473  _balances[recipient] */\n      swap2\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7523:7558  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7035:7565  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1832:1839  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1867:1879  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1859:1865  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1851:1880  require(b <= a, errorMessage) */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1902:1907  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":932:939  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":963:968  a + b */\n      dup3\n      dup3\n      add\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":986:992  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":978:1024  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1042:1043  c */\n      swap4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10697:10789  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212204db1b861b21c68d008f0c4f1869b279c2308034f40368f926c9bf886dccbc50c64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405162000c6238038062000c628339818101604052604081101561003557600080fd5b810190808051604051939291908464010000000082111561005557600080fd5b90830190602082018581111561006a57600080fd5b825164010000000081118282018810171561008457600080fd5b82525081516020918201929091019080838360005b838110156100b1578181015183820152602001610099565b50505050905090810190601f1680156100de5780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561010157600080fd5b90830190602082018581111561011657600080fd5b825164010000000081118282018810171561013057600080fd5b82525081516020918201929091019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b50604052505082516101a4915060039060208501906101cd565b5080516101b89060049060208401906101cd565b50506005805460ff1916601217905550610260565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020e57805160ff191683800117855561023b565b8280016001018555821561023b579182015b8281111561023b578251825591602001919060010190610220565b5061024792915061024b565b5090565b5b80821115610247576000815560010161024c565b6109f280620002706000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60025490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107be565b610577565b5060019392505050565b60055460ff1690565b600061036361040f610573565b846103ea8560016000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610855565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea856040518060600160405280602581526020016109986025913960016000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107be565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6106f88383836108b6565b61073581604051806060016040528060268152602001610901602691396001600160a01b03861660009081526020819052604090205491906107be565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107649082610855565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204db1b861b21c68d008f0c4f1869b279c2308034f40368f926c9bf886dccbc50c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC62 CODESIZE SUB DUP1 PUSH3 0xC62 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x99 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD PUSH2 0x1A4 SWAP2 POP PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1CD JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1CD JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH2 0x260 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x20E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x23B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x23B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x23B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x220 JUMP JUMPDEST POP PUSH2 0x247 SWAP3 SWAP2 POP PUSH2 0x24B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x9F2 DUP1 PUSH3 0x270 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x450 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x548 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x927 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40F PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x420 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D9 PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x998 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x541 PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x974 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8BC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP4 DUP4 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x901 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212204DB1 0xB8 PUSH2 0xB21C PUSH9 0xD008F0C4F1869B279C 0x23 ADDMOD SUB 0x4F BLOCKHASH CALLDATASIZE DUP16 SWAP3 PUSH13 0x9BF886DCCBC50C64736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1345:9446:4:-:0;;;2013:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2013:141:4;;;;;;;;;;-1:-1:-1;2013:141:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2013:141:4;;;;;;;;;;-1:-1:-1;2013:141:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2013:141:4;;-1:-1:-1;;2085:12:4;;;;-1:-1:-1;2085:5:4;;:12;;;;;:::i;:::-;-1:-1:-1;2107:16:4;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2133:9:4;:14;;-1:-1:-1;;2133:14:4;2145:2;2133:14;;;-1:-1:-1;1345:9446:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1345:9446:4;;;-1:-1:-1;1345:9446:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60025490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107be565b610577565b5060019392505050565b60055460ff1690565b600061036361040f610573565b846103ea8560016000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610855565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea856040518060600160405280602581526020016109986025913960016000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107be565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6106f88383836108b6565b61073581604051806060016040528060268152602001610901602691396001600160a01b03861660009081526020819052604090205491906107be565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107649082610855565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204db1b861b21c68d008f0c4f1869b279c2308034f40368f926c9bf886dccbc50c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x450 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x548 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x927 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40F PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x420 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D9 PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x998 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x541 PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x974 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8BC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP4 DUP4 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x901 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212204DB1 0xB8 PUSH2 0xB21C PUSH9 0xD008F0C4F1869B279C 0x23 ADDMOD SUB 0x4F BLOCKHASH CALLDATASIZE DUP16 SWAP3 PUSH13 0x9BF886DCCBC50C64736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1345:9446:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4255:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4255:166:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3262:98;;;:::i;:::-;;;;;;;;;;;;;;;;4881:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4881:317:4;;;;;;;;;;;;;;;;;:::i;3121:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5593:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5593:215:4;;;;;;;;:::i;3418:117::-;;;;;;;;;;;;;;;;-1:-1:-1;3418:117:4;-1:-1:-1;;;;;3418:117:4;;:::i;2413:85::-;;;:::i;6295:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6295:266:4;;;;;;;;:::i;3738:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3738:172:4;;;;;;;;:::i;3968:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3968:149:4;;;;;;;;;;:::i;2219:81::-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;-1:-1:-1;4410:4:4;4255:166;;;;:::o;3262:98::-;3341:12;;3262:98;:::o;4881:317::-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5080:19:4;;;;;;:11;:19;;;;;;5100:12;:10;:12::i;:::-;-1:-1:-1;;;;;5080:33:4;;;;;;;;;;;;-1:-1:-1;5080:33:4;;;:89;:37;:89::i;:::-;5049:8;:121::i;:::-;-1:-1:-1;5187:4:4;4881:317;;;;;:::o;3121:81::-;3186:9;;;;3121:81;:::o;5593:215::-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;-1:-1:-1;;;;;5729:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;5729:25:4;;;:34;;;;;;;;;;;:38;:50::i;3418:117::-;-1:-1:-1;;;;;3510:18:4;3484:7;3510:18;;;;;;;;;;;;3418:117::o;2413:85::-;2484:7;2477:14;;;;;;;;-1:-1:-1;;2477:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:13;;2477:14;;2484:7;;2477:14;;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;6295:266;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;-1:-1:-1;;;;;6436:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6436:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;3968:149::-;-1:-1:-1;;;;;4083:18:4;;;4057:7;4083:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3968:149::o;590:104:0:-;677:10;590:104;:::o;9359:340:4:-;-1:-1:-1;;;;;9460:19:4;;9452:68;;;;-1:-1:-1;;;9452:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9538:21:4;;9530:68;;;;-1:-1:-1;;;9530:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9609:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9660:32;;;;;;;;;;;;;;;;;9359:340;;;:::o;7035:530::-;-1:-1:-1;;;;;7140:20:4;;7132:70;;;;-1:-1:-1;;;7132:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7220:23:4;;7212:71;;;;-1:-1:-1;;;7212:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7372:17:4;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7352:17:4;;;:9;:17;;;;;;;;;;;:91;;;;7476:20;;;;;;;:32;;7501:6;7476:24;:32::i;:::-;-1:-1:-1;;;;;7453:20:4;;;:9;:20;;;;;;;;;;;;:55;;;;7523:35;;;;;;;7453:20;;7523:35;;;;;;;;;;;;;7035:530;;;:::o;1746:187:3:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:3;;;1746:187::o;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:3:o;10697:92:4:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "509200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1167",
								"decimals()": "1102",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2114,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2107,
									"end": 2114,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2133,
									"end": 2142,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2133,
									"end": 2147,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2133,
									"end": 2147,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2133,
									"end": 2147,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2145,
									"end": 2147,
									"name": "PUSH",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2133,
									"end": 2147,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2133,
									"end": 2147,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2133,
									"end": 2147,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 10791,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204db1b861b21c68d008f0c4f1869b279c2308034f40368f926c9bf886dccbc50c64736f6c634300060c0033",
									".code": [
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 10791,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2269,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2256,
											"end": 2269,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4342,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4363,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4377,
											"end": 4384,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4386,
											"end": 4392,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4354,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4354,
											"end": 4393,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4354,
											"end": 4393,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4354,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4410,
											"end": 4414,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3353,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3341,
											"end": 3353,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4987,
											"end": 4991,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5013,
											"end": 5019,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5021,
											"end": 5030,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5032,
											"end": 5038,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5003,
											"end": 5039,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5003,
											"end": 5039,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5003,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5066,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5066,
											"end": 5078,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5066,
											"end": 5078,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5066,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5118,
											"end": 5124,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH data",
											"source": 4,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5100,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5100,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5100,
											"end": 5112,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5100,
											"end": 5112,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5100,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5049,
											"end": 5170,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5049,
											"end": 5170,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5049,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5187,
											"end": 5191,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5681,
											"end": 5685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5697,
											"end": 5780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5706,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5706,
											"end": 5718,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5706,
											"end": 5718,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5706,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5727,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5768,
											"end": 5778,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5740,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5741,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5741,
											"end": 5753,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5741,
											"end": 5753,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5741,
											"end": 5753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5729,
											"end": 5779,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2465,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2452,
											"end": 2465,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6388,
											"end": 6392,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6404,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6413,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6413,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6413,
											"end": 6425,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6413,
											"end": 6425,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6413,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6427,
											"end": 6434,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH data",
											"source": 4,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6447,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6448,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6448,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6448,
											"end": 6460,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6448,
											"end": 6460,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6448,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3824,
											"end": 3828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3850,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3850,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3850,
											"end": 3862,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3850,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 3873,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3840,
											"end": 3882,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4094,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 677,
											"end": 687,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 590,
											"end": 694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9359,
											"end": 9699,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9359,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9460,
											"end": 9479,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9460,
											"end": 9479,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH data",
											"source": 4,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9538,
											"end": 9559,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9538,
											"end": 9559,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH data",
											"source": 4,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9620,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9645,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9645,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9699,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7035,
											"end": 7565,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7035,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7160,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7140,
											"end": 7160,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH data",
											"source": 4,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7220,
											"end": 7243,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7243,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH data",
											"source": 4,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7315,
											"end": 7321,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7323,
											"end": 7332,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7334,
											"end": 7340,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7294,
											"end": 7341,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7294,
											"end": 7341,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7294,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7394,
											"end": 7400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH data",
											"source": 4,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7361,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7443,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7443,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7443,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7501,
											"end": 7507,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7508,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7508,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7508,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7565,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 932,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 963,
											"end": 968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 963,
											"end": 968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10697,
											"end": 10789,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 10697,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10697,
											"end": 10789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10697,
											"end": 10789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10697,
											"end": 10789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10697,
											"end": 10789,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf204d98eef08edacf5a02a2af1516ea4febdb6aba7a1ae5ac8deb6e568fd3dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4dea62bffbd180772a6cfe7cb90e3a045c52d6b502bdb2fdff83193da42d8d0\",\"dweb:/ipfs/QmW8qGZ5nngajmv5Aamdrpkeuq7S5YCVaR7rtcqNekKHtK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 421,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 429,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 431,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 433,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 435,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":608:3712  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":608:3712  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220afd878feba416504bd21596f1fa56bf0f55b19f837bbd3973a7593c4a40b53bf64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220afd878feba416504bd21596f1fa56bf0f55b19f837bbd3973a7593c4a40b53bf64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xD8 PUSH25 0xFEBA416504BD21596F1FA56BF0F55B19F837BBD3973A7593C4 LOG4 SIGNEXTEND MSTORE8 0xBF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "608:3104:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220afd878feba416504bd21596f1fa56bf0f55b19f837bbd3973a7593c4a40b53bf64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xD8 PUSH25 0xFEBA416504BD21596F1FA56BF0F55B19F837BBD3973A7593C4 LOG4 SIGNEXTEND MSTORE8 0xBF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "608:3104:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220afd878feba416504bd21596f1fa56bf0f55b19f837bbd3973a7593c4a40b53bf64736f6c634300060c0033",
									".code": [
										{
											"begin": 608,
											"end": 3712,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7de652204c2ee291a61aa984103dfc7ae4392d651fbbc44a0079caee7c69a3\",\"dweb:/ipfs/Qmcw1cQnq9eWDnrCBwU3TNyqLfTMUFg5YKpYUkELoMPuUE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":126:6077  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":126:6077  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e1519a9c50ed8b8b7b31072dc839456d61ddbf24cb4ef529705675e2d8fd0ea64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e1519a9c50ed8b8b7b31072dc839456d61ddbf24cb4ef529705675e2d8fd0ea64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ISZERO NOT 0xA9 0xC5 0xE 0xD8 0xB8 0xB7 0xB3 LT PUSH19 0xDC839456D61DDBF24CB4EF529705675E2D8FD0 0xEA PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "126:5951:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e1519a9c50ed8b8b7b31072dc839456d61ddbf24cb4ef529705675e2d8fd0ea64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ISZERO NOT 0xA9 0xC5 0xE 0xD8 0xB8 0xB7 0xB3 LT PUSH19 0xDC839456D61DDBF24CB4EF529705675E2D8FD0 0xEA PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "126:5951:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 6077,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 126,
									"end": 6077,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e1519a9c50ed8b8b7b31072dc839456d61ddbf24cb4ef529705675e2d8fd0ea64736f6c634300060c0033",
									".code": [
										{
											"begin": 126,
											"end": 6077,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 126,
											"end": 6077,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 126,
											"end": 6077,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 126,
											"end": 6077,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 6077,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 6077,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 126,
											"end": 6077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 6077,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 126,
											"end": 6077,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78aa63fd7fbb8df2942b6c6e7bd89349507e306edbd5909ee8d9575c31be57e5\",\"dweb:/ipfs/Qmf6z9KWKCJCfEVokgTBhBVq5yHtE6is31N8AV5BHdMkqQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1413,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Mooniswap.sol": {
				"IFactory": {
					"abi": [
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"fee()": "ddca3f43"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mooniswap.sol\":\"IFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x6c234834003dfb86e2c23d12dfdde7cc01e78013d71b52162cb308b4873562cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0e3f39b2ec26694a42c89a5d9e489d5228f1880fcf5e375c5c975ba816e5ffe\",\"dweb:/ipfs/QmUErheHopnbBUSLDQAtWsmw6HsEvqTNp1QiBEuSJhmhHn\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf204d98eef08edacf5a02a2af1516ea4febdb6aba7a1ae5ac8deb6e568fd3dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4dea62bffbd180772a6cfe7cb90e3a045c52d6b502bdb2fdff83193da42d8d0\",\"dweb:/ipfs/QmW8qGZ5nngajmv5Aamdrpkeuq7S5YCVaR7rtcqNekKHtK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7de652204c2ee291a61aa984103dfc7ae4392d651fbbc44a0079caee7c69a3\",\"dweb:/ipfs/Qmcw1cQnq9eWDnrCBwU3TNyqLfTMUFg5YKpYUkELoMPuUE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78aa63fd7fbb8df2942b6c6e7bd89349507e306edbd5909ee8d9575c31be57e5\",\"dweb:/ipfs/Qmf6z9KWKCJCfEVokgTBhBVq5yHtE6is31N8AV5BHdMkqQ\"]},\"contracts/Mooniswap.sol\":{\"keccak256\":\"0xc3e852bd2528885b12a531d7b710bc73eb9937f036962e48c8d75a3364e3e940\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e11db3da7d6591f9b17ffd4ad0864c9b1098888dad5b2a00c314f24b19447905\",\"dweb:/ipfs/QmU5NQybwzynQtuaKhTik8K2P8MTNhuPKxoMD2rK9ZTs26\"]},\"contracts/libraries/Sqrt.sol\":{\"keccak256\":\"0x5674ed7d1bb3655d9d6698ff6175cb23261d8cf837915d0af70404aa019b5267\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b79b00374537e2b24bb4b0ef1e4f86e67f7c789201d2cfae430beb11d4deade3\",\"dweb:/ipfs/QmWDXiQrtSHbbAQctNjCo9w3zG4woPQBxz8kGskNDZ3EgZ\"]},\"contracts/libraries/UniERC20.sol\":{\"keccak256\":\"0x003b8d0112322ce396eff4ce68db536a75cc0fe9f9ca8c1942de1c7d812dd46e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362c0cc026bb634bc8f9925b4881d36bec8e35d00b47b3322acefe3024de946c\",\"dweb:/ipfs/QmVaGA8J9EqH2A1c7Aq1WUqQQrqdKak4m9yEaQB2bBo2d2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Mooniswap": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "srcBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "dstBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "referral",
									"type": "address"
								}
							],
							"name": "Swapped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BASE_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FEE_DENOMINATOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REFERRAL_SHARE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decayPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "minAmounts",
									"type": "uint256[]"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "fairSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "contract IFactory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getBalanceForAddition",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getBalanceForRemoval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getReturn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokens",
							"outputs": [
								{
									"internalType": "contract IERC20[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20[]",
									"name": "assets",
									"type": "address[]"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"name": "isToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rescueFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minReturn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "referral",
									"type": "address"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokens",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"name": "virtualBalancesForAddition",
							"outputs": [
								{
									"internalType": "uint216",
									"name": "balance",
									"type": "uint216"
								},
								{
									"internalType": "uint40",
									"name": "time",
									"type": "uint40"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"name": "virtualBalancesForRemoval",
							"outputs": [
								{
									"internalType": "uint216",
									"name": "balance",
									"type": "uint216"
								},
								{
									"internalType": "uint40",
									"name": "time",
									"type": "uint40"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"name": "volumes",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "confirmed",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "result",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "minReturns",
									"type": "uint256[]"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2013:2154  constructor (string memory name, string memory symbol) public {... */\n  0x07\n    /* \"contracts/Mooniswap.sol\":1561:12794  contract Mooniswap is ERC20, ReentrancyGuard, Ownable {... */\n  0x80\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2013:2154  constructor (string memory name, string memory symbol) public {... */\n  dup2\n  dup2\n  mstore\n  shl(0xc8, 0x4c502d4e414d45)\n  0xa0\n  swap1\n  dup2\n  mstore\n  0x0100\n    /* \"contracts/Mooniswap.sol\":1561:12794  contract Mooniswap is ERC20, ReentrancyGuard, Ownable {... */\n  0x40\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2013:2154  constructor (string memory name, string memory symbol) public {... */\n  mstore\n  0x09\n  0xc0\n  swap1\n  dup2\n  mstore\n  mstore(0xe0, shl(0xb8, 0x534f4d455448494e47))\n    /* \"contracts/Mooniswap.sol\":1561:12794  contract Mooniswap is ERC20, ReentrancyGuard, Ownable {... */\n  swap2\n  swap3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2085:2097  _name = name */\n  tag_6\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2085:2090  _name */\n  0x03\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2085:2097  _name = name */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2107:2123  _symbol = symbol */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2107:2114  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2107:2123  _symbol = symbol */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2133:2142  _decimals */\n  0x05\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2133:2147  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2145:2147  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2133:2147  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1743:1750  _status */\n  0x06\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1743:1765  _status = _NOT_ENTERED */\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2133:2142  _decimals */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":885:897  _msgSender() */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":885:895  _msgSender */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":885:897  _msgSender() */\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":907:913  _owner */\n  0x07\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":907:925  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:983  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":907:925  _owner = msgSender */\n  swap2\n  swap3\n  pop\n  swap1\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:983  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup3\n  swap1\n  log3\n  pop\n    /* \"contracts/Mooniswap.sol\":3259:3266  factory */\n  0x09\n    /* \"contracts/Mooniswap.sol\":3259:3289  factory = IFactory(msg.sender) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Mooniswap.sol\":3278:3288  msg.sender */\n  caller\n    /* \"contracts/Mooniswap.sol\":3259:3289  factory = IFactory(msg.sender) */\n  or\n  swap1\n  sstore\n    /* \"contracts/Mooniswap.sol\":3355:3364  chainid() */\n  chainid\n    /* \"contracts/Mooniswap.sol\":3453:3548  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"contracts/Mooniswap.sol\":3582:3588  name() */\n  tag_14\n    /* \"contracts/Mooniswap.sol\":3582:3586  name */\n  tag_15\n    /* \"contracts/Mooniswap.sol\":3582:3588  name() */\n  jump\t// in\ntag_14:\n    /* \"contracts/Mooniswap.sol\":3566:3590  keccak256(bytes(name())) */\n  dup1\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  keccak256\n    /* \"contracts/Mooniswap.sol\":3618:3628  bytes('1') */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"contracts/Mooniswap.sol\":3425:3699  abi.encode(... */\n  dup1\n  mload\n  dup1\n  dup5\n  add\n  swap5\n  swap1\n  swap5\n  mstore\n  dup4\n  dup2\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"contracts/Mooniswap.sol\":3608:3629  keccak256(bytes('1')) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"contracts/Mooniswap.sol\":3425:3699  abi.encode(... */\n  0x60\n  dup5\n  add\n  mstore\n  0x80\n  dup4\n  add\n  swap4\n  swap1\n  swap4\n  mstore\n    /* \"contracts/Mooniswap.sol\":3680:3684  this */\n  address\n    /* \"contracts/Mooniswap.sol\":3425:3699  abi.encode(... */\n  0xa0\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup4\n  mload\n  dup1\n  dup5\n  sub\n  swap1\n  swap2\n  add\n  dup2\n  mstore\n  0xc0\n  swap1\n  swap3\n  add\n  swap1\n  swap3\n  mstore\n    /* \"contracts/Mooniswap.sol\":3402:3709  keccak256(... */\n  dup1\n  mload\n  swap2\n  add\n  keccak256\n    /* \"contracts/Mooniswap.sol\":3383:3399  DOMAIN_SEPARATOR */\n  0x08\n    /* \"contracts/Mooniswap.sol\":3383:3709  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n    /* \"contracts/Mooniswap.sol\":1561:12794  contract Mooniswap is ERC20, ReentrancyGuard, Ownable {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/GSN/Context.sol\":677:687  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2219:2300  function name() public view returns (string memory) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2288:2293  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2281:2293  return _name */\n  dup1\n  sload\n  0x40\n  dup1\n  mload\n  0x20\n  0x1f\n  0x02\n  not(0x00)\n  0x0100\n  0x01\n  dup9\n  and\n  iszero\n  mul\n  add\n  swap1\n  swap6\n  and\n  swap5\n  swap1\n  swap5\n  div\n  swap4\n  dup5\n  add\n  dup2\n  swap1\n  div\n  dup2\n  mul\n  dup3\n  add\n  dup2\n  add\n  swap1\n  swap3\n  mstore\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2256:2269  string memory */\n  0x60\n  swap4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2281:2293  return _name */\n  swap1\n  swap3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2288:2293  _name */\n  swap1\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2281:2293  return _name */\n  dup4\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2288:2293  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2281:2293  return _name */\n  dup3\n  dup1\n  iszero\n  tag_19\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_20\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  0x20\n  add\n  swap2\n  jump(tag_19)\ntag_20:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_21:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_21\n  jumpi\n  dup3\n  swap1\n  sub\n  0x1f\n  and\n  dup3\n  add\n  swap2\ntag_19:\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2219:2300  function name() public view returns (string memory) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/Mooniswap.sol\":1561:12794  contract Mooniswap is ERC20, ReentrancyGuard, Ownable {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_23\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_25)\ntag_23:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_25\n  jumpi\n  swap2\n  dup3\n  add\ntag_24:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_24)\ntag_25:\n  pop\n  tag_26\n  swap3\n  swap2\n  pop\n  tag_27\n  jump\t// in\ntag_26:\n  pop\n  swap1\n  jump\t// out\ntag_27:\ntag_28:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_26\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_28)\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Mooniswap.sol\":1561:12794  contract Mooniswap is ERC20, ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xc45a0155\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xe7ff42c9\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf223885a\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_39\n      jumpi\n      jump(tag_1)\n    tag_42:\n      dup1\n      0xc45a0155\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd5bcb9b5\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd73792a9\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd7d3aab5\n      eq\n      tag_34\n      jumpi\n      jump(tag_1)\n    tag_41:\n      dup1\n      0xa9059cbb\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xaa6ca808\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xb1ec4c40\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xb21b5a21\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xbaf13a0a\n      eq\n      tag_29\n      jumpi\n      jump(tag_1)\n    tag_43:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa224cee7\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_40:\n      dup1\n      0x39509351\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x6edc2c09\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x6edc2c09\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x78e3214f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_45:\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x48d67e1b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4f64b2be\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5915d806\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5ed9156d\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_44:\n      dup1\n      0x1e1401f8\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x1e1401f8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_46:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19f37361\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2219:2300  function name() public view returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_50:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_50)\n    tag_52:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_53:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4255:4421  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_57\n      jump\t// in\n    tag_55:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3262:3360  function totalSupply() public view override returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Mooniswap.sol\":2939:2977  mapping(IERC20 => bool) public isToken */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_64\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":4925:5122  function getReturn(IERC20 src, IERC20 dst, uint256 amount) external view returns(uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4881:5198  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_72\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":2722:2830  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_59\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3121:3202  function decimals() public view returns (uint8) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Mooniswap.sol\":2581:2612  bytes32 public DOMAIN_SEPARATOR */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_59\n      tag_81\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5593:5808  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_85\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":4348:4453  function decayPeriod() external pure returns(uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_59\n      tag_88\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":2867:2889  IERC20[] public tokens */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      calldataload\n      tag_92\n      jump\t// in\n    tag_90:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Mooniswap.sol\":7723:8540  function withdraw(uint256 amount, uint256[] memory minReturns) external nonReentrant {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      dup2\n      calldataload\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_99\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_94:\n      stop\n        /* \"contracts/Mooniswap.sol\":3112:3183  mapping(IERC20 => VirtualBalance.Data) public virtualBalancesForRemoval */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_103\n      jump\t// in\n    tag_101:\n      0x40\n      dup1\n      mload\n      sub(shl(0xd8, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      dup4\n      mstore\n      0xffffffffff\n      swap1\n      swap2\n      and\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"contracts/Mooniswap.sol\":3034:3106  mapping(IERC20 => VirtualBalance.Data) public virtualBalancesForAddition */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_107\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3418:3535  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_111\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1689:1834  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_94\n      tag_114\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":11125:11710  function rescueFunds(IERC20 token, uint256 amount) external nonReentrant onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_118\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":2895:2933  mapping(address => uint) public nonces */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_122\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1066:1143  function owner() public view returns (address) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_90\n      tag_125\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2413:2498  function symbol() public view returns (string memory) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_48\n      tag_128\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":3727:4159  function initialize(IERC20[] memory assets) external {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_139\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6295:6561  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_143\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3738:3910  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_147\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":4252:4342  function getTokens() external view returns(IERC20[] memory) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      dup2\n      add\n      swap2\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_151:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_153\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_151)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Mooniswap.sol\":2983:3028  mapping(IERC20 => SwapVolumes) public volumes */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_157\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      dup4\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Mooniswap.sol\":2363:2406  uint256 public constant REFERRAL_SHARE = 20 */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_59\n      tag_160\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":2443:2485  uint256 public constant BASE_SUPPLY = 1000 */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_59\n      tag_163\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":2838:2861  IFactory public factory */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      tag_90\n      tag_166\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":12110:12792  function permit(address _owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xe0\n      dup2\n      lt\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_170\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":8546:11119  function swap(IERC20 src, IERC20 dst, uint256 amount, uint256 minReturn, address referral) external payable nonReentrant returns(uint256 result) {... */\n    tag_32:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      dup3\n      and\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      swap2\n      0x60\n      dup2\n      add\n      calldataload\n      swap2\n      0x80\n      swap1\n      swap2\n      add\n      calldataload\n      and\n      tag_173\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":2525:2571  uint256 public constant FEE_DENOMINATOR = 1e18 */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_59\n      tag_176\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":4459:4687  function getBalanceForAddition(IERC20 token) public view returns(uint256) {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_180\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3968:4117  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_184\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":4165:4246  function fee() public view returns(uint256) {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      tag_59\n      tag_187\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":4693:4919  function getBalanceForRemoval(IERC20 token) public view returns(uint256) {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_191\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":5128:7717  function deposit(uint256[] calldata amounts, uint256[] calldata minAmounts) external payable nonReentrant returns(uint256 fairSupply) {... */\n    tag_38:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      swap2\n      swap4\n      swap1\n      swap3\n      swap1\n      swap2\n      0x20\n      dup2\n      add\n      swap1\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_200\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1983:2223  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_204\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2219:2300  function name() public view returns (string memory) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2288:2293  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2281:2293  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2256:2269  string memory */\n      0x60\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2281:2293  return _name */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2288:2293  _name */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2281:2293  return _name */\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2288:2293  _name */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2281:2293  return _name */\n      dup3\n      dup1\n      iszero\n      tag_206\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_207\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_206)\n    tag_207:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_208:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_208\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2219:2300  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4255:4421  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4338:4342  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4354:4393  _approve(_msgSender(), spender, amount) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4363:4375  _msgSender() */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4363:4373  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4363:4375  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4377:4384  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4386:4392  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4354:4362  _approve */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4354:4393  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_210:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4410:4414  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4255:4421  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_209:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3262:3360  function totalSupply() public view override returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3341:3353  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3262:3360  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":2939:2977  mapping(IERC20 => bool) public isToken */\n    tag_64:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":4925:5122  function getReturn(IERC20 src, IERC20 dst, uint256 amount) external view returns(uint256) {... */\n    tag_68:\n        /* \"contracts/Mooniswap.sol\":5006:5013  uint256 */\n      0x00\n        /* \"contracts/Mooniswap.sol\":5032:5115  _getReturn(src, dst, amount, getBalanceForAddition(src), getBalanceForRemoval(dst)) */\n      tag_216\n        /* \"contracts/Mooniswap.sol\":5043:5046  src */\n      dup5\n        /* \"contracts/Mooniswap.sol\":5048:5051  dst */\n      dup5\n        /* \"contracts/Mooniswap.sol\":5053:5059  amount */\n      dup5\n        /* \"contracts/Mooniswap.sol\":5061:5087  getBalanceForAddition(src) */\n      tag_217\n        /* \"contracts/Mooniswap.sol\":5083:5086  src */\n      dup9\n        /* \"contracts/Mooniswap.sol\":5061:5082  getBalanceForAddition */\n      tag_180\n        /* \"contracts/Mooniswap.sol\":5061:5087  getBalanceForAddition(src) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/Mooniswap.sol\":5089:5114  getBalanceForRemoval(dst) */\n      tag_218\n        /* \"contracts/Mooniswap.sol\":5110:5113  dst */\n      dup9\n        /* \"contracts/Mooniswap.sol\":5089:5109  getBalanceForRemoval */\n      tag_191\n        /* \"contracts/Mooniswap.sol\":5089:5114  getBalanceForRemoval(dst) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/Mooniswap.sol\":5032:5042  _getReturn */\n      tag_219\n        /* \"contracts/Mooniswap.sol\":5032:5115  _getReturn(src, dst, amount, getBalanceForAddition(src), getBalanceForRemoval(dst)) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/Mooniswap.sol\":5025:5115  return _getReturn(src, dst, amount, getBalanceForAddition(src), getBalanceForRemoval(dst)) */\n      swap5\n        /* \"contracts/Mooniswap.sol\":4925:5122  function getReturn(IERC20 src, IERC20 dst, uint256 amount) external view returns(uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4881:5198  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4987:4991  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5003:5039  _transfer(sender, recipient, amount) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5013:5019  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5021:5030  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5032:5038  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5003:5012  _transfer */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5003:5039  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5049:5170  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5058:5064  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5066:5078  _msgSender() */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5066:5076  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5066:5078  _msgSender() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5169  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5118:5124  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5169  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5099  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5091  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5099  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5100:5112  _msgSender() */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5100:5110  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5100:5112  _msgSender() */\n      jump\t// in\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5113  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5169  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5117  _allowances[sender][_msgSender()].sub */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5080:5169  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5049:5057  _approve */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5049:5170  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_223:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5187:5191  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4881:5198  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":2722:2830  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_75:\n        /* \"contracts/Mooniswap.sol\":2764:2830  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/Mooniswap.sol\":2722:2830  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3121:3202  function decimals() public view returns (uint8) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3195  _decimals */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3121:3202  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":2581:2612  bytes32 public DOMAIN_SEPARATOR */\n    tag_81:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5593:5808  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5681:5685  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5697:5780  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5718  _msgSender() */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5716  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5718  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5720:5727  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5779  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5768:5778  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5740  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5754  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5741:5753  _msgSender() */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5741:5751  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5741:5753  _msgSender() */\n      jump\t// in\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5754  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5763  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5767  _allowances[_msgSender()][spender].add */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5729:5779  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":4348:4453  function decayPeriod() external pure returns(uint256) {... */\n    tag_88:\n        /* \"contracts/Mooniswap.sol\":643:652  5 minutes */\n      0x012c\n        /* \"contracts/Mooniswap.sol\":4348:4453  function decayPeriod() external pure returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":2867:2889  IERC20[] public tokens */\n    tag_92:\n      0x0a\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_236\n      jumpi\n      invalid\n    tag_236:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":7723:8540  function withdraw(uint256 amount, uint256[] memory minReturns) external nonReentrant {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2260:2267  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2260:2279  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2252:2315  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_239\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2390:2397  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2390:2408  _status = _ENTERED */\n      sstore\n        /* \"contracts/Mooniswap.sol\":7818:7837  uint256 totalSupply */\n      0x00\n        /* \"contracts/Mooniswap.sol\":7840:7853  totalSupply() */\n      tag_241\n        /* \"contracts/Mooniswap.sol\":7840:7851  totalSupply */\n      tag_60\n        /* \"contracts/Mooniswap.sol\":7840:7853  totalSupply() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/Mooniswap.sol\":7818:7853  uint256 totalSupply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":7863:7888  _burn(msg.sender, amount) */\n      tag_242\n        /* \"contracts/Mooniswap.sol\":7869:7879  msg.sender */\n      caller\n        /* \"contracts/Mooniswap.sol\":7881:7887  amount */\n      dup5\n        /* \"contracts/Mooniswap.sol\":7863:7868  _burn */\n      tag_243\n        /* \"contracts/Mooniswap.sol\":7863:7888  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/Mooniswap.sol\":7904:7910  uint i */\n      0x00\n        /* \"contracts/Mooniswap.sol\":7899:8489  for (uint i = 0; i < tokens.length; i++) {... */\n    tag_244:\n        /* \"contracts/Mooniswap.sol\":7920:7926  tokens */\n      0x0a\n        /* \"contracts/Mooniswap.sol\":7920:7933  tokens.length */\n      sload\n        /* \"contracts/Mooniswap.sol\":7916:7933  i < tokens.length */\n      dup2\n      lt\n        /* \"contracts/Mooniswap.sol\":7899:8489  for (uint i = 0; i < tokens.length; i++) {... */\n      iszero\n      tag_245\n      jumpi\n        /* \"contracts/Mooniswap.sol\":7954:7966  IERC20 token */\n      0x00\n        /* \"contracts/Mooniswap.sol\":7969:7975  tokens */\n      0x0a\n        /* \"contracts/Mooniswap.sol\":7976:7977  i */\n      dup3\n        /* \"contracts/Mooniswap.sol\":7969:7978  tokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_247\n      jumpi\n      invalid\n    tag_247:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n        /* \"contracts/Mooniswap.sol\":8014:8047  token.uniBalanceOf(address(this)) */\n      tag_249\n        /* \"contracts/Mooniswap.sol\":7969:7978  tokens[i] */\n      dup3\n        /* \"contracts/Mooniswap.sol\":8041:8045  this */\n      address\n        /* \"contracts/Mooniswap.sol\":8014:8032  token.uniBalanceOf */\n      tag_250\n        /* \"contracts/Mooniswap.sol\":8014:8047  token.uniBalanceOf(address(this)) */\n      jump\t// in\n    tag_249:\n        /* \"contracts/Mooniswap.sol\":7993:8047  uint256 preBalance = token.uniBalanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":8061:8074  uint256 value */\n      0x00\n        /* \"contracts/Mooniswap.sol\":8077:8116  preBalance.mul(amount).div(totalSupply) */\n      tag_251\n        /* \"contracts/Mooniswap.sol\":8104:8115  totalSupply */\n      dup6\n        /* \"contracts/Mooniswap.sol\":8077:8099  preBalance.mul(amount) */\n      tag_252\n        /* \"contracts/Mooniswap.sol\":7993:8047  uint256 preBalance = token.uniBalanceOf(address(this)) */\n      dup5\n        /* \"contracts/Mooniswap.sol\":8092:8098  amount */\n      dup11\n        /* \"contracts/Mooniswap.sol\":8077:8091  preBalance.mul */\n      tag_253\n        /* \"contracts/Mooniswap.sol\":8077:8099  preBalance.mul(amount) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/Mooniswap.sol\":8077:8103  preBalance.mul(amount).div */\n      swap1\n      tag_254\n        /* \"contracts/Mooniswap.sol\":8077:8116  preBalance.mul(amount).div(totalSupply) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/Mooniswap.sol\":8061:8116  uint256 value = preBalance.mul(amount).div(totalSupply) */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":8130:8166  token.uniTransfer(msg.sender, value) */\n      tag_255\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":8130:8147  token.uniTransfer */\n      dup5\n      and\n        /* \"contracts/Mooniswap.sol\":8148:8158  msg.sender */\n      caller\n        /* \"contracts/Mooniswap.sol\":8061:8116  uint256 value = preBalance.mul(amount).div(totalSupply) */\n      dup4\n        /* \"contracts/Mooniswap.sol\":8130:8147  token.uniTransfer */\n      tag_256\n        /* \"contracts/Mooniswap.sol\":8130:8166  token.uniTransfer(msg.sender, value) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/Mooniswap.sol\":8193:8203  minReturns */\n      dup6\n        /* \"contracts/Mooniswap.sol\":8193:8210  minReturns.length */\n      mload\n        /* \"contracts/Mooniswap.sol\":8188:8189  i */\n      dup5\n        /* \"contracts/Mooniswap.sol\":8188:8210  i >= minReturns.length */\n      lt\n      iszero\n        /* \"contracts/Mooniswap.sol\":8188:8236  i >= minReturns.length || value >= minReturns[i] */\n      dup1\n      tag_257\n      jumpi\n      pop\n        /* \"contracts/Mooniswap.sol\":8223:8233  minReturns */\n      dup6\n        /* \"contracts/Mooniswap.sol\":8234:8235  i */\n      dup5\n        /* \"contracts/Mooniswap.sol\":8223:8236  minReturns[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_258\n      jumpi\n      invalid\n    tag_258:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":8214:8219  value */\n      dup2\n        /* \"contracts/Mooniswap.sol\":8214:8236  value >= minReturns[i] */\n      lt\n      iszero\n        /* \"contracts/Mooniswap.sol\":8188:8236  i >= minReturns.length || value >= minReturns[i] */\n    tag_257:\n        /* \"contracts/Mooniswap.sol\":8180:8272  require(i >= minReturns.length || value >= minReturns[i], \"Mooniswap: result is not enough\") */\n      tag_259\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x4d6f6f6e69737761703a20726573756c74206973206e6f7420656e6f75676800\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_259:\n        /* \"contracts/Mooniswap.sol\":8287:8376  virtualBalancesForAddition[token].scale(preBalance, totalSupply.sub(amount), totalSupply) */\n      tag_260\n        /* \"contracts/Mooniswap.sol\":8327:8337  preBalance */\n      dup3\n        /* \"contracts/Mooniswap.sol\":8339:8362  totalSupply.sub(amount) */\n      tag_261\n        /* \"contracts/Mooniswap.sol\":8339:8350  totalSupply */\n      dup8\n        /* \"contracts/Mooniswap.sol\":8355:8361  amount */\n      dup11\n        /* \"contracts/Mooniswap.sol\":8339:8354  totalSupply.sub */\n      tag_262\n        /* \"contracts/Mooniswap.sol\":8339:8362  totalSupply.sub(amount) */\n      jump\t// in\n    tag_261:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":8287:8320  virtualBalancesForAddition[token] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":8287:8313  virtualBalancesForAddition */\n      0x0e\n        /* \"contracts/Mooniswap.sol\":8287:8320  virtualBalancesForAddition[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      swap2\n        /* \"contracts/Mooniswap.sol\":8287:8376  virtualBalancesForAddition[token].scale(preBalance, totalSupply.sub(amount), totalSupply) */\n      swap1\n        /* \"contracts/Mooniswap.sol\":8364:8375  totalSupply */\n      dup9\n        /* \"contracts/Mooniswap.sol\":8287:8326  virtualBalancesForAddition[token].scale */\n      tag_263\n        /* \"contracts/Mooniswap.sol\":8287:8376  virtualBalancesForAddition[token].scale(preBalance, totalSupply.sub(amount), totalSupply) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/Mooniswap.sol\":8390:8478  virtualBalancesForRemoval[token].scale(preBalance, totalSupply.sub(amount), totalSupply) */\n      tag_264\n        /* \"contracts/Mooniswap.sol\":8429:8439  preBalance */\n      dup3\n        /* \"contracts/Mooniswap.sol\":8441:8464  totalSupply.sub(amount) */\n      tag_265\n        /* \"contracts/Mooniswap.sol\":8441:8452  totalSupply */\n      dup8\n        /* \"contracts/Mooniswap.sol\":8457:8463  amount */\n      dup11\n        /* \"contracts/Mooniswap.sol\":8441:8456  totalSupply.sub */\n      tag_262\n        /* \"contracts/Mooniswap.sol\":8441:8464  totalSupply.sub(amount) */\n      jump\t// in\n    tag_265:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":8390:8422  virtualBalancesForRemoval[token] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":8390:8415  virtualBalancesForRemoval */\n      0x0f\n        /* \"contracts/Mooniswap.sol\":8390:8422  virtualBalancesForRemoval[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      swap2\n        /* \"contracts/Mooniswap.sol\":8390:8478  virtualBalancesForRemoval[token].scale(preBalance, totalSupply.sub(amount), totalSupply) */\n      swap1\n        /* \"contracts/Mooniswap.sol\":8466:8477  totalSupply */\n      dup9\n        /* \"contracts/Mooniswap.sol\":8390:8428  virtualBalancesForRemoval[token].scale */\n      tag_263\n        /* \"contracts/Mooniswap.sol\":8390:8478  virtualBalancesForRemoval[token].scale(preBalance, totalSupply.sub(amount), totalSupply) */\n      jump\t// in\n    tag_264:\n      pop\n      pop\n      pop\n        /* \"contracts/Mooniswap.sol\":7935:7938  i++ */\n      0x01\n      add\n        /* \"contracts/Mooniswap.sol\":7899:8489  for (uint i = 0; i < tokens.length; i++) {... */\n      jump(tag_244)\n    tag_245:\n      pop\n        /* \"contracts/Mooniswap.sol\":8504:8533  Withdrawn(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Mooniswap.sol\":8514:8524  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Mooniswap.sol\":8504:8533  Withdrawn(msg.sender, amount) */\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1628:1629  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2563:2570  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2563:2585  _status = _NOT_ENTERED */\n      sstore\n      pop\n        /* \"contracts/Mooniswap.sol\":7723:8540  function withdraw(uint256 amount, uint256[] memory minReturns) external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":3112:3183  mapping(IERC20 => VirtualBalance.Data) public virtualBalancesForRemoval */\n    tag_103:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xd8, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      shl(0xd8, 0x01)\n      swap1\n      div\n      0xffffffffff\n      and\n      dup3\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":3034:3106  mapping(IERC20 => VirtualBalance.Data) public virtualBalancesForAddition */\n    tag_107:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xd8, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      shl(0xd8, 0x01)\n      swap1\n      div\n      0xffffffffff\n      and\n      dup3\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3418:3535  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3510:3528  _balances[account] */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3484:3491  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3510:3528  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3418:3535  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_266:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1689:1834  function renounceOwnership() public virtual onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1292  _msgSender() */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1290  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1292  _msgSender() */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1270:1276  _owner */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1270:1292  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1262:1329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_269\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_269:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1779:1785  _owner */\n      sload(0x07)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1758:1798  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1795:1796  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1779:1785  _owner */\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1758:1798  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1795:1796  0 */\n      dup4\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1758:1798  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1808:1814  _owner */\n      0x07\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1808:1827  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1689:1834  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":11125:11710  function rescueFunds(IERC20 token, uint256 amount) external nonReentrant onlyOwner {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2260:2267  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2260:2279  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2252:2315  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_272\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2390:2397  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2390:2408  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1292  _msgSender() */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1290  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1292  _msgSender() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1270:1276  _owner */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1270:1292  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1262:1329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_275\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_275:\n        /* \"contracts/Mooniswap.sol\":11260:11266  tokens */\n      0x0a\n        /* \"contracts/Mooniswap.sol\":11260:11273  tokens.length */\n      sload\n        /* \"contracts/Mooniswap.sol\":11218:11243  uint256[] memory balances */\n      0x60\n      swap1\n        /* \"contracts/Mooniswap.sol\":11246:11274  new uint256[](tokens.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_277\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_277:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_278\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_278:\n      pop\n        /* \"contracts/Mooniswap.sol\":11218:11274  uint256[] memory balances = new uint256[](tokens.length) */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":11289:11295  uint i */\n      0x00\n        /* \"contracts/Mooniswap.sol\":11284:11403  for (uint i = 0; i < balances.length; i++) {... */\n    tag_279:\n        /* \"contracts/Mooniswap.sol\":11305:11313  balances */\n      dup2\n        /* \"contracts/Mooniswap.sol\":11305:11320  balances.length */\n      mload\n        /* \"contracts/Mooniswap.sol\":11301:11302  i */\n      dup2\n        /* \"contracts/Mooniswap.sol\":11301:11320  i < balances.length */\n      lt\n        /* \"contracts/Mooniswap.sol\":11284:11403  for (uint i = 0; i < balances.length; i++) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"contracts/Mooniswap.sol\":11355:11392  tokens[i].uniBalanceOf(address(this)) */\n      tag_282\n        /* \"contracts/Mooniswap.sol\":11386:11390  this */\n      address\n        /* \"contracts/Mooniswap.sol\":11355:11361  tokens */\n      0x0a\n        /* \"contracts/Mooniswap.sol\":11362:11363  i */\n      dup4\n        /* \"contracts/Mooniswap.sol\":11355:11364  tokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_283\n      jumpi\n      invalid\n    tag_283:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/Mooniswap.sol\":11355:11377  tokens[i].uniBalanceOf */\n      tag_250\n        /* \"contracts/Mooniswap.sol\":11355:11392  tokens[i].uniBalanceOf(address(this)) */\n      jump\t// in\n    tag_282:\n        /* \"contracts/Mooniswap.sol\":11341:11349  balances */\n      dup3\n        /* \"contracts/Mooniswap.sol\":11350:11351  i */\n      dup3\n        /* \"contracts/Mooniswap.sol\":11341:11352  balances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_285\n      jumpi\n      invalid\n    tag_285:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/Mooniswap.sol\":11341:11392  balances[i] = tokens[i].uniBalanceOf(address(this)) */\n      mstore\n        /* \"contracts/Mooniswap.sol\":11322:11325  i++ */\n      0x01\n      add\n        /* \"contracts/Mooniswap.sol\":11284:11403  for (uint i = 0; i < balances.length; i++) {... */\n      jump(tag_279)\n    tag_280:\n      pop\n        /* \"contracts/Mooniswap.sol\":11413:11450  token.uniTransfer(msg.sender, amount) */\n      tag_286\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":11413:11430  token.uniTransfer */\n      dup5\n      and\n        /* \"contracts/Mooniswap.sol\":11431:11441  msg.sender */\n      caller\n        /* \"contracts/Mooniswap.sol\":11443:11449  amount */\n      dup5\n        /* \"contracts/Mooniswap.sol\":11413:11430  token.uniTransfer */\n      tag_256\n        /* \"contracts/Mooniswap.sol\":11413:11450  token.uniTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/Mooniswap.sol\":11466:11472  uint i */\n      0x00\n        /* \"contracts/Mooniswap.sol\":11461:11618  for (uint i = 0; i < balances.length; i++) {... */\n    tag_287:\n        /* \"contracts/Mooniswap.sol\":11482:11490  balances */\n      dup2\n        /* \"contracts/Mooniswap.sol\":11482:11497  balances.length */\n      mload\n        /* \"contracts/Mooniswap.sol\":11478:11479  i */\n      dup2\n        /* \"contracts/Mooniswap.sol\":11478:11497  i < balances.length */\n      lt\n        /* \"contracts/Mooniswap.sol\":11461:11618  for (uint i = 0; i < balances.length; i++) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"contracts/Mooniswap.sol\":11567:11575  balances */\n      dup2\n        /* \"contracts/Mooniswap.sol\":11576:11577  i */\n      dup2\n        /* \"contracts/Mooniswap.sol\":11567:11578  balances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_290\n      jumpi\n      invalid\n    tag_290:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":11526:11563  tokens[i].uniBalanceOf(address(this)) */\n      tag_291\n        /* \"contracts/Mooniswap.sol\":11557:11561  this */\n      address\n        /* \"contracts/Mooniswap.sol\":11526:11532  tokens */\n      0x0a\n        /* \"contracts/Mooniswap.sol\":11533:11534  i */\n      dup5\n        /* \"contracts/Mooniswap.sol\":11526:11535  tokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_283\n      jumpi\n      invalid\n        /* \"contracts/Mooniswap.sol\":11526:11563  tokens[i].uniBalanceOf(address(this)) */\n    tag_291:\n        /* \"contracts/Mooniswap.sol\":11526:11578  tokens[i].uniBalanceOf(address(this)) >= balances[i] */\n      lt\n      iszero\n        /* \"contracts/Mooniswap.sol\":11518:11607  require(tokens[i].uniBalanceOf(address(this)) >= balances[i], \"Mooniswap: access denied\") */\n      tag_294\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x42, 0x135bdbdb9a5cddd85c0e881858d8d95cdcc819195b9a5959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_294:\n        /* \"contracts/Mooniswap.sol\":11499:11502  i++ */\n      0x01\n      add\n        /* \"contracts/Mooniswap.sol\":11461:11618  for (uint i = 0; i < balances.length; i++) {... */\n      jump(tag_287)\n    tag_288:\n      pop\n        /* \"contracts/Mooniswap.sol\":2481:2485  1000 */\n      0x03e8\n        /* \"contracts/Mooniswap.sol\":11635:11659  balanceOf(address(this)) */\n      tag_295\n        /* \"contracts/Mooniswap.sol\":11653:11657  this */\n      address\n        /* \"contracts/Mooniswap.sol\":11635:11644  balanceOf */\n      tag_111\n        /* \"contracts/Mooniswap.sol\":11635:11659  balanceOf(address(this)) */\n      jump\t// in\n    tag_295:\n        /* \"contracts/Mooniswap.sol\":11635:11674  balanceOf(address(this)) >= BASE_SUPPLY */\n      lt\n      iszero\n        /* \"contracts/Mooniswap.sol\":11627:11703  require(balanceOf(address(this)) >= BASE_SUPPLY, \"Mooniswap: access denied\") */\n      tag_296\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x42, 0x135bdbdb9a5cddd85c0e881858d8d95cdcc819195b9a5959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_296:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1628:1629  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2563:2570  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2563:2585  _status = _NOT_ENTERED */\n      sstore\n      pop\n        /* \"contracts/Mooniswap.sol\":11125:11710  function rescueFunds(IERC20 token, uint256 amount) external nonReentrant onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":2895:2933  mapping(address => uint) public nonces */\n    tag_122:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1066:1143  function owner() public view returns (address) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1130:1136  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1066:1143  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2413:2498  function symbol() public view returns (string memory) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2484:2491  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2477:2491  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2452:2465  string memory */\n      0x60\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2477:2491  return _symbol */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2484:2491  _symbol */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2477:2491  return _symbol */\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2484:2491  _symbol */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2477:2491  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_206\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_207\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_206)\n        /* \"contracts/Mooniswap.sol\":3727:4159  function initialize(IERC20[] memory assets) external {... */\n    tag_139:\n        /* \"contracts/Mooniswap.sol\":3804:3810  assets */\n      dup1\n        /* \"contracts/Mooniswap.sol\":3804:3817  assets.length */\n      mload\n        /* \"contracts/Mooniswap.sol\":3821:3822  2 */\n      0x02\n        /* \"contracts/Mooniswap.sol\":3804:3822  assets.length == 2 */\n      eq\n        /* \"contracts/Mooniswap.sol\":3796:3859  require(assets.length == 2, \"Mooniswap: only 2 tokens allowed\") */\n      tag_303\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4d6f6f6e69737761703a206f6e6c79203220746f6b656e7320616c6c6f776564\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_303:\n        /* \"contracts/Mooniswap.sol\":3924:3931  factory */\n      0x09\n        /* \"contracts/Mooniswap.sol\":3924:3954  factory = IFactory(msg.sender) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/Mooniswap.sol\":3943:3953  msg.sender */\n      caller\n        /* \"contracts/Mooniswap.sol\":3924:3954  factory = IFactory(msg.sender) */\n      or\n      swap1\n      sstore\n        /* \"contracts/Mooniswap.sol\":3964:3979  tokens = assets */\n      dup1\n      mload\n      tag_304\n      swap1\n        /* \"contracts/Mooniswap.sol\":3964:3970  tokens */\n      0x0a\n      swap1\n        /* \"contracts/Mooniswap.sol\":3964:3979  tokens = assets */\n      0x20\n      dup5\n      add\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n      pop\n        /* \"contracts/Mooniswap.sol\":3994:4000  uint i */\n      0x00\n        /* \"contracts/Mooniswap.sol\":3989:4153  for (uint i = 0; i < assets.length; i++) {... */\n    tag_306:\n        /* \"contracts/Mooniswap.sol\":4010:4016  assets */\n      dup2\n        /* \"contracts/Mooniswap.sol\":4010:4023  assets.length */\n      mload\n        /* \"contracts/Mooniswap.sol\":4006:4007  i */\n      dup2\n        /* \"contracts/Mooniswap.sol\":4006:4023  i < assets.length */\n      lt\n        /* \"contracts/Mooniswap.sol\":3989:4153  for (uint i = 0; i < assets.length; i++) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"contracts/Mooniswap.sol\":4053:4060  isToken */\n      0x0c\n        /* \"contracts/Mooniswap.sol\":4053:4071  isToken[assets[i]] */\n      0x00\n        /* \"contracts/Mooniswap.sol\":4061:4067  assets */\n      dup4\n        /* \"contracts/Mooniswap.sol\":4068:4069  i */\n      dup4\n        /* \"contracts/Mooniswap.sol\":4061:4070  assets[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_309\n      jumpi\n      invalid\n    tag_309:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":4053:4071  isToken[assets[i]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Mooniswap.sol\":4052:4071  !isToken[assets[i]] */\n      iszero\n        /* \"contracts/Mooniswap.sol\":4044:4103  require(!isToken[assets[i]], \"Mooniswap: duplicate tokens\") */\n      tag_310\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x4d6f6f6e69737761703a206475706c696361746520746f6b656e730000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_310:\n        /* \"contracts/Mooniswap.sol\":4138:4142  true */\n      0x01\n        /* \"contracts/Mooniswap.sol\":4117:4124  isToken */\n      0x0c\n        /* \"contracts/Mooniswap.sol\":4117:4135  isToken[assets[i]] */\n      0x00\n        /* \"contracts/Mooniswap.sol\":4125:4131  assets */\n      dup5\n        /* \"contracts/Mooniswap.sol\":4132:4133  i */\n      dup5\n        /* \"contracts/Mooniswap.sol\":4125:4134  assets[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_311\n      jumpi\n      invalid\n    tag_311:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":4117:4135  isToken[assets[i]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Mooniswap.sol\":4117:4142  isToken[assets[i]] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/Mooniswap.sol\":4025:4028  i++ */\n      add\n        /* \"contracts/Mooniswap.sol\":3989:4153  for (uint i = 0; i < assets.length; i++) {... */\n      jump(tag_306)\n    tag_307:\n      pop\n        /* \"contracts/Mooniswap.sol\":3727:4159  function initialize(IERC20[] memory assets) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6295:6561  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6388:6392  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6404:6533  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6413:6425  _msgSender() */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6413:6423  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6413:6425  _msgSender() */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6427:6434  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6532  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6532  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6447  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6461  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6448:6460  _msgSender() */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6448:6458  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6448:6460  _msgSender() */\n      jump\t// in\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6461  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6470  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6532  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6474  _allowances[_msgSender()][spender].sub */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6436:6532  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3738:3910  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3824:3828  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3840:3882  _transfer(_msgSender(), recipient, amount) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3850:3862  _msgSender() */\n      tag_319\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3850:3860  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3850:3862  _msgSender() */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3864:3873  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3875:3881  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3840:3849  _transfer */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3840:3882  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":4252:4342  function getTokens() external view returns(IERC20[] memory) {... */\n    tag_150:\n        /* \"contracts/Mooniswap.sol\":4295:4310  IERC20[] memory */\n      0x60\n        /* \"contracts/Mooniswap.sol\":4329:4335  tokens */\n      0x0a\n        /* \"contracts/Mooniswap.sol\":4322:4335  return tokens */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_322:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_322\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":4252:4342  function getTokens() external view returns(IERC20[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":2983:3028  mapping(IERC20 => SwapVolumes) public volumes */\n    tag_157:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x80, 0x01)\n      swap1\n      div\n      and\n      dup3\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":2363:2406  uint256 public constant REFERRAL_SHARE = 20 */\n    tag_160:\n        /* \"contracts/Mooniswap.sol\":2404:2406  20 */\n      0x14\n        /* \"contracts/Mooniswap.sol\":2363:2406  uint256 public constant REFERRAL_SHARE = 20 */\n      dup2\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":2443:2485  uint256 public constant BASE_SUPPLY = 1000 */\n    tag_163:\n        /* \"contracts/Mooniswap.sol\":2481:2485  1000 */\n      0x03e8\n        /* \"contracts/Mooniswap.sol\":2443:2485  uint256 public constant BASE_SUPPLY = 1000 */\n      dup2\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":2838:2861  IFactory public factory */\n    tag_166:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n      dup2\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":12110:12792  function permit(address _owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_170:\n        /* \"contracts/Mooniswap.sol\":12256:12271  block.timestamp */\n      timestamp\n        /* \"contracts/Mooniswap.sol\":12244:12252  deadline */\n      dup5\n        /* \"contracts/Mooniswap.sol\":12244:12271  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/Mooniswap.sol\":12236:12283  require(deadline >= block.timestamp, \"EXPIRED\") */\n      tag_324\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x07\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xca, 0x11561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_324:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":12306:12320  nonces[_owner] */\n      dup1\n      dup9\n      and\n        /* \"contracts/Mooniswap.sol\":12293:12303  uint nonce */\n      0x00\n        /* \"contracts/Mooniswap.sol\":12306:12320  nonces[_owner] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":12306:12312  nonces */\n      0x0b\n        /* \"contracts/Mooniswap.sol\":12306:12320  nonces[_owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Mooniswap.sol\":12306:12322  nonces[_owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Mooniswap.sol\":12434:12450  DOMAIN_SEPARATOR */\n      sload(0x08)\n        /* \"contracts/Mooniswap.sol\":12478:12546  abi.encode(PERMIT_TYPEHASH, _owner, spender, value, nonce, deadline) */\n      dup4\n      mload\n        /* \"contracts/Mooniswap.sol\":2764:2830  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/Mooniswap.sol\":12478:12546  abi.encode(PERMIT_TYPEHASH, _owner, spender, value, nonce, deadline) */\n      dup2\n      dup8\n      add\n      mstore\n      dup1\n      dup6\n      add\n      swap8\n      swap1\n      swap8\n      mstore\n      swap7\n      dup14\n      and\n      0x60\n      dup8\n      add\n      mstore\n      0x80\n      dup7\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup7\n      add\n      dup2\n      swap1\n      mstore\n      0xc0\n      dup1\n      dup8\n      add\n      dup13\n      swap1\n      mstore\n      dup4\n      mload\n      dup1\n      dup9\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0xe0\n      dup8\n      add\n      dup5\n      mstore\n        /* \"contracts/Mooniswap.sol\":12468:12547  keccak256(abi.encode(PERMIT_TYPEHASH, _owner, spender, value, nonce, deadline)) */\n      dup1\n      mload\n      swap1\n      dup6\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"contracts/Mooniswap.sol\":12372:12561  abi.encodePacked(... */\n      0x0100\n      dup9\n      add\n      mstore\n      0x0102\n      dup8\n      add\n      swap8\n      swap1\n      swap8\n      mstore\n      0x0122\n      dup1\n      dup8\n      add\n      swap8\n      swap1\n      swap8\n      mstore\n      dup3\n      mload\n      dup1\n      dup8\n      sub\n      swap1\n      swap8\n      add\n      dup8\n      mstore\n      0x0142\n      dup7\n      add\n      dup1\n      dup5\n      mstore\n        /* \"contracts/Mooniswap.sol\":12349:12571  keccak256(... */\n      dup8\n      mload\n      swap8\n      dup6\n      add\n      swap8\n      swap1\n      swap8\n      keccak256\n        /* \"contracts/Mooniswap.sol\":12608:12634  ecrecover(digest, v, r, s) */\n      swap7\n      dup6\n      swap1\n      mstore\n      0x0162\n      dup7\n      add\n      dup1\n      dup5\n      mstore\n      dup8\n      swap1\n      mstore\n      0xff\n      dup11\n      and\n      0x0182\n      dup8\n      add\n      mstore\n      0x01a2\n      dup7\n      add\n      dup10\n      swap1\n      mstore\n      0x01c2\n      dup7\n      add\n      dup9\n      swap1\n      mstore\n      swap2\n      mload\n        /* \"contracts/Mooniswap.sol\":12306:12322  nonces[_owner]++ */\n      swap2\n      swap6\n        /* \"contracts/Mooniswap.sol\":12349:12571  keccak256(... */\n      swap5\n        /* \"contracts/Mooniswap.sol\":12306:12322  nonces[_owner]++ */\n      swap1\n      swap3\n        /* \"contracts/Mooniswap.sol\":12608:12634  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/Mooniswap.sol\":12306:12320  nonces[_owner] */\n      swap2\n      swap3\n      not(0x1f)\n        /* \"contracts/Mooniswap.sol\":12608:12634  ecrecover(digest, v, r, s) */\n      dup4\n      add\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"contracts/Mooniswap.sol\":12306:12322  nonces[_owner]++ */\n      dup6\n        /* \"contracts/Mooniswap.sol\":12608:12634  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_326\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_326:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":12652:12682  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Mooniswap.sol\":12652:12712  recoveredAddress != address(0) && recoveredAddress == _owner */\n      tag_327\n      jumpi\n      pop\n        /* \"contracts/Mooniswap.sol\":12706:12712  _owner */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":12686:12712  recoveredAddress == _owner */\n      and\n        /* \"contracts/Mooniswap.sol\":12686:12702  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":12686:12712  recoveredAddress == _owner */\n      and\n      eq\n        /* \"contracts/Mooniswap.sol\":12652:12712  recoveredAddress != address(0) && recoveredAddress == _owner */\n    tag_327:\n        /* \"contracts/Mooniswap.sol\":12644:12734  require(recoveredAddress != address(0) && recoveredAddress == _owner, \"INVALID_SIGNATURE\") */\n      tag_328\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x78, 0x494e56414c49445f5349474e4154555245)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_328:\n        /* \"contracts/Mooniswap.sol\":12753:12785  _approve(_owner, spender, value) */\n      tag_329\n        /* \"contracts/Mooniswap.sol\":12762:12768  _owner */\n      dup11\n        /* \"contracts/Mooniswap.sol\":12770:12777  spender */\n      dup11\n        /* \"contracts/Mooniswap.sol\":12779:12784  value */\n      dup11\n        /* \"contracts/Mooniswap.sol\":12753:12761  _approve */\n      tag_213\n        /* \"contracts/Mooniswap.sol\":12753:12785  _approve(_owner, spender, value) */\n      jump\t// in\n    tag_329:\n        /* \"contracts/Mooniswap.sol\":12110:12792  function permit(address _owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":8546:11119  function swap(IERC20 src, IERC20 dst, uint256 amount, uint256 minReturn, address referral) external payable nonReentrant returns(uint256 result) {... */\n    tag_173:\n        /* \"contracts/Mooniswap.sol\":8675:8689  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2260:2267  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2260:2279  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2252:2315  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_331\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2390:2397  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2390:2408  _status = _ENTERED */\n      sstore\n        /* \"contracts/Mooniswap.sol\":8723:8734  src.isETH() */\n      tag_333\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":8723:8732  src.isETH */\n      dup8\n      and\n      tag_334\n        /* \"contracts/Mooniswap.sol\":8723:8734  src.isETH() */\n      jump\t// in\n    tag_333:\n        /* \"contracts/Mooniswap.sol\":8723:8747  src.isETH() ? amount : 0 */\n      tag_335\n      jumpi\n        /* \"contracts/Mooniswap.sol\":8746:8747  0 */\n      0x00\n        /* \"contracts/Mooniswap.sol\":8723:8747  src.isETH() ? amount : 0 */\n      jump(tag_336)\n    tag_335:\n        /* \"contracts/Mooniswap.sol\":8737:8743  amount */\n      dup4\n        /* \"contracts/Mooniswap.sol\":8723:8747  src.isETH() ? amount : 0 */\n    tag_336:\n        /* \"contracts/Mooniswap.sol\":8709:8718  msg.value */\n      callvalue\n        /* \"contracts/Mooniswap.sol\":8709:8748  msg.value == (src.isETH() ? amount : 0) */\n      eq\n        /* \"contracts/Mooniswap.sol\":8701:8781  require(msg.value == (src.isETH() ? amount : 0), \"Mooniswap: wrong value usage\") */\n      tag_337\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x4d6f6f6e69737761703a2077726f6e672076616c756520757361676500000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_337:\n        /* \"contracts/Mooniswap.sol\":8792:8816  Balances memory balances */\n      tag_338\n      tag_339\n      jump\t// in\n    tag_338:\n        /* \"contracts/Mooniswap.sol\":8819:8972  Balances({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Mooniswap.sol\":8847:8911  src.uniBalanceOf(address(this)).sub(src.isETH() ? msg.value : 0) */\n      tag_340\n        /* \"contracts/Mooniswap.sol\":8883:8894  src.isETH() */\n      tag_341\n        /* \"contracts/Mooniswap.sol\":8883:8886  src */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":8883:8892  src.isETH */\n      and\n      tag_334\n        /* \"contracts/Mooniswap.sol\":8883:8894  src.isETH() */\n      jump\t// in\n    tag_341:\n        /* \"contracts/Mooniswap.sol\":8883:8910  src.isETH() ? msg.value : 0 */\n      tag_342\n      jumpi\n        /* \"contracts/Mooniswap.sol\":8909:8910  0 */\n      0x00\n        /* \"contracts/Mooniswap.sol\":8883:8910  src.isETH() ? msg.value : 0 */\n      jump(tag_343)\n    tag_342:\n        /* \"contracts/Mooniswap.sol\":8897:8906  msg.value */\n      callvalue\n        /* \"contracts/Mooniswap.sol\":8883:8910  src.isETH() ? msg.value : 0 */\n    tag_343:\n        /* \"contracts/Mooniswap.sol\":8847:8878  src.uniBalanceOf(address(this)) */\n      tag_344\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":8847:8863  src.uniBalanceOf */\n      dup13\n      and\n        /* \"contracts/Mooniswap.sol\":8872:8876  this */\n      address\n        /* \"contracts/Mooniswap.sol\":8847:8863  src.uniBalanceOf */\n      tag_250\n        /* \"contracts/Mooniswap.sol\":8847:8878  src.uniBalanceOf(address(this)) */\n      jump\t// in\n    tag_344:\n        /* \"contracts/Mooniswap.sol\":8847:8882  src.uniBalanceOf(address(this)).sub */\n      swap1\n      tag_262\n        /* \"contracts/Mooniswap.sol\":8847:8911  src.uniBalanceOf(address(this)).sub(src.isETH() ? msg.value : 0) */\n      jump\t// in\n    tag_340:\n        /* \"contracts/Mooniswap.sol\":8819:8972  Balances({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Mooniswap.sol\":8930:8961  dst.uniBalanceOf(address(this)) */\n      tag_345\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":8930:8946  dst.uniBalanceOf */\n      dup10\n      and\n        /* \"contracts/Mooniswap.sol\":8955:8959  this */\n      address\n        /* \"contracts/Mooniswap.sol\":8930:8946  dst.uniBalanceOf */\n      tag_250\n        /* \"contracts/Mooniswap.sol\":8930:8961  dst.uniBalanceOf(address(this)) */\n      jump\t// in\n    tag_345:\n        /* \"contracts/Mooniswap.sol\":8819:8972  Balances({... */\n      swap1\n      mstore\n        /* \"contracts/Mooniswap.sol\":9149:9161  balances.src */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":9109:9140  virtualBalancesForAddition[src] */\n      dup10\n      and\n        /* \"contracts/Mooniswap.sol\":9071:9097  uint256 srcAdditionBalance */\n      0x00\n        /* \"contracts/Mooniswap.sol\":9109:9140  virtualBalancesForAddition[src] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":9109:9135  virtualBalancesForAddition */\n      0x0e\n        /* \"contracts/Mooniswap.sol\":9109:9140  virtualBalancesForAddition[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Mooniswap.sol\":9109:9148  virtualBalancesForAddition[src].current */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      sload\n      sub(shl(0xd8, 0x01), 0x01)\n      dup2\n      and\n      dup3\n      mstore\n      shl(0xd8, 0x01)\n      swap1\n      div\n      0xffffffffff\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Mooniswap.sol\":9149:9161  balances.src */\n      swap3\n      swap4\n      pop\n        /* \"contracts/Mooniswap.sol\":9071:9097  uint256 srcAdditionBalance */\n      swap2\n        /* \"contracts/Mooniswap.sol\":9100:9177  Math.max(virtualBalancesForAddition[src].current(balances.src), balances.src) */\n      tag_346\n      swap2\n        /* \"contracts/Mooniswap.sol\":9109:9162  virtualBalancesForAddition[src].current(balances.src) */\n      tag_347\n      swap2\n        /* \"contracts/Mooniswap.sol\":9109:9148  virtualBalancesForAddition[src].current */\n      swap1\n      tag_348\n        /* \"contracts/Mooniswap.sol\":9109:9162  virtualBalancesForAddition[src].current(balances.src) */\n      jump\t// in\n    tag_347:\n        /* \"contracts/Mooniswap.sol\":9164:9176  balances.src */\n      dup4\n      mload\n        /* \"contracts/Mooniswap.sol\":9100:9108  Math.max */\n      tag_349\n        /* \"contracts/Mooniswap.sol\":9100:9177  Math.max(virtualBalancesForAddition[src].current(balances.src), balances.src) */\n      jump\t// in\n    tag_346:\n        /* \"contracts/Mooniswap.sol\":9263:9275  balances.dst */\n      0x20\n      dup4\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":9224:9254  virtualBalancesForRemoval[dst] */\n      dup11\n      and\n        /* \"contracts/Mooniswap.sol\":9187:9212  uint256 dstRemovalBalance */\n      0x00\n        /* \"contracts/Mooniswap.sol\":9224:9254  virtualBalancesForRemoval[dst] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":9224:9249  virtualBalancesForRemoval */\n      0x0f\n        /* \"contracts/Mooniswap.sol\":9224:9254  virtualBalancesForRemoval[dst] */\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Mooniswap.sol\":9224:9262  virtualBalancesForRemoval[dst].current */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      sload\n      sub(shl(0xd8, 0x01), 0x01)\n      dup2\n      and\n      dup3\n      mstore\n      shl(0xd8, 0x01)\n      swap1\n      div\n      0xffffffffff\n      and\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/Mooniswap.sol\":9071:9177  uint256 srcAdditionBalance = Math.max(virtualBalancesForAddition[src].current(balances.src), balances.src) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/Mooniswap.sol\":9215:9291  Math.min(virtualBalancesForRemoval[dst].current(balances.dst), balances.dst) */\n      tag_350\n      swap2\n        /* \"contracts/Mooniswap.sol\":9224:9276  virtualBalancesForRemoval[dst].current(balances.dst) */\n      tag_351\n      swap2\n        /* \"contracts/Mooniswap.sol\":9224:9262  virtualBalancesForRemoval[dst].current */\n      tag_348\n        /* \"contracts/Mooniswap.sol\":9224:9276  virtualBalancesForRemoval[dst].current(balances.dst) */\n      jump\t// in\n    tag_351:\n        /* \"contracts/Mooniswap.sol\":9278:9286  balances */\n      dup5\n        /* \"contracts/Mooniswap.sol\":9278:9290  balances.dst */\n      0x20\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":9215:9223  Math.min */\n      tag_352\n        /* \"contracts/Mooniswap.sol\":9215:9291  Math.min(virtualBalancesForRemoval[dst].current(balances.dst), balances.dst) */\n      jump\t// in\n    tag_350:\n        /* \"contracts/Mooniswap.sol\":9187:9291  uint256 dstRemovalBalance = Math.min(virtualBalancesForRemoval[dst].current(balances.dst), balances.dst) */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":9302:9341  src.uniTransferFromSenderToThis(amount) */\n      tag_353\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":9302:9333  src.uniTransferFromSenderToThis */\n      dup11\n      and\n        /* \"contracts/Mooniswap.sol\":9334:9340  amount */\n      dup9\n        /* \"contracts/Mooniswap.sol\":9302:9333  src.uniTransferFromSenderToThis */\n      tag_354\n        /* \"contracts/Mooniswap.sol\":9302:9341  src.uniTransferFromSenderToThis(amount) */\n      jump\t// in\n    tag_353:\n        /* \"contracts/Mooniswap.sol\":9407:9419  balances.src */\n      dup3\n      mload\n        /* \"contracts/Mooniswap.sol\":9351:9368  uint256 confirmed */\n      0x00\n      swap1\n        /* \"contracts/Mooniswap.sol\":9371:9420  src.uniBalanceOf(address(this)).sub(balances.src) */\n      tag_355\n      swap1\n        /* \"contracts/Mooniswap.sol\":9371:9402  src.uniBalanceOf(address(this)) */\n      tag_344\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":9371:9387  src.uniBalanceOf */\n      dup14\n      and\n        /* \"contracts/Mooniswap.sol\":9396:9400  this */\n      address\n        /* \"contracts/Mooniswap.sol\":9371:9387  src.uniBalanceOf */\n      tag_250\n        /* \"contracts/Mooniswap.sol\":9371:9402  src.uniBalanceOf(address(this)) */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":9371:9420  src.uniBalanceOf(address(this)).sub(balances.src) */\n    tag_355:\n        /* \"contracts/Mooniswap.sol\":9351:9420  uint256 confirmed = src.uniBalanceOf(address(this)).sub(balances.src) */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":9439:9509  _getReturn(src, dst, confirmed, srcAdditionBalance, dstRemovalBalance) */\n      tag_357\n        /* \"contracts/Mooniswap.sol\":9450:9453  src */\n      dup11\n        /* \"contracts/Mooniswap.sol\":9455:9458  dst */\n      dup11\n        /* \"contracts/Mooniswap.sol\":9460:9469  confirmed */\n      dup4\n        /* \"contracts/Mooniswap.sol\":9471:9489  srcAdditionBalance */\n      dup7\n        /* \"contracts/Mooniswap.sol\":9491:9508  dstRemovalBalance */\n      dup7\n        /* \"contracts/Mooniswap.sol\":9439:9449  _getReturn */\n      tag_219\n        /* \"contracts/Mooniswap.sol\":9439:9509  _getReturn(src, dst, confirmed, srcAdditionBalance, dstRemovalBalance) */\n      jump\t// in\n    tag_357:\n        /* \"contracts/Mooniswap.sol\":9430:9509  result = _getReturn(src, dst, confirmed, srcAdditionBalance, dstRemovalBalance) */\n      swap5\n      pop\n        /* \"contracts/Mooniswap.sol\":9536:9537  0 */\n      0x00\n        /* \"contracts/Mooniswap.sol\":9527:9533  result */\n      dup6\n        /* \"contracts/Mooniswap.sol\":9527:9537  result > 0 */\n      gt\n        /* \"contracts/Mooniswap.sol\":9527:9560  result > 0 && result >= minReturn */\n      dup1\n      iszero\n      tag_358\n      jumpi\n      pop\n        /* \"contracts/Mooniswap.sol\":9551:9560  minReturn */\n      dup7\n        /* \"contracts/Mooniswap.sol\":9541:9547  result */\n      dup6\n        /* \"contracts/Mooniswap.sol\":9541:9560  result >= minReturn */\n      lt\n      iszero\n        /* \"contracts/Mooniswap.sol\":9527:9560  result > 0 && result >= minReturn */\n    tag_358:\n        /* \"contracts/Mooniswap.sol\":9519:9596  require(result > 0 && result >= minReturn, \"Mooniswap: return is not enough\") */\n      tag_359\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x4d6f6f6e69737761703a2072657475726e206973206e6f7420656e6f75676800\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_359:\n        /* \"contracts/Mooniswap.sol\":9606:9641  dst.uniTransfer(msg.sender, result) */\n      tag_360\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":9606:9621  dst.uniTransfer */\n      dup11\n      and\n        /* \"contracts/Mooniswap.sol\":9622:9632  msg.sender */\n      caller\n        /* \"contracts/Mooniswap.sol\":9634:9640  result */\n      dup8\n        /* \"contracts/Mooniswap.sol\":9606:9621  dst.uniTransfer */\n      tag_256\n        /* \"contracts/Mooniswap.sol\":9606:9641  dst.uniTransfer(msg.sender, result) */\n      jump\t// in\n    tag_360:\n        /* \"contracts/Mooniswap.sol\":9760:9772  balances.src */\n      dup4\n      mload\n        /* \"contracts/Mooniswap.sol\":9738:9772  srcAdditionBalance != balances.src */\n      dup4\n      eq\n        /* \"contracts/Mooniswap.sol\":9734:9869  if (srcAdditionBalance != balances.src) {... */\n      tag_362\n      jumpi\n        /* \"contracts/Mooniswap.sol\":9788:9858  virtualBalancesForAddition[src].set(srcAdditionBalance.add(confirmed)) */\n      tag_362\n        /* \"contracts/Mooniswap.sol\":9824:9857  srcAdditionBalance.add(confirmed) */\n      tag_363\n        /* \"contracts/Mooniswap.sol\":9824:9842  srcAdditionBalance */\n      dup5\n        /* \"contracts/Mooniswap.sol\":9847:9856  confirmed */\n      dup4\n        /* \"contracts/Mooniswap.sol\":9824:9846  srcAdditionBalance.add */\n      tag_234\n        /* \"contracts/Mooniswap.sol\":9824:9857  srcAdditionBalance.add(confirmed) */\n      jump\t// in\n    tag_363:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":9788:9819  virtualBalancesForAddition[src] */\n      dup13\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":9788:9814  virtualBalancesForAddition */\n      0x0e\n        /* \"contracts/Mooniswap.sol\":9788:9819  virtualBalancesForAddition[src] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      swap1\n        /* \"contracts/Mooniswap.sol\":9788:9823  virtualBalancesForAddition[src].set */\n      tag_364\n        /* \"contracts/Mooniswap.sol\":9788:9858  virtualBalancesForAddition[src].set(srcAdditionBalance.add(confirmed)) */\n      jump\t// in\n    tag_362:\n        /* \"contracts/Mooniswap.sol\":9903:9911  balances */\n      dup4\n        /* \"contracts/Mooniswap.sol\":9903:9915  balances.dst */\n      0x20\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":9882:9899  dstRemovalBalance */\n      dup3\n        /* \"contracts/Mooniswap.sol\":9882:9915  dstRemovalBalance != balances.dst */\n      eq\n        /* \"contracts/Mooniswap.sol\":9878:10007  if (dstRemovalBalance != balances.dst) {... */\n      tag_366\n      jumpi\n        /* \"contracts/Mooniswap.sol\":9931:9996  virtualBalancesForRemoval[dst].set(dstRemovalBalance.sub(result)) */\n      tag_366\n        /* \"contracts/Mooniswap.sol\":9966:9995  dstRemovalBalance.sub(result) */\n      tag_367\n        /* \"contracts/Mooniswap.sol\":9966:9983  dstRemovalBalance */\n      dup4\n        /* \"contracts/Mooniswap.sol\":9988:9994  result */\n      dup8\n        /* \"contracts/Mooniswap.sol\":9966:9987  dstRemovalBalance.sub */\n      tag_262\n        /* \"contracts/Mooniswap.sol\":9966:9995  dstRemovalBalance.sub(result) */\n      jump\t// in\n    tag_367:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":9931:9961  virtualBalancesForRemoval[dst] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":9931:9956  virtualBalancesForRemoval */\n      0x0f\n        /* \"contracts/Mooniswap.sol\":9931:9961  virtualBalancesForRemoval[dst] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      swap1\n        /* \"contracts/Mooniswap.sol\":9931:9965  virtualBalancesForRemoval[dst].set */\n      tag_364\n        /* \"contracts/Mooniswap.sol\":9931:9996  virtualBalancesForRemoval[dst].set(dstRemovalBalance.sub(result)) */\n      jump\t// in\n    tag_366:\n        /* \"contracts/Mooniswap.sol\":10116:10128  balances.src */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":10078:10108  virtualBalancesForRemoval[src] */\n      dup12\n      and\n        /* \"contracts/Mooniswap.sol\":10116:10128  balances.src */\n      0x00\n        /* \"contracts/Mooniswap.sol\":10078:10108  virtualBalancesForRemoval[src] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":10078:10103  virtualBalancesForRemoval */\n      0x0f\n        /* \"contracts/Mooniswap.sol\":10078:10108  virtualBalancesForRemoval[src] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Mooniswap.sol\":10078:10129  virtualBalancesForRemoval[src].update(balances.src) */\n      tag_368\n      swap2\n        /* \"contracts/Mooniswap.sol\":10078:10115  virtualBalancesForRemoval[src].update */\n      tag_369\n        /* \"contracts/Mooniswap.sol\":10078:10129  virtualBalancesForRemoval[src].update(balances.src) */\n      jump\t// in\n    tag_368:\n        /* \"contracts/Mooniswap.sol\":10178:10190  balances.dst */\n      0x20\n      dup1\n      dup6\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":10139:10170  virtualBalancesForAddition[dst] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":10139:10165  virtualBalancesForAddition */\n      0x0e\n        /* \"contracts/Mooniswap.sol\":10139:10170  virtualBalancesForAddition[dst] */\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Mooniswap.sol\":10139:10191  virtualBalancesForAddition[dst].update(balances.dst) */\n      tag_370\n      swap2\n        /* \"contracts/Mooniswap.sol\":10139:10177  virtualBalancesForAddition[dst].update */\n      tag_369\n        /* \"contracts/Mooniswap.sol\":10139:10191  virtualBalancesForAddition[dst].update(balances.dst) */\n      jump\t// in\n    tag_370:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":10206:10228  referral != address(0) */\n      dup7\n      and\n      iszero\n        /* \"contracts/Mooniswap.sol\":10202:10833  if (referral != address(0)) {... */\n      tag_371\n      jumpi\n        /* \"contracts/Mooniswap.sol\":10365:10377  balances.src */\n      dup4\n      mload\n        /* \"contracts/Mooniswap.sol\":10277:10281  1e36 */\n      0xc097ce7bc90715b34b9f1000000000\n      swap1\n        /* \"contracts/Mooniswap.sol\":10313:10378  invariantRatio.mul(balances.src.add(confirmed)).div(balances.src) */\n      tag_372\n      swap1\n        /* \"contracts/Mooniswap.sol\":10313:10360  invariantRatio.mul(balances.src.add(confirmed)) */\n      tag_252\n        /* \"contracts/Mooniswap.sol\":10332:10359  balances.src.add(confirmed) */\n      tag_374\n        /* \"contracts/Mooniswap.sol\":10365:10377  balances.src */\n      dup3\n        /* \"contracts/Mooniswap.sol\":10349:10358  confirmed */\n      dup7\n        /* \"contracts/Mooniswap.sol\":10332:10348  balances.src.add */\n      tag_234\n        /* \"contracts/Mooniswap.sol\":10332:10359  balances.src.add(confirmed) */\n      jump\t// in\n    tag_374:\n        /* \"contracts/Mooniswap.sol\":10313:10327  invariantRatio */\n      dup5\n      swap1\n        /* \"contracts/Mooniswap.sol\":10313:10331  invariantRatio.mul */\n      tag_253\n        /* \"contracts/Mooniswap.sol\":10313:10360  invariantRatio.mul(balances.src.add(confirmed)) */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":10313:10378  invariantRatio.mul(balances.src.add(confirmed)).div(balances.src) */\n    tag_372:\n        /* \"contracts/Mooniswap.sol\":10458:10470  balances.dst */\n      0x20\n      dup7\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":10296:10378  invariantRatio = invariantRatio.mul(balances.src.add(confirmed)).div(balances.src) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Mooniswap.sol\":10409:10471  invariantRatio.mul(balances.dst.sub(result)).div(balances.dst) */\n      tag_375\n      swap1\n        /* \"contracts/Mooniswap.sol\":10409:10453  invariantRatio.mul(balances.dst.sub(result)) */\n      tag_252\n        /* \"contracts/Mooniswap.sol\":10428:10452  balances.dst.sub(result) */\n      tag_374\n        /* \"contracts/Mooniswap.sol\":10458:10470  balances.dst */\n      dup3\n        /* \"contracts/Mooniswap.sol\":10445:10451  result */\n      dup11\n        /* \"contracts/Mooniswap.sol\":10428:10444  balances.dst.sub */\n      tag_262\n        /* \"contracts/Mooniswap.sol\":10428:10452  balances.dst.sub(result) */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":10409:10471  invariantRatio.mul(balances.dst.sub(result)).div(balances.dst) */\n    tag_375:\n        /* \"contracts/Mooniswap.sol\":10392:10471  invariantRatio = invariantRatio.mul(balances.dst.sub(result)).div(balances.dst) */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":10506:10510  1e36 */\n      0xc097ce7bc90715b34b9f1000000000\n        /* \"contracts/Mooniswap.sol\":10489:10503  invariantRatio */\n      dup2\n        /* \"contracts/Mooniswap.sol\":10489:10510  invariantRatio > 1e36 */\n      gt\n        /* \"contracts/Mooniswap.sol\":10485:10823  if (invariantRatio > 1e36) {... */\n      iszero\n      tag_378\n      jumpi\n        /* \"contracts/Mooniswap.sol\":10593:10614  uint256 referralShare */\n      0x00\n        /* \"contracts/Mooniswap.sol\":10617:10697  invariantRatio.sqrt().sub(1e18).mul(totalSupply()).div(1e18).div(REFERRAL_SHARE) */\n      tag_379\n        /* \"contracts/Mooniswap.sol\":2404:2406  20 */\n      0x14\n        /* \"contracts/Mooniswap.sol\":10617:10677  invariantRatio.sqrt().sub(1e18).mul(totalSupply()).div(1e18) */\n      tag_252\n        /* \"contracts/Mooniswap.sol\":10672:10676  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Mooniswap.sol\":10617:10667  invariantRatio.sqrt().sub(1e18).mul(totalSupply()) */\n      tag_252\n        /* \"contracts/Mooniswap.sol\":10653:10666  totalSupply() */\n      tag_382\n        /* \"contracts/Mooniswap.sol\":10653:10664  totalSupply */\n      tag_60\n        /* \"contracts/Mooniswap.sol\":10653:10666  totalSupply() */\n      jump\t// in\n    tag_382:\n        /* \"contracts/Mooniswap.sol\":10617:10648  invariantRatio.sqrt().sub(1e18) */\n      tag_383\n        /* \"contracts/Mooniswap.sol\":10643:10647  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Mooniswap.sol\":10617:10638  invariantRatio.sqrt() */\n      tag_344\n        /* \"contracts/Mooniswap.sol\":10617:10631  invariantRatio */\n      dup11\n        /* \"contracts/Mooniswap.sol\":10617:10636  invariantRatio.sqrt */\n      tag_385\n        /* \"contracts/Mooniswap.sol\":10617:10638  invariantRatio.sqrt() */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":10617:10648  invariantRatio.sqrt().sub(1e18) */\n    tag_383:\n        /* \"contracts/Mooniswap.sol\":10617:10652  invariantRatio.sqrt().sub(1e18).mul */\n      swap1\n      tag_253\n        /* \"contracts/Mooniswap.sol\":10617:10667  invariantRatio.sqrt().sub(1e18).mul(totalSupply()) */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":10617:10697  invariantRatio.sqrt().sub(1e18).mul(totalSupply()).div(1e18).div(REFERRAL_SHARE) */\n    tag_379:\n        /* \"contracts/Mooniswap.sol\":10593:10697  uint256 referralShare = invariantRatio.sqrt().sub(1e18).mul(totalSupply()).div(1e18).div(REFERRAL_SHARE) */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":10719:10736  referralShare > 0 */\n      dup1\n      iszero\n        /* \"contracts/Mooniswap.sol\":10715:10809  if (referralShare > 0) {... */\n      tag_387\n      jumpi\n        /* \"contracts/Mooniswap.sol\":10760:10790  _mint(referral, referralShare) */\n      tag_387\n        /* \"contracts/Mooniswap.sol\":10766:10774  referral */\n      dup9\n        /* \"contracts/Mooniswap.sol\":10776:10789  referralShare */\n      dup3\n        /* \"contracts/Mooniswap.sol\":10760:10765  _mint */\n      tag_388\n        /* \"contracts/Mooniswap.sol\":10760:10790  _mint(referral, referralShare) */\n      jump\t// in\n    tag_387:\n        /* \"contracts/Mooniswap.sol\":10485:10823  if (invariantRatio > 1e36) {... */\n      pop\n    tag_378:\n        /* \"contracts/Mooniswap.sol\":10202:10833  if (referral != address(0)) {... */\n      pop\n    tag_371:\n        /* \"contracts/Mooniswap.sol\":10890:10893  dst */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":10848:10967  Swapped(msg.sender, address(src), address(dst), confirmed, result, balances.src, balances.dst, totalSupply(), referral) */\n      and\n        /* \"contracts/Mooniswap.sol\":10876:10879  src */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":10848:10967  Swapped(msg.sender, address(src), address(dst), confirmed, result, balances.src, balances.dst, totalSupply(), referral) */\n      and\n        /* \"contracts/Mooniswap.sol\":10856:10866  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":10848:10967  Swapped(msg.sender, address(src), address(dst), confirmed, result, balances.src, balances.dst, totalSupply(), referral) */\n      and\n      0x86c49b5d8577da08444947f1427d23ef191cfabf2c0788f93324d79e926a9302\n        /* \"contracts/Mooniswap.sol\":10896:10905  confirmed */\n      dup5\n        /* \"contracts/Mooniswap.sol\":10907:10913  result */\n      dup10\n        /* \"contracts/Mooniswap.sol\":10915:10923  balances */\n      dup10\n        /* \"contracts/Mooniswap.sol\":10915:10927  balances.src */\n      0x00\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":10929:10937  balances */\n      dup11\n        /* \"contracts/Mooniswap.sol\":10929:10941  balances.dst */\n      0x20\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":10943:10956  totalSupply() */\n      tag_389\n        /* \"contracts/Mooniswap.sol\":10943:10954  totalSupply */\n      tag_60\n        /* \"contracts/Mooniswap.sol\":10943:10956  totalSupply() */\n      jump\t// in\n    tag_389:\n        /* \"contracts/Mooniswap.sol\":10848:10967  Swapped(msg.sender, address(src), address(dst), confirmed, result, balances.src, balances.dst, totalSupply(), referral) */\n      0x40\n      dup1\n      mload\n      swap6\n      dup7\n      mstore\n      0x20\n      dup7\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      dup5\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x60\n      dup5\n      add\n      mstore\n      0x80\n      dup4\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup13\n      and\n      0xa0\n      dup4\n      add\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0xc0\n      add\n      swap1\n      log4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":11020:11032  volumes[src] */\n      swap1\n      swap10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":11020:11027  volumes */\n      0x0d\n        /* \"contracts/Mooniswap.sol\":11020:11032  volumes[src] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Mooniswap.sol\":11020:11064  volumes[src].confirmed += uint128(confirmed) */\n      dup1\n      sload\n      shl(0x80, 0x01)\n      sub(shl(0x80, 0x01), 0x01)\n      dup1\n      dup4\n      and\n      swap1\n      swap13\n      add\n      dup13\n      and\n      not(0xffffffffffffffffffffffffffffffff)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n        /* \"contracts/Mooniswap.sol\":11074:11112  volumes[src].result += uint128(result) */\n      dup2\n      dup2\n      div\n      dup13\n      and\n      dup8\n      add\n      dup13\n      and\n      swap1\n      swap2\n      mul\n      swap11\n      and\n      swap10\n      swap1\n      swap10\n      or\n      swap1\n      swap9\n      sstore\n      pop\n      pop\n        /* \"contracts/Mooniswap.sol\":11020:11064  volumes[src].confirmed += uint128(confirmed) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2563:2570  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2563:2585  _status = _NOT_ENTERED */\n      sstore\n        /* \"contracts/Mooniswap.sol\":11105:11111  result */\n      swap6\n        /* \"contracts/Mooniswap.sol\":8546:11119  function swap(IERC20 src, IERC20 dst, uint256 amount, uint256 minReturn, address referral) external payable nonReentrant returns(uint256 result) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":2525:2571  uint256 public constant FEE_DENOMINATOR = 1e18 */\n    tag_176:\n        /* \"contracts/Mooniswap.sol\":2567:2571  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Mooniswap.sol\":2525:2571  uint256 public constant FEE_DENOMINATOR = 1e18 */\n      dup2\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":4459:4687  function getBalanceForAddition(IERC20 token) public view returns(uint256) {... */\n    tag_180:\n        /* \"contracts/Mooniswap.sol\":4524:4531  uint256 */\n      0x00\n      dup1\n        /* \"contracts/Mooniswap.sol\":4561:4594  token.uniBalanceOf(address(this)) */\n      tag_391\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":4561:4579  token.uniBalanceOf */\n      dup5\n      and\n        /* \"contracts/Mooniswap.sol\":4588:4592  this */\n      address\n        /* \"contracts/Mooniswap.sol\":4561:4579  token.uniBalanceOf */\n      tag_250\n        /* \"contracts/Mooniswap.sol\":4561:4594  token.uniBalanceOf(address(this)) */\n      jump\t// in\n    tag_391:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":4620:4653  virtualBalancesForAddition[token] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":4620:4646  virtualBalancesForAddition */\n      0x0e\n        /* \"contracts/Mooniswap.sol\":4620:4653  virtualBalancesForAddition[token] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Mooniswap.sol\":4620:4661  virtualBalancesForAddition[token].current */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      sload\n      sub(shl(0xd8, 0x01), 0x01)\n      dup2\n      and\n      dup4\n      mstore\n      shl(0xd8, 0x01)\n      swap1\n      div\n      0xffffffffff\n      and\n      swap1\n      dup3\n      add\n      mstore\n        /* \"contracts/Mooniswap.sol\":4543:4594  uint256 balance = token.uniBalanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Mooniswap.sol\":4611:4680  Math.max(virtualBalancesForAddition[token].current(balance), balance) */\n      tag_392\n      swap1\n        /* \"contracts/Mooniswap.sol\":4620:4670  virtualBalancesForAddition[token].current(balance) */\n      tag_393\n      swap1\n        /* \"contracts/Mooniswap.sol\":4543:4594  uint256 balance = token.uniBalanceOf(address(this)) */\n      dup4\n        /* \"contracts/Mooniswap.sol\":4620:4661  virtualBalancesForAddition[token].current */\n      tag_348\n        /* \"contracts/Mooniswap.sol\":4620:4670  virtualBalancesForAddition[token].current(balance) */\n      jump\t// in\n    tag_393:\n        /* \"contracts/Mooniswap.sol\":4672:4679  balance */\n      dup3\n        /* \"contracts/Mooniswap.sol\":4611:4619  Math.max */\n      tag_349\n        /* \"contracts/Mooniswap.sol\":4611:4680  Math.max(virtualBalancesForAddition[token].current(balance), balance) */\n      jump\t// in\n    tag_392:\n        /* \"contracts/Mooniswap.sol\":4604:4680  return Math.max(virtualBalancesForAddition[token].current(balance), balance) */\n      swap4\n        /* \"contracts/Mooniswap.sol\":4459:4687  function getBalanceForAddition(IERC20 token) public view returns(uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3968:4117  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4083:4101  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4057:4064  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4083:4101  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4083:4094  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4083:4101  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4083:4110  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3968:4117  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":4165:4246  function fee() public view returns(uint256) {... */\n    tag_187:\n        /* \"contracts/Mooniswap.sol\":4226:4233  factory */\n      sload(0x09)\n        /* \"contracts/Mooniswap.sol\":4226:4239  factory.fee() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xddca3f43)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Mooniswap.sol\":4200:4207  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":4226:4233  factory */\n      and\n      swap2\n        /* \"contracts/Mooniswap.sol\":4226:4237  factory.fee */\n      0xddca3f43\n      swap2\n        /* \"contracts/Mooniswap.sol\":4226:4239  factory.fee() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Mooniswap.sol\":4226:4233  factory */\n      dup7\n        /* \"contracts/Mooniswap.sol\":4226:4239  factory.fee() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_396\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_396:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_398\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_398:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_399\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_399:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":4165:4246  function fee() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":4693:4919  function getBalanceForRemoval(IERC20 token) public view returns(uint256) {... */\n    tag_191:\n        /* \"contracts/Mooniswap.sol\":4757:4764  uint256 */\n      0x00\n      dup1\n        /* \"contracts/Mooniswap.sol\":4794:4827  token.uniBalanceOf(address(this)) */\n      tag_401\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":4794:4812  token.uniBalanceOf */\n      dup5\n      and\n        /* \"contracts/Mooniswap.sol\":4821:4825  this */\n      address\n        /* \"contracts/Mooniswap.sol\":4794:4812  token.uniBalanceOf */\n      tag_250\n        /* \"contracts/Mooniswap.sol\":4794:4827  token.uniBalanceOf(address(this)) */\n      jump\t// in\n    tag_401:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":4853:4885  virtualBalancesForRemoval[token] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":4853:4878  virtualBalancesForRemoval */\n      0x0f\n        /* \"contracts/Mooniswap.sol\":4853:4885  virtualBalancesForRemoval[token] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Mooniswap.sol\":4853:4893  virtualBalancesForRemoval[token].current */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      sload\n      sub(shl(0xd8, 0x01), 0x01)\n      dup2\n      and\n      dup4\n      mstore\n      shl(0xd8, 0x01)\n      swap1\n      div\n      0xffffffffff\n      and\n      swap1\n      dup3\n      add\n      mstore\n        /* \"contracts/Mooniswap.sol\":4776:4827  uint256 balance = token.uniBalanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Mooniswap.sol\":4844:4912  Math.min(virtualBalancesForRemoval[token].current(balance), balance) */\n      tag_392\n      swap1\n        /* \"contracts/Mooniswap.sol\":4853:4902  virtualBalancesForRemoval[token].current(balance) */\n      tag_403\n      swap1\n        /* \"contracts/Mooniswap.sol\":4776:4827  uint256 balance = token.uniBalanceOf(address(this)) */\n      dup4\n        /* \"contracts/Mooniswap.sol\":4853:4893  virtualBalancesForRemoval[token].current */\n      tag_348\n        /* \"contracts/Mooniswap.sol\":4853:4902  virtualBalancesForRemoval[token].current(balance) */\n      jump\t// in\n    tag_403:\n        /* \"contracts/Mooniswap.sol\":4904:4911  balance */\n      dup3\n        /* \"contracts/Mooniswap.sol\":4844:4852  Math.min */\n      tag_352\n        /* \"contracts/Mooniswap.sol\":4844:4912  Math.min(virtualBalancesForRemoval[token].current(balance), balance) */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":5128:7717  function deposit(uint256[] calldata amounts, uint256[] calldata minAmounts) external payable nonReentrant returns(uint256 fairSupply) {... */\n    tag_200:\n        /* \"contracts/Mooniswap.sol\":5242:5260  uint256 fairSupply */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2260:2267  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2260:2279  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2252:2315  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_405\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_405:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2390:2397  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2390:2408  _status = _ENTERED */\n      sstore\n        /* \"contracts/Mooniswap.sol\":5298:5304  tokens */\n      0x0a\n        /* \"contracts/Mooniswap.sol\":5272:5304  IERC20[] memory _tokens = tokens */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup5\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":5272:5295  IERC20[] memory _tokens */\n      0x60\n      swap4\n        /* \"contracts/Mooniswap.sol\":5272:5304  IERC20[] memory _tokens = tokens */\n      swap1\n      swap3\n        /* \"contracts/Mooniswap.sol\":5298:5304  tokens */\n      swap1\n      swap2\n        /* \"contracts/Mooniswap.sol\":5272:5304  IERC20[] memory _tokens = tokens */\n      dup4\n      add\n        /* \"contracts/Mooniswap.sol\":5298:5304  tokens */\n      dup3\n        /* \"contracts/Mooniswap.sol\":5272:5304  IERC20[] memory _tokens = tokens */\n      dup3\n      dup1\n      iszero\n      tag_407\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_408:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_408\n      jumpi\n    tag_407:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":5340:5347  _tokens */\n      dup1\n        /* \"contracts/Mooniswap.sol\":5340:5354  _tokens.length */\n      mload\n        /* \"contracts/Mooniswap.sol\":5322:5329  amounts */\n      dup7\n      dup7\n        /* \"contracts/Mooniswap.sol\":5322:5336  amounts.length */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":5322:5354  amounts.length == _tokens.length */\n      eq\n        /* \"contracts/Mooniswap.sol\":5314:5390  require(amounts.length == _tokens.length, \"Mooniswap: wrong amounts length\") */\n      tag_409\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x4d6f6f6e69737761703a2077726f6e6720616d6f756e7473206c656e67746800\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_409:\n        /* \"contracts/Mooniswap.sol\":5422:5440  _tokens[0].isETH() */\n      tag_410\n        /* \"contracts/Mooniswap.sol\":5422:5429  _tokens */\n      dup2\n        /* \"contracts/Mooniswap.sol\":5430:5431  0 */\n      0x00\n        /* \"contracts/Mooniswap.sol\":5422:5432  _tokens[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_411\n      jumpi\n      invalid\n    tag_411:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":5422:5438  _tokens[0].isETH */\n      and\n      tag_334\n        /* \"contracts/Mooniswap.sol\":5422:5440  _tokens[0].isETH() */\n      jump\t// in\n    tag_410:\n        /* \"contracts/Mooniswap.sol\":5422:5493  _tokens[0].isETH() ? amounts[0] : (_tokens[1].isETH() ? amounts[1] : 0) */\n      tag_412\n      jumpi\n        /* \"contracts/Mooniswap.sol\":5457:5475  _tokens[1].isETH() */\n      tag_413\n        /* \"contracts/Mooniswap.sol\":5457:5464  _tokens */\n      dup2\n        /* \"contracts/Mooniswap.sol\":5465:5466  1 */\n      0x01\n        /* \"contracts/Mooniswap.sol\":5457:5467  _tokens[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_411\n      jumpi\n      invalid\n        /* \"contracts/Mooniswap.sol\":5457:5475  _tokens[1].isETH() */\n    tag_413:\n        /* \"contracts/Mooniswap.sol\":5457:5492  _tokens[1].isETH() ? amounts[1] : 0 */\n      tag_415\n      jumpi\n        /* \"contracts/Mooniswap.sol\":5491:5492  0 */\n      0x00\n        /* \"contracts/Mooniswap.sol\":5457:5492  _tokens[1].isETH() ? amounts[1] : 0 */\n      jump(tag_416)\n    tag_415:\n        /* \"contracts/Mooniswap.sol\":5478:5485  amounts */\n      dup6\n      dup6\n        /* \"contracts/Mooniswap.sol\":5486:5487  1 */\n      0x01\n        /* \"contracts/Mooniswap.sol\":5478:5488  amounts[1] */\n      dup2\n      dup2\n      lt\n      tag_417\n      jumpi\n      invalid\n    tag_417:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Mooniswap.sol\":5457:5492  _tokens[1].isETH() ? amounts[1] : 0 */\n    tag_416:\n        /* \"contracts/Mooniswap.sol\":5422:5493  _tokens[0].isETH() ? amounts[0] : (_tokens[1].isETH() ? amounts[1] : 0) */\n      jump(tag_418)\n    tag_412:\n        /* \"contracts/Mooniswap.sol\":5443:5450  amounts */\n      dup6\n      dup6\n        /* \"contracts/Mooniswap.sol\":5451:5452  0 */\n      0x00\n        /* \"contracts/Mooniswap.sol\":5443:5453  amounts[0] */\n      dup2\n      dup2\n      lt\n      tag_419\n      jumpi\n      invalid\n    tag_419:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Mooniswap.sol\":5422:5493  _tokens[0].isETH() ? amounts[0] : (_tokens[1].isETH() ? amounts[1] : 0) */\n    tag_418:\n        /* \"contracts/Mooniswap.sol\":5408:5417  msg.value */\n      callvalue\n        /* \"contracts/Mooniswap.sol\":5408:5494  msg.value == (_tokens[0].isETH() ? amounts[0] : (_tokens[1].isETH() ? amounts[1] : 0)) */\n      eq\n        /* \"contracts/Mooniswap.sol\":5400:5527  require(msg.value == (_tokens[0].isETH() ? amounts[0] : (_tokens[1].isETH() ? amounts[1] : 0)), \"Mooniswap: wrong value usage\") */\n      tag_420\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x4d6f6f6e69737761703a2077726f6e672076616c756520757361676500000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_420:\n        /* \"contracts/Mooniswap.sol\":5538:5567  uint256[] memory realBalances */\n      0x60\n        /* \"contracts/Mooniswap.sol\":5584:5591  amounts */\n      dup6\n        /* \"contracts/Mooniswap.sol\":5570:5599  new uint256[](amounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_421\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_421:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_422\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_422:\n      pop\n        /* \"contracts/Mooniswap.sol\":5538:5599  uint256[] memory realBalances = new uint256[](amounts.length) */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":5614:5620  uint i */\n      0x00\n        /* \"contracts/Mooniswap.sol\":5609:5777  for (uint i = 0; i < realBalances.length; i++) {... */\n    tag_423:\n        /* \"contracts/Mooniswap.sol\":5630:5642  realBalances */\n      dup2\n        /* \"contracts/Mooniswap.sol\":5630:5649  realBalances.length */\n      mload\n        /* \"contracts/Mooniswap.sol\":5626:5627  i */\n      dup2\n        /* \"contracts/Mooniswap.sol\":5626:5649  i < realBalances.length */\n      lt\n        /* \"contracts/Mooniswap.sol\":5609:5777  for (uint i = 0; i < realBalances.length; i++) {... */\n      iszero\n      tag_424\n      jumpi\n        /* \"contracts/Mooniswap.sol\":5688:5766  _tokens[i].uniBalanceOf(address(this)).sub(_tokens[i].isETH() ? msg.value : 0) */\n      tag_426\n        /* \"contracts/Mooniswap.sol\":5731:5749  _tokens[i].isETH() */\n      tag_427\n        /* \"contracts/Mooniswap.sol\":5731:5738  _tokens */\n      dup5\n        /* \"contracts/Mooniswap.sol\":5739:5740  i */\n      dup4\n        /* \"contracts/Mooniswap.sol\":5731:5741  _tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_411\n      jumpi\n      invalid\n        /* \"contracts/Mooniswap.sol\":5731:5749  _tokens[i].isETH() */\n    tag_427:\n        /* \"contracts/Mooniswap.sol\":5731:5765  _tokens[i].isETH() ? msg.value : 0 */\n      tag_429\n      jumpi\n        /* \"contracts/Mooniswap.sol\":5764:5765  0 */\n      0x00\n        /* \"contracts/Mooniswap.sol\":5731:5765  _tokens[i].isETH() ? msg.value : 0 */\n      jump(tag_430)\n    tag_429:\n        /* \"contracts/Mooniswap.sol\":5752:5761  msg.value */\n      callvalue\n        /* \"contracts/Mooniswap.sol\":5731:5765  _tokens[i].isETH() ? msg.value : 0 */\n    tag_430:\n        /* \"contracts/Mooniswap.sol\":5688:5726  _tokens[i].uniBalanceOf(address(this)) */\n      tag_344\n        /* \"contracts/Mooniswap.sol\":5720:5724  this */\n      address\n        /* \"contracts/Mooniswap.sol\":5688:5695  _tokens */\n      dup7\n        /* \"contracts/Mooniswap.sol\":5696:5697  i */\n      dup6\n        /* \"contracts/Mooniswap.sol\":5688:5698  _tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_432\n      jumpi\n      invalid\n    tag_432:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":5688:5711  _tokens[i].uniBalanceOf */\n      and\n      tag_250\n      swap1\n        /* \"contracts/Mooniswap.sol\":5688:5726  _tokens[i].uniBalanceOf(address(this)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":5688:5766  _tokens[i].uniBalanceOf(address(this)).sub(_tokens[i].isETH() ? msg.value : 0) */\n    tag_426:\n        /* \"contracts/Mooniswap.sol\":5670:5682  realBalances */\n      dup3\n        /* \"contracts/Mooniswap.sol\":5683:5684  i */\n      dup3\n        /* \"contracts/Mooniswap.sol\":5670:5685  realBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_433\n      jumpi\n      invalid\n    tag_433:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/Mooniswap.sol\":5670:5766  realBalances[i] = _tokens[i].uniBalanceOf(address(this)).sub(_tokens[i].isETH() ? msg.value : 0) */\n      mstore\n        /* \"contracts/Mooniswap.sol\":5651:5654  i++ */\n      0x01\n      add\n        /* \"contracts/Mooniswap.sol\":5609:5777  for (uint i = 0; i < realBalances.length; i++) {... */\n      jump(tag_423)\n    tag_424:\n      pop\n        /* \"contracts/Mooniswap.sol\":5787:5806  uint256 totalSupply */\n      0x00\n        /* \"contracts/Mooniswap.sol\":5809:5822  totalSupply() */\n      tag_434\n        /* \"contracts/Mooniswap.sol\":5809:5820  totalSupply */\n      tag_60\n        /* \"contracts/Mooniswap.sol\":5809:5822  totalSupply() */\n      jump\t// in\n    tag_434:\n        /* \"contracts/Mooniswap.sol\":5787:5822  uint256 totalSupply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":5836:5852  totalSupply == 0 */\n      dup1\n        /* \"contracts/Mooniswap.sol\":5832:6480  if (totalSupply == 0) {... */\n      tag_435\n      jumpi\n        /* \"contracts/Mooniswap.sol\":5881:5900  BASE_SUPPLY.mul(99) */\n      tag_436\n        /* \"contracts/Mooniswap.sol\":2481:2485  1000 */\n      0x03e8\n        /* \"contracts/Mooniswap.sol\":5897:5899  99 */\n      0x63\n        /* \"contracts/Mooniswap.sol\":5881:5896  BASE_SUPPLY.mul */\n      tag_253\n        /* \"contracts/Mooniswap.sol\":5881:5900  BASE_SUPPLY.mul(99) */\n      jump\t// in\n    tag_436:\n        /* \"contracts/Mooniswap.sol\":5868:5900  fairSupply = BASE_SUPPLY.mul(99) */\n      swap4\n      pop\n        /* \"contracts/Mooniswap.sol\":5914:5947  _mint(address(this), BASE_SUPPLY) */\n      tag_437\n        /* \"contracts/Mooniswap.sol\":5928:5932  this */\n      address\n        /* \"contracts/Mooniswap.sol\":2481:2485  1000 */\n      0x03e8\n        /* \"contracts/Mooniswap.sol\":5914:5919  _mint */\n      tag_388\n        /* \"contracts/Mooniswap.sol\":5914:5947  _mint(address(this), BASE_SUPPLY) */\n      jump\t// in\n    tag_437:\n        /* \"contracts/Mooniswap.sol\":6076:6082  uint i */\n      0x00\n        /* \"contracts/Mooniswap.sol\":6071:6191  for (uint i = 0; i < amounts.length; i++) {... */\n    tag_438:\n        /* \"contracts/Mooniswap.sol\":6088:6106  i < amounts.length */\n      dup8\n      dup2\n      lt\n        /* \"contracts/Mooniswap.sol\":6071:6191  for (uint i = 0; i < amounts.length; i++) {... */\n      iszero\n      tag_439\n      jumpi\n        /* \"contracts/Mooniswap.sol\":6144:6176  Math.max(fairSupply, amounts[i]) */\n      tag_441\n        /* \"contracts/Mooniswap.sol\":6153:6163  fairSupply */\n      dup6\n        /* \"contracts/Mooniswap.sol\":6165:6172  amounts */\n      dup11\n      dup11\n        /* \"contracts/Mooniswap.sol\":6173:6174  i */\n      dup5\n        /* \"contracts/Mooniswap.sol\":6165:6175  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_442\n      jumpi\n      invalid\n    tag_442:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Mooniswap.sol\":6144:6152  Math.max */\n      tag_349\n        /* \"contracts/Mooniswap.sol\":6144:6176  Math.max(fairSupply, amounts[i]) */\n      jump\t// in\n    tag_441:\n        /* \"contracts/Mooniswap.sol\":6131:6176  fairSupply = Math.max(fairSupply, amounts[i]) */\n      swap5\n      pop\n        /* \"contracts/Mooniswap.sol\":6108:6111  i++ */\n      0x01\n      add\n        /* \"contracts/Mooniswap.sol\":6071:6191  for (uint i = 0; i < amounts.length; i++) {... */\n      jump(tag_438)\n    tag_439:\n      pop\n        /* \"contracts/Mooniswap.sol\":5832:6480  if (totalSupply == 0) {... */\n      jump(tag_443)\n    tag_435:\n      not(0x00)\n        /* \"contracts/Mooniswap.sol\":6268:6298  fairSupply = type(uint256).max */\n      swap4\n      pop\n        /* \"contracts/Mooniswap.sol\":6317:6323  uint i */\n      0x00\n        /* \"contracts/Mooniswap.sol\":6312:6470  for (uint i = 0; i < amounts.length; i++) {... */\n    tag_444:\n        /* \"contracts/Mooniswap.sol\":6329:6347  i < amounts.length */\n      dup8\n      dup2\n      lt\n        /* \"contracts/Mooniswap.sol\":6312:6470  for (uint i = 0; i < amounts.length; i++) {... */\n      iszero\n      tag_445\n      jumpi\n        /* \"contracts/Mooniswap.sol\":6385:6455  Math.min(fairSupply, totalSupply.mul(amounts[i]).div(realBalances[i])) */\n      tag_447\n        /* \"contracts/Mooniswap.sol\":6394:6404  fairSupply */\n      dup6\n        /* \"contracts/Mooniswap.sol\":6406:6454  totalSupply.mul(amounts[i]).div(realBalances[i]) */\n      tag_448\n        /* \"contracts/Mooniswap.sol\":6438:6450  realBalances */\n      dup6\n        /* \"contracts/Mooniswap.sol\":6451:6452  i */\n      dup5\n        /* \"contracts/Mooniswap.sol\":6438:6453  realBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_449\n      jumpi\n      invalid\n    tag_449:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":6406:6433  totalSupply.mul(amounts[i]) */\n      tag_252\n        /* \"contracts/Mooniswap.sol\":6422:6429  amounts */\n      dup14\n      dup14\n        /* \"contracts/Mooniswap.sol\":6430:6431  i */\n      dup8\n        /* \"contracts/Mooniswap.sol\":6422:6432  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_451\n      jumpi\n      invalid\n    tag_451:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Mooniswap.sol\":6406:6417  totalSupply */\n      dup8\n        /* \"contracts/Mooniswap.sol\":6406:6421  totalSupply.mul */\n      tag_253\n      swap1\n        /* \"contracts/Mooniswap.sol\":6406:6433  totalSupply.mul(amounts[i]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":6406:6454  totalSupply.mul(amounts[i]).div(realBalances[i]) */\n    tag_448:\n        /* \"contracts/Mooniswap.sol\":6385:6393  Math.min */\n      tag_352\n        /* \"contracts/Mooniswap.sol\":6385:6455  Math.min(fairSupply, totalSupply.mul(amounts[i]).div(realBalances[i])) */\n      jump\t// in\n    tag_447:\n        /* \"contracts/Mooniswap.sol\":6372:6455  fairSupply = Math.min(fairSupply, totalSupply.mul(amounts[i]).div(realBalances[i])) */\n      swap5\n      pop\n        /* \"contracts/Mooniswap.sol\":6349:6352  i++ */\n      0x01\n      add\n        /* \"contracts/Mooniswap.sol\":6312:6470  for (uint i = 0; i < amounts.length; i++) {... */\n      jump(tag_444)\n    tag_445:\n      pop\n        /* \"contracts/Mooniswap.sol\":5832:6480  if (totalSupply == 0) {... */\n    tag_443:\n        /* \"contracts/Mooniswap.sol\":6517:6527  fairSupply */\n      dup4\n        /* \"contracts/Mooniswap.sol\":6490:6514  uint256 fairSupplyCached */\n      0x00\n        /* \"contracts/Mooniswap.sol\":6537:7201  for (uint i = 0; i < amounts.length; i++) {... */\n    tag_452:\n        /* \"contracts/Mooniswap.sol\":6554:6572  i < amounts.length */\n      dup9\n      dup2\n      lt\n        /* \"contracts/Mooniswap.sol\":6537:7201  for (uint i = 0; i < amounts.length; i++) {... */\n      iszero\n      tag_453\n      jumpi\n        /* \"contracts/Mooniswap.sol\":6614:6615  0 */\n      0x00\n        /* \"contracts/Mooniswap.sol\":6601:6608  amounts */\n      dup11\n      dup11\n        /* \"contracts/Mooniswap.sol\":6609:6610  i */\n      dup4\n        /* \"contracts/Mooniswap.sol\":6601:6611  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_455\n      jumpi\n      invalid\n    tag_455:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Mooniswap.sol\":6601:6615  amounts[i] > 0 */\n      gt\n        /* \"contracts/Mooniswap.sol\":6593:6645  require(amounts[i] > 0, \"Mooniswap: amount is zero\") */\n      tag_456\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x19\n      0x24\n      dup3\n      add\n      mstore\n      0x4d6f6f6e69737761703a20616d6f756e74206973207a65726f00000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_456:\n        /* \"contracts/Mooniswap.sol\":6659:6673  uint256 amount */\n      0x00\n        /* \"contracts/Mooniswap.sol\":6677:6693  totalSupply == 0 */\n      dup4\n      iszero\n        /* \"contracts/Mooniswap.sol\":6676:6801  (totalSupply == 0) ? amounts[i] :... */\n      tag_457\n      jumpi\n        /* \"contracts/Mooniswap.sol\":6726:6801  realBalances[i].mul(fairSupplyCached).add(totalSupply - 1).div(totalSupply) */\n      tag_458\n        /* \"contracts/Mooniswap.sol\":6789:6800  totalSupply */\n      dup5\n        /* \"contracts/Mooniswap.sol\":6726:6784  realBalances[i].mul(fairSupplyCached).add(totalSupply - 1) */\n      tag_252\n        /* \"contracts/Mooniswap.sol\":6782:6783  1 */\n      0x01\n        /* \"contracts/Mooniswap.sol\":6768:6779  totalSupply */\n      dup8\n        /* \"contracts/Mooniswap.sol\":6768:6783  totalSupply - 1 */\n      sub\n        /* \"contracts/Mooniswap.sol\":6726:6763  realBalances[i].mul(fairSupplyCached) */\n      tag_460\n        /* \"contracts/Mooniswap.sol\":6746:6762  fairSupplyCached */\n      dup8\n        /* \"contracts/Mooniswap.sol\":6726:6738  realBalances */\n      dup11\n        /* \"contracts/Mooniswap.sol\":6739:6740  i */\n      dup9\n        /* \"contracts/Mooniswap.sol\":6726:6741  realBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_461\n      jumpi\n      invalid\n    tag_461:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":6726:6745  realBalances[i].mul */\n      tag_253\n      swap1\n        /* \"contracts/Mooniswap.sol\":6726:6763  realBalances[i].mul(fairSupplyCached) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_460:\n        /* \"contracts/Mooniswap.sol\":6726:6767  realBalances[i].mul(fairSupplyCached).add */\n      swap1\n      tag_234\n        /* \"contracts/Mooniswap.sol\":6726:6784  realBalances[i].mul(fairSupplyCached).add(totalSupply - 1) */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":6726:6801  realBalances[i].mul(fairSupplyCached).add(totalSupply - 1).div(totalSupply) */\n    tag_458:\n        /* \"contracts/Mooniswap.sol\":6676:6801  (totalSupply == 0) ? amounts[i] :... */\n      jump(tag_462)\n    tag_457:\n        /* \"contracts/Mooniswap.sol\":6697:6704  amounts */\n      dup11\n      dup11\n        /* \"contracts/Mooniswap.sol\":6705:6706  i */\n      dup4\n        /* \"contracts/Mooniswap.sol\":6697:6707  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_463\n      jumpi\n      invalid\n    tag_463:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Mooniswap.sol\":6676:6801  (totalSupply == 0) ? amounts[i] :... */\n    tag_462:\n        /* \"contracts/Mooniswap.sol\":6659:6801  uint256 amount = (totalSupply == 0) ? amounts[i] :... */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":6833:6843  minAmounts */\n      dup9\n      dup9\n        /* \"contracts/Mooniswap.sol\":6844:6845  i */\n      dup4\n        /* \"contracts/Mooniswap.sol\":6833:6846  minAmounts[i] */\n      dup2\n      dup2\n      lt\n      tag_464\n      jumpi\n      invalid\n    tag_464:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Mooniswap.sol\":6823:6829  amount */\n      dup2\n        /* \"contracts/Mooniswap.sol\":6823:6846  amount >= minAmounts[i] */\n      lt\n      iszero\n        /* \"contracts/Mooniswap.sol\":6815:6883  require(amount >= minAmounts[i], \"Mooniswap: minAmount not reached\") */\n      tag_465\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4d6f6f6e69737761703a206d696e416d6f756e74206e6f742072656163686564\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_465:\n        /* \"contracts/Mooniswap.sol\":6898:6944  _tokens[i].uniTransferFromSenderToThis(amount) */\n      tag_466\n        /* \"contracts/Mooniswap.sol\":6937:6943  amount */\n      dup2\n        /* \"contracts/Mooniswap.sol\":6898:6905  _tokens */\n      dup8\n        /* \"contracts/Mooniswap.sol\":6906:6907  i */\n      dup5\n        /* \"contracts/Mooniswap.sol\":6898:6908  _tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_467\n      jumpi\n      invalid\n    tag_467:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":6898:6936  _tokens[i].uniTransferFromSenderToThis */\n      and\n      tag_354\n      swap1\n        /* \"contracts/Mooniswap.sol\":6898:6944  _tokens[i].uniTransferFromSenderToThis(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_466:\n        /* \"contracts/Mooniswap.sol\":6962:6977  totalSupply > 0 */\n      dup4\n      iszero\n        /* \"contracts/Mooniswap.sol\":6958:7191  if (totalSupply > 0) {... */\n      tag_468\n      jumpi\n        /* \"contracts/Mooniswap.sol\":6997:7014  uint256 confirmed */\n      0x00\n        /* \"contracts/Mooniswap.sol\":7017:7076  _tokens[i].uniBalanceOf(address(this)).sub(realBalances[i]) */\n      tag_469\n        /* \"contracts/Mooniswap.sol\":7060:7072  realBalances */\n      dup7\n        /* \"contracts/Mooniswap.sol\":7073:7074  i */\n      dup5\n        /* \"contracts/Mooniswap.sol\":7060:7075  realBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_470\n      jumpi\n      invalid\n    tag_470:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":7017:7055  _tokens[i].uniBalanceOf(address(this)) */\n      tag_344\n        /* \"contracts/Mooniswap.sol\":7049:7053  this */\n      address\n        /* \"contracts/Mooniswap.sol\":7017:7024  _tokens */\n      dup11\n        /* \"contracts/Mooniswap.sol\":7025:7026  i */\n      dup8\n        /* \"contracts/Mooniswap.sol\":7017:7027  _tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_432\n      jumpi\n      invalid\n        /* \"contracts/Mooniswap.sol\":7017:7076  _tokens[i].uniBalanceOf(address(this)).sub(realBalances[i]) */\n    tag_469:\n        /* \"contracts/Mooniswap.sol\":6997:7076  uint256 confirmed = _tokens[i].uniBalanceOf(address(this)).sub(realBalances[i]) */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":7107:7176  Math.min(fairSupply, totalSupply.mul(confirmed).div(realBalances[i])) */\n      tag_473\n        /* \"contracts/Mooniswap.sol\":7116:7126  fairSupply */\n      dup9\n        /* \"contracts/Mooniswap.sol\":7128:7175  totalSupply.mul(confirmed).div(realBalances[i]) */\n      tag_448\n        /* \"contracts/Mooniswap.sol\":7159:7171  realBalances */\n      dup9\n        /* \"contracts/Mooniswap.sol\":7172:7173  i */\n      dup7\n        /* \"contracts/Mooniswap.sol\":7159:7174  realBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_475\n      jumpi\n      invalid\n    tag_475:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":7128:7154  totalSupply.mul(confirmed) */\n      tag_252\n        /* \"contracts/Mooniswap.sol\":7144:7153  confirmed */\n      dup6\n        /* \"contracts/Mooniswap.sol\":7128:7139  totalSupply */\n      dup11\n        /* \"contracts/Mooniswap.sol\":7128:7143  totalSupply.mul */\n      tag_253\n      swap1\n        /* \"contracts/Mooniswap.sol\":7128:7154  totalSupply.mul(confirmed) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":7107:7176  Math.min(fairSupply, totalSupply.mul(confirmed).div(realBalances[i])) */\n    tag_473:\n        /* \"contracts/Mooniswap.sol\":7094:7176  fairSupply = Math.min(fairSupply, totalSupply.mul(confirmed).div(realBalances[i])) */\n      swap8\n      pop\n        /* \"contracts/Mooniswap.sol\":6958:7191  if (totalSupply > 0) {... */\n      pop\n    tag_468:\n      pop\n        /* \"contracts/Mooniswap.sol\":6574:6577  i++ */\n      0x01\n      add\n        /* \"contracts/Mooniswap.sol\":6537:7201  for (uint i = 0; i < amounts.length; i++) {... */\n      jump(tag_452)\n    tag_453:\n      pop\n        /* \"contracts/Mooniswap.sol\":7215:7230  totalSupply > 0 */\n      dup2\n      iszero\n        /* \"contracts/Mooniswap.sol\":7211:7554  if (totalSupply > 0) {... */\n      tag_477\n      jumpi\n        /* \"contracts/Mooniswap.sol\":7251:7257  uint i */\n      0x00\n        /* \"contracts/Mooniswap.sol\":7246:7544  for (uint i = 0; i < amounts.length; i++) {... */\n    tag_478:\n        /* \"contracts/Mooniswap.sol\":7263:7281  i < amounts.length */\n      dup9\n      dup2\n      lt\n        /* \"contracts/Mooniswap.sol\":7246:7544  for (uint i = 0; i < amounts.length; i++) {... */\n      iszero\n      tag_479\n      jumpi\n        /* \"contracts/Mooniswap.sol\":7306:7408  virtualBalancesForRemoval[_tokens[i]].scale(realBalances[i], totalSupply.add(fairSupply), totalSupply) */\n      tag_481\n        /* \"contracts/Mooniswap.sol\":7350:7362  realBalances */\n      dup5\n        /* \"contracts/Mooniswap.sol\":7363:7364  i */\n      dup3\n        /* \"contracts/Mooniswap.sol\":7350:7365  realBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_482\n      jumpi\n      invalid\n    tag_482:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":7367:7394  totalSupply.add(fairSupply) */\n      tag_483\n        /* \"contracts/Mooniswap.sol\":7383:7393  fairSupply */\n      dup9\n        /* \"contracts/Mooniswap.sol\":7367:7378  totalSupply */\n      dup7\n        /* \"contracts/Mooniswap.sol\":7367:7382  totalSupply.add */\n      tag_234\n      swap1\n        /* \"contracts/Mooniswap.sol\":7367:7394  totalSupply.add(fairSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_483:\n        /* \"contracts/Mooniswap.sol\":7396:7407  totalSupply */\n      dup6\n        /* \"contracts/Mooniswap.sol\":7306:7331  virtualBalancesForRemoval */\n      0x0f\n        /* \"contracts/Mooniswap.sol\":7306:7343  virtualBalancesForRemoval[_tokens[i]] */\n      0x00\n        /* \"contracts/Mooniswap.sol\":7332:7339  _tokens */\n      dup11\n        /* \"contracts/Mooniswap.sol\":7340:7341  i */\n      dup8\n        /* \"contracts/Mooniswap.sol\":7332:7342  _tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_484\n      jumpi\n      invalid\n    tag_484:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":7306:7343  virtualBalancesForRemoval[_tokens[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Mooniswap.sol\":7306:7349  virtualBalancesForRemoval[_tokens[i]].scale */\n      tag_263\n      swap1\n        /* \"contracts/Mooniswap.sol\":7306:7408  virtualBalancesForRemoval[_tokens[i]].scale(realBalances[i], totalSupply.add(fairSupply), totalSupply) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_481:\n        /* \"contracts/Mooniswap.sol\":7426:7529  virtualBalancesForAddition[_tokens[i]].scale(realBalances[i], totalSupply.add(fairSupply), totalSupply) */\n      tag_485\n        /* \"contracts/Mooniswap.sol\":7471:7483  realBalances */\n      dup5\n        /* \"contracts/Mooniswap.sol\":7484:7485  i */\n      dup3\n        /* \"contracts/Mooniswap.sol\":7471:7486  realBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_486\n      jumpi\n      invalid\n    tag_486:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":7488:7515  totalSupply.add(fairSupply) */\n      tag_487\n        /* \"contracts/Mooniswap.sol\":7504:7514  fairSupply */\n      dup9\n        /* \"contracts/Mooniswap.sol\":7488:7499  totalSupply */\n      dup7\n        /* \"contracts/Mooniswap.sol\":7488:7503  totalSupply.add */\n      tag_234\n      swap1\n        /* \"contracts/Mooniswap.sol\":7488:7515  totalSupply.add(fairSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_487:\n        /* \"contracts/Mooniswap.sol\":7517:7528  totalSupply */\n      dup6\n        /* \"contracts/Mooniswap.sol\":7426:7452  virtualBalancesForAddition */\n      0x0e\n        /* \"contracts/Mooniswap.sol\":7426:7464  virtualBalancesForAddition[_tokens[i]] */\n      0x00\n        /* \"contracts/Mooniswap.sol\":7453:7460  _tokens */\n      dup11\n        /* \"contracts/Mooniswap.sol\":7461:7462  i */\n      dup8\n        /* \"contracts/Mooniswap.sol\":7453:7463  _tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_484\n      jumpi\n      invalid\n        /* \"contracts/Mooniswap.sol\":7426:7529  virtualBalancesForAddition[_tokens[i]].scale(realBalances[i], totalSupply.add(fairSupply), totalSupply) */\n    tag_485:\n        /* \"contracts/Mooniswap.sol\":7283:7286  i++ */\n      0x01\n      add\n        /* \"contracts/Mooniswap.sol\":7246:7544  for (uint i = 0; i < amounts.length; i++) {... */\n      jump(tag_478)\n    tag_479:\n      pop\n        /* \"contracts/Mooniswap.sol\":7211:7554  if (totalSupply > 0) {... */\n    tag_477:\n        /* \"contracts/Mooniswap.sol\":7585:7586  0 */\n      0x00\n        /* \"contracts/Mooniswap.sol\":7572:7582  fairSupply */\n      dup6\n        /* \"contracts/Mooniswap.sol\":7572:7586  fairSupply > 0 */\n      gt\n        /* \"contracts/Mooniswap.sol\":7564:7622  require(fairSupply > 0, \"Mooniswap: result is not enough\") */\n      tag_489\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x4d6f6f6e69737761703a20726573756c74206973206e6f7420656e6f75676800\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_489:\n        /* \"contracts/Mooniswap.sol\":7632:7661  _mint(msg.sender, fairSupply) */\n      tag_490\n        /* \"contracts/Mooniswap.sol\":7638:7648  msg.sender */\n      caller\n        /* \"contracts/Mooniswap.sol\":7650:7660  fairSupply */\n      dup7\n        /* \"contracts/Mooniswap.sol\":7632:7637  _mint */\n      tag_388\n        /* \"contracts/Mooniswap.sol\":7632:7661  _mint(msg.sender, fairSupply) */\n      jump\t// in\n    tag_490:\n        /* \"contracts/Mooniswap.sol\":7677:7710  Deposited(msg.sender, fairSupply) */\n      0x40\n      dup1\n      mload\n      dup7\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Mooniswap.sol\":7687:7697  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Mooniswap.sol\":7677:7710  Deposited(msg.sender, fairSupply) */\n      0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1628:1629  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2563:2570  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2563:2585  _status = _NOT_ENTERED */\n      sstore\n      pop\n        /* \"contracts/Mooniswap.sol\":5128:7717  function deposit(uint256[] calldata amounts, uint256[] calldata minAmounts) external payable nonReentrant returns(uint256 fairSupply) {... */\n      swap1\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1983:2223  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1292  _msgSender() */\n      tag_492\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1290  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1292  _msgSender() */\n      jump\t// in\n    tag_492:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1270:1276  _owner */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1270:1292  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1262:1329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_493\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_493:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2071:2093  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2063:2136  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_495\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_495:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2172:2178  _owner */\n      sload(0x07)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2151:2189  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2172:2178  _owner */\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2151:2189  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2172:2178  _owner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2151:2189  OwnershipTransferred(_owner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2199:2205  _owner */\n      0x07\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2199:2216  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1983:2223  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/GSN/Context.sol\":677:687  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9359:9699  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9460:9479  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9452:9520  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_498\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_498:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9538:9559  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9530:9598  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_499\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_499:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9609:9627  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9609:9620  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9609:9627  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9609:9636  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9609:9645  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9660:9692  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9359:9699  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":11716:12103  function _getReturn(IERC20 src, IERC20 dst, uint256 amount, uint256 srcBalance, uint256 dstBalance) internal view returns(uint256) {... */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":11861:11873  isToken[src] */\n      dup6\n      and\n        /* \"contracts/Mooniswap.sol\":11838:11845  uint256 */\n      0x00\n        /* \"contracts/Mooniswap.sol\":11861:11873  isToken[src] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":11861:11868  isToken */\n      0x0c\n        /* \"contracts/Mooniswap.sol\":11861:11873  isToken[src] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Mooniswap.sol\":11861:11889  isToken[src] && isToken[dst] */\n      dup1\n      iszero\n      tag_501\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":11877:11889  isToken[dst] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Mooniswap.sol\":11877:11884  isToken */\n      0x0c\n        /* \"contracts/Mooniswap.sol\":11877:11889  isToken[dst] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Mooniswap.sol\":11861:11889  isToken[src] && isToken[dst] */\n    tag_501:\n        /* \"contracts/Mooniswap.sol\":11861:11903  isToken[src] && isToken[dst] && src != dst */\n      dup1\n      iszero\n      tag_502\n      jumpi\n      pop\n        /* \"contracts/Mooniswap.sol\":11900:11903  dst */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":11893:11903  src != dst */\n      and\n        /* \"contracts/Mooniswap.sol\":11893:11896  src */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":11893:11903  src != dst */\n      and\n      eq\n      iszero\n        /* \"contracts/Mooniswap.sol\":11861:11903  isToken[src] && isToken[dst] && src != dst */\n    tag_502:\n        /* \"contracts/Mooniswap.sol\":11861:11917  isToken[src] && isToken[dst] && src != dst && amount > 0 */\n      dup1\n      iszero\n      tag_503\n      jumpi\n      pop\n        /* \"contracts/Mooniswap.sol\":11916:11917  0 */\n      0x00\n        /* \"contracts/Mooniswap.sol\":11907:11913  amount */\n      dup5\n        /* \"contracts/Mooniswap.sol\":11907:11917  amount > 0 */\n      gt\n        /* \"contracts/Mooniswap.sol\":11861:11917  isToken[src] && isToken[dst] && src != dst && amount > 0 */\n    tag_503:\n        /* \"contracts/Mooniswap.sol\":11857:12097  if (isToken[src] && isToken[dst] && src != dst && amount > 0) {... */\n      iszero\n      tag_504\n      jumpi\n        /* \"contracts/Mooniswap.sol\":11933:11952  uint256 taxedAmount */\n      0x00\n        /* \"contracts/Mooniswap.sol\":11955:12005  amount.sub(amount.mul(fee()).div(FEE_DENOMINATOR)) */\n      tag_505\n        /* \"contracts/Mooniswap.sol\":11966:12004  amount.mul(fee()).div(FEE_DENOMINATOR) */\n      tag_506\n        /* \"contracts/Mooniswap.sol\":2567:2571  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Mooniswap.sol\":11966:11983  amount.mul(fee()) */\n      tag_252\n        /* \"contracts/Mooniswap.sol\":11977:11982  fee() */\n      tag_508\n        /* \"contracts/Mooniswap.sol\":11977:11980  fee */\n      tag_187\n        /* \"contracts/Mooniswap.sol\":11977:11982  fee() */\n      jump\t// in\n    tag_508:\n        /* \"contracts/Mooniswap.sol\":11966:11972  amount */\n      dup10\n      swap1\n        /* \"contracts/Mooniswap.sol\":11966:11976  amount.mul */\n      tag_253\n        /* \"contracts/Mooniswap.sol\":11966:11983  amount.mul(fee()) */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":11966:12004  amount.mul(fee()).div(FEE_DENOMINATOR) */\n    tag_506:\n        /* \"contracts/Mooniswap.sol\":11955:11961  amount */\n      dup7\n      swap1\n        /* \"contracts/Mooniswap.sol\":11955:11965  amount.sub */\n      tag_262\n        /* \"contracts/Mooniswap.sol\":11955:12005  amount.sub(amount.mul(fee()).div(FEE_DENOMINATOR)) */\n      jump\t// in\n    tag_505:\n        /* \"contracts/Mooniswap.sol\":11933:12005  uint256 taxedAmount = amount.sub(amount.mul(fee()).div(FEE_DENOMINATOR)) */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":12026:12086  taxedAmount.mul(dstBalance).div(srcBalance.add(taxedAmount)) */\n      tag_509\n        /* \"contracts/Mooniswap.sol\":12058:12085  srcBalance.add(taxedAmount) */\n      tag_510\n        /* \"contracts/Mooniswap.sol\":12058:12068  srcBalance */\n      dup6\n        /* \"contracts/Mooniswap.sol\":11933:12005  uint256 taxedAmount = amount.sub(amount.mul(fee()).div(FEE_DENOMINATOR)) */\n      dup4\n        /* \"contracts/Mooniswap.sol\":12058:12072  srcBalance.add */\n      tag_234\n        /* \"contracts/Mooniswap.sol\":12058:12085  srcBalance.add(taxedAmount) */\n      jump\t// in\n    tag_510:\n        /* \"contracts/Mooniswap.sol\":12026:12053  taxedAmount.mul(dstBalance) */\n      tag_252\n        /* \"contracts/Mooniswap.sol\":12026:12037  taxedAmount */\n      dup4\n        /* \"contracts/Mooniswap.sol\":12042:12052  dstBalance */\n      dup7\n        /* \"contracts/Mooniswap.sol\":12026:12041  taxedAmount.mul */\n      tag_253\n        /* \"contracts/Mooniswap.sol\":12026:12053  taxedAmount.mul(dstBalance) */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":12026:12086  taxedAmount.mul(dstBalance).div(srcBalance.add(taxedAmount)) */\n    tag_509:\n        /* \"contracts/Mooniswap.sol\":12019:12086  return taxedAmount.mul(dstBalance).div(srcBalance.add(taxedAmount)) */\n      swap2\n      pop\n      pop\n        /* \"contracts/Mooniswap.sol\":11857:12097  if (isToken[src] && isToken[dst] && src != dst && amount > 0) {... */\n    tag_504:\n        /* \"contracts/Mooniswap.sol\":11716:12103  function _getReturn(IERC20 src, IERC20 dst, uint256 amount, uint256 srcBalance, uint256 dstBalance) internal view returns(uint256) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7035:7565  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7140:7160  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7132:7202  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_513\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_513:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7220:7243  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7212:7283  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_514\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_514:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7341  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_515\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7315:7321  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7323:7332  recipient */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7334:7340  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7314  _beforeTokenTransfer */\n      tag_554\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7341  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_515:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7443  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_517\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7394:7400  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7443  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7389  _balances[sender] */\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7381  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7389  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7443  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7393  _balances[sender].sub */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7443  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_517:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7352:7369  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7352:7361  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7352:7369  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7352:7443  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7496  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  _balances[recipient].add(amount) */\n      tag_518\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7501:7507  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7500  _balances[recipient].add */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_518:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7453:7473  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7453:7462  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7453:7473  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7453:7508  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7523:7558  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7453:7473  _balances[recipient] */\n      swap2\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7523:7558  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7035:7565  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1832:1839  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1867:1879  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1859:1865  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1851:1880  require(b <= a, errorMessage) */\n      tag_520\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_521:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_523\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_521)\n    tag_523:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_524\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_524:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_520:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1902:1907  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":932:939  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":963:968  a + b */\n      dup3\n      dup3\n      add\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":986:992  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":978:1024  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_392\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8524:8934  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8607:8628  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8599:8666  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_528\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_528:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8677:8726  _beforeTokenTransfer(account, address(0), amount) */\n      tag_529\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8698:8705  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8715:8716  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8719:8725  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8677:8697  _beforeTokenTransfer */\n      tag_554\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8677:8726  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_529:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8758:8826  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      tag_530\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8781:8787  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8758:8826  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8758:8776  _balances[account] */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8758:8767  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8758:8776  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8758:8826  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8758:8780  _balances[account].sub */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8758:8826  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      jump\t// in\n    tag_530:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8737:8755  _balances[account] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8737:8746  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8737:8755  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8737:8826  _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8851:8863  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8851:8875  _totalSupply.sub(amount) */\n      tag_531\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8868:8874  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8851:8867  _totalSupply.sub */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8851:8875  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_531:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8836:8848  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8836:8875  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8890:8927  Transfer(account, address(0), amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8916:8917  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8890:8927  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8524:8934  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/UniERC20.sol\":434:662  function uniBalanceOf(IERC20 token, address account) internal view returns (uint256) {... */\n    tag_250:\n        /* \"contracts/libraries/UniERC20.sol\":510:517  uint256 */\n      0x00\n        /* \"contracts/libraries/UniERC20.sol\":533:545  isETH(token) */\n      tag_533\n        /* \"contracts/libraries/UniERC20.sol\":539:544  token */\n      dup4\n        /* \"contracts/libraries/UniERC20.sol\":533:538  isETH */\n      tag_334\n        /* \"contracts/libraries/UniERC20.sol\":533:545  isETH(token) */\n      jump\t// in\n    tag_533:\n        /* \"contracts/libraries/UniERC20.sol\":529:656  if (isETH(token)) {... */\n      iszero\n      tag_534\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/UniERC20.sol\":568:583  account.balance */\n      dup2\n      and\n      balance\n        /* \"contracts/libraries/UniERC20.sol\":561:583  return account.balance */\n      jump(tag_209)\n        /* \"contracts/libraries/UniERC20.sol\":529:656  if (isETH(token)) {... */\n    tag_534:\n        /* \"contracts/libraries/UniERC20.sol\":621:626  token */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/UniERC20.sol\":621:636  token.balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/libraries/UniERC20.sol\":637:644  account */\n      dup4\n        /* \"contracts/libraries/UniERC20.sol\":621:645  token.balanceOf(account) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_536\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_536:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_538\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_538:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_539\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_539:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/libraries/UniERC20.sol\":614:645  return token.balanceOf(account) */\n      jump(tag_209)\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2180:2639  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2238:2245  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2479:2485  a == 0 */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2475:2520  if (a == 0) {... */\n      tag_541\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2508:2509  0 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2501:2509  return 0 */\n      jump(tag_209)\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2475:2520  if (a == 0) {... */\n    tag_541:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2542:2547  a * b */\n      dup3\n      dup3\n      mul\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2546:2547  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2542:2543  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2542:2547  a * b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2542:2543  a */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2565:2570  c / a */\n      tag_542\n      jumpi\n      invalid\n    tag_542:\n      div\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2565:2575  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2557:2613  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_392\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3101:3231  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3159:3166  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      tag_392\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3189:3190  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3192:3193  b */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3185:3188  div */\n      tag_546\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"contracts/libraries/UniERC20.sol\":668:943  function uniTransfer(IERC20 token, address payable to, uint256 amount) internal {... */\n    tag_256:\n        /* \"contracts/libraries/UniERC20.sol\":762:772  amount > 0 */\n      dup1\n      iszero\n        /* \"contracts/libraries/UniERC20.sol\":758:937  if (amount > 0) {... */\n      tag_554\n      jumpi\n        /* \"contracts/libraries/UniERC20.sol\":792:804  isETH(token) */\n      tag_549\n        /* \"contracts/libraries/UniERC20.sol\":798:803  token */\n      dup4\n        /* \"contracts/libraries/UniERC20.sol\":792:797  isETH */\n      tag_334\n        /* \"contracts/libraries/UniERC20.sol\":792:804  isETH(token) */\n      jump\t// in\n    tag_549:\n        /* \"contracts/libraries/UniERC20.sol\":788:927  if (isETH(token)) {... */\n      iszero\n      tag_550\n      jumpi\n        /* \"contracts/libraries/UniERC20.sol\":824:843  to.transfer(amount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/UniERC20.sol\":824:835  to.transfer */\n      dup4\n      and\n      swap1\n        /* \"contracts/libraries/UniERC20.sol\":824:843  to.transfer(amount) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/libraries/UniERC20.sol\":836:842  amount */\n      dup4\n      swap1\n        /* \"contracts/libraries/UniERC20.sol\":824:843  to.transfer(amount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/libraries/UniERC20.sol\":836:842  amount */\n      dup6\n        /* \"contracts/libraries/UniERC20.sol\":824:835  to.transfer */\n      dup9\n        /* \"contracts/libraries/UniERC20.sol\":824:843  to.transfer(amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_552\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_552:\n      pop\n        /* \"contracts/libraries/UniERC20.sol\":788:927  if (isETH(token)) {... */\n      jump(tag_554)\n    tag_550:\n        /* \"contracts/libraries/UniERC20.sol\":882:912  token.safeTransfer(to, amount) */\n      tag_554\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/UniERC20.sol\":882:900  token.safeTransfer */\n      dup5\n      and\n        /* \"contracts/libraries/UniERC20.sol\":901:903  to */\n      dup4\n        /* \"contracts/libraries/UniERC20.sol\":905:911  amount */\n      dup4\n        /* \"contracts/libraries/UniERC20.sol\":882:900  token.safeTransfer */\n      tag_555\n        /* \"contracts/libraries/UniERC20.sol\":882:912  token.safeTransfer(to, amount) */\n      jump\t// in\n    tag_554:\n        /* \"contracts/libraries/UniERC20.sol\":668:943  function uniTransfer(IERC20 token, address payable to, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1321:1455  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1379:1386  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1405:1448  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_392\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1409:1410  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1412:1413  b */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1405:1448  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1405:1408  sub */\n      tag_227\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":1405:1448  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":971:1170  function scale(VirtualBalance.Data storage self, uint256 realBalance, uint256 num, uint256 denom) internal {... */\n    tag_263:\n        /* \"contracts/Mooniswap.sol\":1088:1163  set(self, current(self, realBalance).mul(num).add(denom.sub(1)).div(denom)) */\n      tag_559\n        /* \"contracts/Mooniswap.sol\":1092:1096  self */\n      dup5\n        /* \"contracts/Mooniswap.sol\":1098:1162  current(self, realBalance).mul(num).add(denom.sub(1)).div(denom) */\n      tag_560\n        /* \"contracts/Mooniswap.sol\":1156:1161  denom */\n      dup4\n        /* \"contracts/Mooniswap.sol\":1098:1151  current(self, realBalance).mul(num).add(denom.sub(1)) */\n      tag_252\n        /* \"contracts/Mooniswap.sol\":1138:1150  denom.sub(1) */\n      tag_562\n        /* \"contracts/Mooniswap.sol\":1156:1161  denom */\n      dup3\n        /* \"contracts/Mooniswap.sol\":1148:1149  1 */\n      0x01\n        /* \"contracts/Mooniswap.sol\":1138:1147  denom.sub */\n      tag_262\n        /* \"contracts/Mooniswap.sol\":1138:1150  denom.sub(1) */\n      jump\t// in\n    tag_562:\n        /* \"contracts/Mooniswap.sol\":1098:1124  current(self, realBalance) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      dup11\n      sload\n      sub(shl(0xd8, 0x01), 0x01)\n      dup2\n      and\n      dup3\n      mstore\n      shl(0xd8, 0x01)\n      swap1\n      div\n      0xffffffffff\n      and\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/Mooniswap.sol\":1098:1133  current(self, realBalance).mul(num) */\n      tag_460\n      swap1\n        /* \"contracts/Mooniswap.sol\":1129:1132  num */\n      dup10\n      swap1\n        /* \"contracts/Mooniswap.sol\":1098:1124  current(self, realBalance) */\n      tag_383\n      swap1\n        /* \"contracts/Mooniswap.sol\":1112:1123  realBalance */\n      dup13\n        /* \"contracts/Mooniswap.sol\":1098:1105  current */\n      tag_348\n        /* \"contracts/Mooniswap.sol\":1098:1124  current(self, realBalance) */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":1098:1162  current(self, realBalance).mul(num).add(denom.sub(1)).div(denom) */\n    tag_560:\n        /* \"contracts/Mooniswap.sol\":1088:1091  set */\n      tag_364\n        /* \"contracts/Mooniswap.sol\":1088:1163  set(self, current(self, realBalance).mul(num).add(denom.sub(1)).div(denom)) */\n      jump\t// in\n    tag_559:\n        /* \"contracts/Mooniswap.sol\":971:1170  function scale(VirtualBalance.Data storage self, uint256 realBalance, uint256 num, uint256 denom) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/UniERC20.sol\":317:428  function isETH(IERC20 token) internal pure returns(bool) {... */\n    tag_334:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/UniERC20.sol\":392:420  address(token) == address(0) */\n      and\n      iszero\n      swap1\n        /* \"contracts/libraries/UniERC20.sol\":317:428  function isETH(IERC20 token) internal pure returns(bool) {... */\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":1176:1556  function current(VirtualBalance.Data memory self, uint256 realBalance) internal view returns(uint256) {... */\n    tag_348:\n        /* \"contracts/Mooniswap.sol\":1269:1276  uint256 */\n      0x00\n        /* \"contracts/Mooniswap.sol\":1288:1306  uint256 timePassed */\n      dup1\n        /* \"contracts/Mooniswap.sol\":1309:1363  Math.min(DECAY_PERIOD, block.timestamp.sub(self.time)) */\n      tag_567\n        /* \"contracts/Mooniswap.sol\":643:652  5 minutes */\n      0x012c\n        /* \"contracts/Mooniswap.sol\":1332:1362  block.timestamp.sub(self.time) */\n      tag_448\n        /* \"contracts/Mooniswap.sol\":1352:1356  self */\n      dup7\n        /* \"contracts/Mooniswap.sol\":1352:1361  self.time */\n      0x20\n      add\n      mload\n        /* \"contracts/Mooniswap.sol\":1332:1362  block.timestamp.sub(self.time) */\n      0xffffffffff\n      and\n        /* \"contracts/Mooniswap.sol\":1332:1347  block.timestamp */\n      timestamp\n        /* \"contracts/Mooniswap.sol\":1332:1351  block.timestamp.sub */\n      tag_262\n      swap1\n        /* \"contracts/Mooniswap.sol\":1332:1362  block.timestamp.sub(self.time) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":1309:1363  Math.min(DECAY_PERIOD, block.timestamp.sub(self.time)) */\n    tag_567:\n        /* \"contracts/Mooniswap.sol\":1288:1363  uint256 timePassed = Math.min(DECAY_PERIOD, block.timestamp.sub(self.time)) */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":1373:1391  uint256 timeRemain */\n      0x00\n        /* \"contracts/Mooniswap.sol\":1394:1422  DECAY_PERIOD.sub(timePassed) */\n      tag_569\n        /* \"contracts/Mooniswap.sol\":643:652  5 minutes */\n      0x012c\n        /* \"contracts/Mooniswap.sol\":1288:1363  uint256 timePassed = Math.min(DECAY_PERIOD, block.timestamp.sub(self.time)) */\n      dup4\n        /* \"contracts/Mooniswap.sol\":1394:1410  DECAY_PERIOD.sub */\n      tag_262\n        /* \"contracts/Mooniswap.sol\":1394:1422  DECAY_PERIOD.sub(timePassed) */\n      jump\t// in\n    tag_569:\n        /* \"contracts/Mooniswap.sol\":1373:1422  uint256 timeRemain = DECAY_PERIOD.sub(timePassed) */\n      swap1\n      pop\n        /* \"contracts/Mooniswap.sol\":1439:1549  uint256(self.balance).mul(timeRemain).add(... */\n      tag_504\n        /* \"contracts/Mooniswap.sol\":643:652  5 minutes */\n      0x012c\n        /* \"contracts/Mooniswap.sol\":1439:1531  uint256(self.balance).mul(timeRemain).add(... */\n      tag_252\n        /* \"contracts/Mooniswap.sol\":1494:1521  realBalance.mul(timePassed) */\n      tag_572\n        /* \"contracts/Mooniswap.sol\":1494:1505  realBalance */\n      dup8\n        /* \"contracts/Mooniswap.sol\":1510:1520  timePassed */\n      dup7\n        /* \"contracts/Mooniswap.sol\":1494:1509  realBalance.mul */\n      tag_253\n        /* \"contracts/Mooniswap.sol\":1494:1521  realBalance.mul(timePassed) */\n      jump\t// in\n    tag_572:\n        /* \"contracts/Mooniswap.sol\":1447:1459  self.balance */\n      dup9\n      mload\n        /* \"contracts/Mooniswap.sol\":1439:1476  uint256(self.balance).mul(timeRemain) */\n      tag_460\n      swap1\n      sub(shl(0xd8, 0x01), 0x01)\n        /* \"contracts/Mooniswap.sol\":1439:1460  uint256(self.balance) */\n      and\n        /* \"contracts/Mooniswap.sol\":1465:1475  timeRemain */\n      dup7\n        /* \"contracts/Mooniswap.sol\":1439:1464  uint256(self.balance).mul */\n      tag_253\n        /* \"contracts/Mooniswap.sol\":1439:1476  uint256(self.balance).mul(timeRemain) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/math/Math.sol\":215:320  function max(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/math/Math.sol\":273:280  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/Math.sol\":304:305  b */\n      dup2\n        /* \"@openzeppelin/contracts/math/Math.sol\":299:300  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/Math.sol\":299:305  a >= b */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/Math.sol\":299:313  a >= b ? a : b */\n      tag_575\n      jumpi\n        /* \"@openzeppelin/contracts/math/Math.sol\":312:313  b */\n      dup2\n        /* \"@openzeppelin/contracts/math/Math.sol\":299:313  a >= b ? a : b */\n      jump(tag_392)\n    tag_575:\n      pop\n        /* \"@openzeppelin/contracts/math/Math.sol\":308:309  a */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/math/Math.sol\":215:320  function max(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/Math.sol\":391:495  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/math/Math.sol\":449:456  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/Math.sol\":479:480  b */\n      dup2\n        /* \"@openzeppelin/contracts/math/Math.sol\":475:476  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/Math.sol\":475:480  a < b */\n      lt\n        /* \"@openzeppelin/contracts/math/Math.sol\":475:488  a < b ? a : b */\n      tag_575\n      jumpi\n        /* \"@openzeppelin/contracts/math/Math.sol\":487:488  b */\n      dup2\n        /* \"@openzeppelin/contracts/math/Math.sol\":475:488  a < b ? a : b */\n      jump(tag_392)\n        /* \"contracts/libraries/UniERC20.sol\":949:1459  function uniTransferFromSenderToThis(IERC20 token, uint256 amount) internal {... */\n    tag_354:\n        /* \"contracts/libraries/UniERC20.sol\":1039:1049  amount > 0 */\n      dup1\n      iszero\n        /* \"contracts/libraries/UniERC20.sol\":1035:1453  if (amount > 0) {... */\n      tag_307\n      jumpi\n        /* \"contracts/libraries/UniERC20.sol\":1069:1081  isETH(token) */\n      tag_582\n        /* \"contracts/libraries/UniERC20.sol\":1075:1080  token */\n      dup3\n        /* \"contracts/libraries/UniERC20.sol\":1069:1074  isETH */\n      tag_334\n        /* \"contracts/libraries/UniERC20.sol\":1069:1081  isETH(token) */\n      jump\t// in\n    tag_582:\n        /* \"contracts/libraries/UniERC20.sol\":1065:1443  if (isETH(token)) {... */\n      iszero\n      tag_583\n      jumpi\n        /* \"contracts/libraries/UniERC20.sol\":1122:1128  amount */\n      dup1\n        /* \"contracts/libraries/UniERC20.sol\":1109:1118  msg.value */\n      callvalue\n        /* \"contracts/libraries/UniERC20.sol\":1109:1128  msg.value >= amount */\n      lt\n      iszero\n        /* \"contracts/libraries/UniERC20.sol\":1101:1159  require(msg.value >= amount, \"UniERC20: not enough value\") */\n      tag_584\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x556e6945524332303a206e6f7420656e6f7567682076616c7565000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_584:\n        /* \"contracts/libraries/UniERC20.sol\":1193:1199  amount */\n      dup1\n        /* \"contracts/libraries/UniERC20.sol\":1181:1190  msg.value */\n      callvalue\n        /* \"contracts/libraries/UniERC20.sol\":1181:1199  msg.value > amount */\n      gt\n        /* \"contracts/libraries/UniERC20.sol\":1177:1333  if (msg.value > amount) {... */\n      iszero\n      tag_585\n      jumpi\n        /* \"contracts/libraries/UniERC20.sol\":1272:1282  msg.sender */\n      caller\n        /* \"contracts/libraries/UniERC20.sol\":1272:1314  msg.sender.transfer(msg.value.sub(amount)) */\n      0x08fc\n        /* \"contracts/libraries/UniERC20.sol\":1292:1313  msg.value.sub(amount) */\n      tag_586\n        /* \"contracts/libraries/UniERC20.sol\":1292:1301  msg.value */\n      callvalue\n        /* \"contracts/libraries/UniERC20.sol\":1306:1312  amount */\n      dup5\n        /* \"contracts/libraries/UniERC20.sol\":1292:1305  msg.value.sub */\n      tag_262\n        /* \"contracts/libraries/UniERC20.sol\":1292:1313  msg.value.sub(amount) */\n      jump\t// in\n    tag_586:\n        /* \"contracts/libraries/UniERC20.sol\":1272:1314  msg.sender.transfer(msg.value.sub(amount)) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_588\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_588:\n      pop\n        /* \"contracts/libraries/UniERC20.sol\":1177:1333  if (msg.value > amount) {... */\n    tag_585:\n        /* \"contracts/libraries/UniERC20.sol\":1065:1443  if (isETH(token)) {... */\n      jump(tag_307)\n    tag_583:\n        /* \"contracts/libraries/UniERC20.sol\":1371:1428  token.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_307\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/UniERC20.sol\":1371:1393  token.safeTransferFrom */\n      dup4\n      and\n        /* \"contracts/libraries/UniERC20.sol\":1394:1404  msg.sender */\n      caller\n        /* \"contracts/libraries/UniERC20.sol\":1414:1418  this */\n      address\n        /* \"contracts/libraries/UniERC20.sol\":1421:1427  amount */\n      dup5\n        /* \"contracts/libraries/UniERC20.sol\":1371:1393  token.safeTransferFrom */\n      tag_591\n        /* \"contracts/libraries/UniERC20.sol\":1371:1428  token.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n        /* \"contracts/Mooniswap.sol\":659:825  function set(VirtualBalance.Data storage self, uint256 balance) internal {... */\n    tag_364:\n        /* \"contracts/Mooniswap.sol\":742:773  self.balance = uint216(balance) */\n      dup2\n      sload\n      not(sub(shl(0xd8, 0x01), 0x01))\n      and\n      sub(shl(0xd8, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      or\n        /* \"contracts/Mooniswap.sol\":783:818  self.time = uint40(block.timestamp) */\n      and\n      shl(0xd8, 0x01)\n        /* \"contracts/Mooniswap.sol\":802:817  block.timestamp */\n      timestamp\n        /* \"contracts/Mooniswap.sol\":783:818  self.time = uint40(block.timestamp) */\n      0xffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/Mooniswap.sol\":659:825  function set(VirtualBalance.Data storage self, uint256 balance) internal {... */\n      jump\t// out\n        /* \"contracts/Mooniswap.sol\":831:965  function update(VirtualBalance.Data storage self, uint256 realBalance) internal {... */\n    tag_369:\n        /* \"contracts/Mooniswap.sol\":931:957  current(self, realBalance) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      dup3\n      sload\n      sub(shl(0xd8, 0x01), 0x01)\n      dup2\n      and\n      dup3\n      mstore\n      shl(0xd8, 0x01)\n      swap1\n      div\n      0xffffffffff\n      and\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/Mooniswap.sol\":921:958  set(self, current(self, realBalance)) */\n      tag_307\n      swap1\n        /* \"contracts/Mooniswap.sol\":931:957  current(self, realBalance) */\n      dup4\n      swap1\n      tag_560\n      swap1\n        /* \"contracts/Mooniswap.sol\":945:956  realBalance */\n      dup5\n        /* \"contracts/Mooniswap.sol\":931:938  current */\n      tag_348\n        /* \"contracts/Mooniswap.sol\":931:957  current(self, realBalance) */\n      jump\t// in\n        /* \"contracts/libraries/Sqrt.sol\":187:558  function sqrt(uint256 y) internal pure returns (uint256) {... */\n    tag_385:\n        /* \"contracts/libraries/Sqrt.sol\":235:242  uint256 */\n      0x00\n        /* \"contracts/libraries/Sqrt.sol\":262:263  3 */\n      0x03\n        /* \"contracts/libraries/Sqrt.sol\":258:259  y */\n      dup3\n        /* \"contracts/libraries/Sqrt.sol\":258:263  y > 3 */\n      gt\n        /* \"contracts/libraries/Sqrt.sol\":254:552  if (y > 3) {... */\n      iszero\n      tag_597\n      jumpi\n        /* \"contracts/libraries/Sqrt.sol\":291:292  y */\n      dup2\n        /* \"contracts/libraries/Sqrt.sol\":326:327  1 */\n      0x01\n        /* \"contracts/libraries/Sqrt.sol\":322:323  2 */\n      0x02\n        /* \"contracts/libraries/Sqrt.sol\":318:323  y / 2 */\n      dup3\n      div\n        /* \"contracts/libraries/Sqrt.sol\":318:327  y / 2 + 1 */\n      add\n        /* \"contracts/libraries/Sqrt.sol\":341:430  while (x < z) {... */\n    tag_599:\n        /* \"contracts/libraries/Sqrt.sol\":352:353  z */\n      dup2\n        /* \"contracts/libraries/Sqrt.sol\":348:349  x */\n      dup2\n        /* \"contracts/libraries/Sqrt.sol\":348:353  x < z */\n      lt\n        /* \"contracts/libraries/Sqrt.sol\":341:430  while (x < z) {... */\n      iszero\n      tag_600\n      jumpi\n        /* \"contracts/libraries/Sqrt.sol\":377:378  x */\n      dup1\n        /* \"contracts/libraries/Sqrt.sol\":373:378  z = x */\n      swap2\n      pop\n        /* \"contracts/libraries/Sqrt.sol\":414:415  2 */\n      0x02\n        /* \"contracts/libraries/Sqrt.sol\":409:410  x */\n      dup2\n        /* \"contracts/libraries/Sqrt.sol\":405:406  x */\n      dup3\n        /* \"contracts/libraries/Sqrt.sol\":401:402  y */\n      dup7\n        /* \"contracts/libraries/Sqrt.sol\":401:406  y / x */\n      dup2\n      tag_601\n      jumpi\n      invalid\n    tag_601:\n      div\n        /* \"contracts/libraries/Sqrt.sol\":401:410  y / x + x */\n      add\n        /* \"contracts/libraries/Sqrt.sol\":400:415  (y / x + x) / 2 */\n      dup2\n      tag_602\n      jumpi\n      invalid\n    tag_602:\n      div\n        /* \"contracts/libraries/Sqrt.sol\":396:415  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"contracts/libraries/Sqrt.sol\":341:430  while (x < z) {... */\n      jump(tag_599)\n    tag_600:\n      pop\n        /* \"contracts/libraries/Sqrt.sol\":450:451  z */\n      swap1\n      pop\n        /* \"contracts/libraries/Sqrt.sol\":443:451  return z */\n      jump(tag_266)\n        /* \"contracts/libraries/Sqrt.sol\":254:552  if (y > 3) {... */\n    tag_597:\n        /* \"contracts/libraries/Sqrt.sol\":472:478  y != 0 */\n      dup2\n      iszero\n        /* \"contracts/libraries/Sqrt.sol\":468:552  if (y != 0) {... */\n      tag_604\n      jumpi\n      pop\n        /* \"contracts/libraries/Sqrt.sol\":501:502  1 */\n      0x01\n        /* \"contracts/libraries/Sqrt.sol\":494:502  return 1 */\n      jump(tag_266)\n        /* \"contracts/libraries/Sqrt.sol\":468:552  if (y != 0) {... */\n    tag_604:\n      pop\n        /* \"contracts/libraries/Sqrt.sol\":540:541  0 */\n      0x00\n        /* \"contracts/libraries/Sqrt.sol\":533:541  return 0 */\n      jump(tag_266)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:8205  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_388:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7918:7939  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7910:7975  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_607\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_607:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7986:8035  _beforeTokenTransfer(address(0), account, amount) */\n      tag_608\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8015:8016  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8019:8026  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8028:8034  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7986:8006  _beforeTokenTransfer */\n      tag_554\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7986:8035  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_608:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8061:8073  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8061:8085  _totalSupply.add(amount) */\n      tag_609\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8078:8084  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8061:8077  _totalSupply.add */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8061:8085  _totalSupply.add(amount) */\n      jump\t// in\n    tag_609:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8046:8058  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8046:8085  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8116:8134  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8116:8125  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8116:8134  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8116:8146  _balances[account].add(amount) */\n      tag_610\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8139:8145  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8116:8138  _balances[account].add */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8116:8146  _balances[account].add(amount) */\n      jump\t// in\n    tag_610:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8095:8113  _balances[account] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8095:8104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8095:8113  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8095:8146  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8198  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8095:8113  _balances[account] */\n      swap3\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8095:8104  _balances */\n      swap2\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8198  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:8205  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3713:3985  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_546:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3799:3806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3833:3845  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3826:3831  b > 0 */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3818:3846  require(b > 0, errorMessage) */\n      tag_613\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_523\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_521)\n    tag_613:\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3856:3865  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3872:3873  b */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3868:3869  a */\n      dup6\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3868:3873  a / b */\n      dup2\n      tag_618\n      jumpi\n      invalid\n    tag_618:\n      div\n      swap6\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3713:3985  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":696:871  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_555:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":805:863  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":778:864  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_554\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":798:803  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":778:797  _callOptionalReturn */\n      tag_621\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":778:864  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":877:1080  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_591:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1004:1072  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup5\n      and\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x84\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":977:1073  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_559\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":997:1002  token */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2959:3710  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_621:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3378:3401  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3404:3473  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_625\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3432:3436  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3404:3473  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3417  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3404:3431  address(token).functionCall */\n      and\n      tag_626\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3404:3473  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_625:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3487:3504  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3378:3473  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3487:3508  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3483:3704  if (returndata.length > 0) { // Return data is optional... */\n      tag_554\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3627:3637  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3616:3646  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_628\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_628:\n      pop\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3608:3693  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_554\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3770:3964  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_626:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:3885  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3904:3957  _functionCallWithValue(target, data, 0, errorMessage) */\n      tag_216\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3927:3933  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3935:3939  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3941:3942  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3944:3956  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5259  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5279:5297  isContract(target) */\n      tag_634\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5290:5296  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5279:5289  isContract */\n      tag_635\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5279:5297  isContract(target) */\n      jump\t// in\n    tag_634:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5271:5331  require(isContract(target), \"Address: call to non-contract\") */\n      tag_636\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_636:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5402:5414  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5416:5439  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5443:5449  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5443:5454  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5463:5471  weiValue */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5474:5478  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5443:5479  target.call{ value: weiValue }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_637:\n      0x20\n      dup4\n      lt\n      tag_639\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_637)\n    tag_639:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_642\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_641)\n    tag_642:\n      0x60\n      swap2\n      pop\n    tag_641:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5401:5479  (bool success, bytes memory returndata) = target.call{ value: weiValue }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5493:5500  success */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5489:6069  if (success) {... */\n      iszero\n      tag_643\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5523:5533  returndata */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5516:5533  return returndata */\n      tag_216\n      swap1\n      pop\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5489:6069  if (success) {... */\n    tag_643:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5634:5651  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5634:5655  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5630:6059  if (returndata.length > 0) {... */\n      tag_645\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5892:5902  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5886:5903  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5952:5967  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5939:5949  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5935:5937  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5931:5950  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5924:5968  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5841:5986  {... */\n    tag_645:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6024:6044  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup7\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup7\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6031:6043  errorMessage */\n      dup8\n      swap4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6024:6044  revert(errorMessage) */\n      swap2\n      swap3\n      dup4\n      swap3\n      0x44\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_523\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_521)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":718:1328  function isContract(address account) internal view returns (bool) {... */\n    tag_635:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":778:782  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1239:1259  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1084:1150  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1278:1301  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1278:1320  codehash != accountHash && codehash != 0x0 */\n      tag_216\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1305:1320  codehash != 0x0 */\n      iszero\n      iszero\n      swap3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1270:1321  return (codehash != accountHash && codehash != 0x0) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":718:1328  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n    tag_305:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_655\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_654:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_655\n      jumpi\n      dup3\n      mload\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_654)\n    tag_655:\n      pop\n      tag_656\n      swap3\n      swap2\n      pop\n      tag_657\n      jump\t// in\n    tag_656:\n      pop\n      swap1\n      jump\t// out\n    tag_339:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_657:\n    tag_658:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_656\n      jumpi\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_658)\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c 5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f 45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220c56a9d4f729c91522386bea105d15297ae47fa07b747c70d4233e30b7bd1e7be64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60076080818152664c502d4e414d4560c81b60a0908152610100604052600960c090815268534f4d455448494e4760b81b60e052919262000043916003916200022a565b508051620000599060049060208401906200022a565b50506005805460ff1916601217905550600160065560006200007a6200018c565b600780546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600980546001600160a01b03191633179055467f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200010662000190565b805160209182012060408051808201825260018152603160f81b90840152805180840194909452838101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606084015260808301939093523060a0808401919091528351808403909101815260c09092019092528051910120600855620002c6565b3390565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015620002205780601f10620001f45761010080835404028352916020019162000220565b820191906000526020600020905b8154815290600101906020018083116200020257829003601f168201915b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200026d57805160ff19168380011785556200029d565b828001600101855582156200029d579182015b828111156200029d57825182559160200191906001019062000280565b50620002ab929150620002af565b5090565b5b80821115620002ab5760008155600101620002b0565b61368380620002d66000396000f3fe6080604052600436106102255760003560e01c80638da5cb5b11610123578063c45a0155116100ab578063dd62ed3e1161006f578063dd62ed3e146109fe578063ddca3f4314610a39578063e7ff42c914610a4e578063f223885a14610a81578063f2fde38b14610b3f57610225565b8063c45a0155146108ff578063d505accf14610914578063d5bcb9b514610972578063d73792a9146109b6578063d7d3aab5146109cb57610225565b8063a9059cbb116100f2578063a9059cbb146107d5578063aa6ca8081461080e578063b1ec4c4014610873578063b21b5a21146108d5578063baf13a0a146108ea57610225565b80638da5cb5b146106c457806395d89b41146106d9578063a224cee7146106ee578063a457c2d71461079c57610225565b806339509351116101b15780636edc2c09116101755780636edc2c09146105dd57806370a0823114610610578063715018a61461064357806378e3214f146106585780637ecebe001461069157610225565b8063395093511461043657806348d67e1b1461046f5780634f64b2be146104845780635915d806146104ca5780635ed9156d1461058157610225565b80631e1401f8116101f85780631e1401f81461035b57806323b872dd1461039e57806330adf81f146103e1578063313ce567146103f65780633644e5151461042157610225565b806306fdde031461022a578063095ea7b3146102b457806318160ddd1461030157806319f3736114610328575b600080fd5b34801561023657600080fd5b5061023f610b72565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610279578181015183820152602001610261565b50505050905090810190601f1680156102a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c057600080fd5b506102ed600480360360408110156102d757600080fd5b506001600160a01b038135169060200135610c08565b604080519115158252519081900360200190f35b34801561030d57600080fd5b50610316610c26565b60408051918252519081900360200190f35b34801561033457600080fd5b506102ed6004803603602081101561034b57600080fd5b50356001600160a01b0316610c2c565b34801561036757600080fd5b506103166004803603606081101561037e57600080fd5b506001600160a01b03813581169160208101359091169060400135610c41565b3480156103aa57600080fd5b506102ed600480360360608110156103c157600080fd5b506001600160a01b03813581169160208101359091169060400135610c68565b3480156103ed57600080fd5b50610316610cef565b34801561040257600080fd5b5061040b610d13565b6040805160ff9092168252519081900360200190f35b34801561042d57600080fd5b50610316610d1c565b34801561044257600080fd5b506102ed6004803603604081101561045957600080fd5b506001600160a01b038135169060200135610d22565b34801561047b57600080fd5b50610316610d70565b34801561049057600080fd5b506104ae600480360360208110156104a757600080fd5b5035610d76565b604080516001600160a01b039092168252519081900360200190f35b3480156104d657600080fd5b5061057f600480360360408110156104ed57600080fd5b81359190810190604081016020820135600160201b81111561050e57600080fd5b82018360208201111561052057600080fd5b803590602001918460208302840111600160201b8311171561054157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610d9d945050505050565b005b34801561058d57600080fd5b506105b4600480360360208110156105a457600080fd5b50356001600160a01b0316610f84565b604080516001600160d81b03909316835264ffffffffff90911660208301528051918290030190f35b3480156105e957600080fd5b506105b46004803603602081101561060057600080fd5b50356001600160a01b0316610faf565b34801561061c57600080fd5b506103166004803603602081101561063357600080fd5b50356001600160a01b0316610fda565b34801561064f57600080fd5b5061057f610ff9565b34801561066457600080fd5b5061057f6004803603604081101561067b57600080fd5b506001600160a01b0381351690602001356110ad565b34801561069d57600080fd5b50610316600480360360208110156106b457600080fd5b50356001600160a01b0316611303565b3480156106d057600080fd5b506104ae611315565b3480156106e557600080fd5b5061023f611324565b3480156106fa57600080fd5b5061057f6004803603602081101561071157600080fd5b810190602081018135600160201b81111561072b57600080fd5b82018360208201111561073d57600080fd5b803590602001918460208302840111600160201b8311171561075e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611385945050505050565b3480156107a857600080fd5b506102ed600480360360408110156107bf57600080fd5b506001600160a01b0381351690602001356114e6565b3480156107e157600080fd5b506102ed600480360360408110156107f857600080fd5b506001600160a01b03813516906020013561154e565b34801561081a57600080fd5b50610823611562565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561085f578181015183820152602001610847565b505050509050019250505060405180910390f35b34801561087f57600080fd5b506108a66004803603602081101561089657600080fd5b50356001600160a01b03166115c3565b60405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390f35b3480156108e157600080fd5b506103166115e9565b3480156108f657600080fd5b506103166115ee565b34801561090b57600080fd5b506104ae6115f4565b34801561092057600080fd5b5061057f600480360360e081101561093757600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611603565b610316600480360360a081101561098857600080fd5b506001600160a01b0381358116916020810135821691604082013591606081013591608090910135166117f4565b3480156109c257600080fd5b50610316611cfd565b3480156109d757600080fd5b50610316600480360360208110156109ee57600080fd5b50356001600160a01b0316611d09565b348015610a0a57600080fd5b5061031660048036036040811015610a2157600080fd5b506001600160a01b0381358116916020013516611d80565b348015610a4557600080fd5b50610316611dab565b348015610a5a57600080fd5b5061031660048036036020811015610a7157600080fd5b50356001600160a01b0316611e21565b61031660048036036040811015610a9757600080fd5b810190602081018135600160201b811115610ab157600080fd5b820183602082011115610ac357600080fd5b803590602001918460208302840111600160201b83111715610ae457600080fd5b919390929091602081019035600160201b811115610b0157600080fd5b820183602082011115610b1357600080fd5b803590602001918460208302840111600160201b83111715610b3457600080fd5b509092509050611e91565b348015610b4b57600080fd5b5061057f60048036036020811015610b6257600080fd5b50356001600160a01b031661251f565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610bfe5780601f10610bd357610100808354040283529160200191610bfe565b820191906000526020600020905b815481529060010190602001808311610be157829003601f168201915b5050505050905090565b6000610c1c610c1561262a565b848461262e565b5060015b92915050565b60025490565b600c6020526000908152604090205460ff1681565b6000610c60848484610c5288611d09565b610c5b88611e21565b61271a565b949350505050565b6000610c758484846127d9565b610ce584610c8161262a565b610ce08560405180606001604052806028815260200161356d602891396001600160a01b038a16600090815260016020526040812090610cbf61262a565b6001600160a01b031681526020810191909152604001600020549190612934565b61262e565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60055460ff1690565b60085481565b6000610c1c610d2f61262a565b84610ce08560016000610d4061262a565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906129cb565b61012c90565b600a8181548110610d8357fe5b6000918252602090912001546001600160a01b0316905081565b60026006541415610de3576040805162461bcd60e51b815260206004820152601f602482015260008051602061349c833981519152604482015290519081900360640190fd5b60026006556000610df2610c26565b9050610dfe3384612a25565b60005b600a54811015610f43576000600a8281548110610e1a57fe5b60009182526020822001546001600160a01b03169150610e3a8230612b21565b90506000610e5285610e4c848a612bc2565b90612c1b565b9050610e686001600160a01b0384163383612c5d565b855184101580610e8b5750858481518110610e7f57fe5b60200260200101518110155b610edc576040805162461bcd60e51b815260206004820152601f60248201527f4d6f6f6e69737761703a20726573756c74206973206e6f7420656e6f75676800604482015290519081900360640190fd5b610f0a82610eea878a612cc6565b6001600160a01b0386166000908152600e60205260409020919088612d08565b610f3882610f18878a612cc6565b6001600160a01b0386166000908152600f60205260409020919088612d08565b505050600101610e01565b5060408051848152905133917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a25050600160065550565b600f602052600090815260409020546001600160d81b03811690600160d81b900464ffffffffff1682565b600e602052600090815260409020546001600160d81b03811690600160d81b900464ffffffffff1682565b6001600160a01b0381166000908152602081905260409020545b919050565b61100161262a565b6007546001600160a01b03908116911614611063576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6007546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600780546001600160a01b0319169055565b600260065414156110f3576040805162461bcd60e51b815260206004820152601f602482015260008051602061349c833981519152604482015290519081900360640190fd5b600260065561110061262a565b6007546001600160a01b03908116911614611162576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600a5460609067ffffffffffffffff8111801561117e57600080fd5b506040519080825280602002602001820160405280156111a8578160200160208202803683370190505b50905060005b8151811015611202576111e330600a83815481106111c857fe5b6000918252602090912001546001600160a01b031690612b21565b8282815181106111ef57fe5b60209081029190910101526001016111ae565b506112176001600160a01b0384163384612c5d565b60005b815181101561129e5781818151811061122f57fe5b602002602001015161124830600a84815481106111c857fe5b1015611296576040805162461bcd60e51b8152602060048201526018602482015277135bdbdb9a5cddd85c0e881858d8d95cdcc819195b9a595960421b604482015290519081900360640190fd5b60010161121a565b506103e86112ab30610fda565b10156112f9576040805162461bcd60e51b8152602060048201526018602482015277135bdbdb9a5cddd85c0e881858d8d95cdcc819195b9a595960421b604482015290519081900360640190fd5b5050600160065550565b600b6020526000908152604090205481565b6007546001600160a01b031690565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610bfe5780601f10610bd357610100808354040283529160200191610bfe565b80516002146113db576040805162461bcd60e51b815260206004820181905260248201527f4d6f6f6e69737761703a206f6e6c79203220746f6b656e7320616c6c6f776564604482015290519081900360640190fd5b600980546001600160a01b03191633179055805161140090600a9060208401906133da565b5060005b81518110156114e257600c600083838151811061141d57fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615611496576040805162461bcd60e51b815260206004820152601b60248201527f4d6f6f6e69737761703a206475706c696361746520746f6b656e730000000000604482015290519081900360640190fd5b6001600c60008484815181106114a857fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101611404565b5050565b6000610c1c6114f361262a565b84610ce085604051806060016040528060258152602001613629602591396001600061151d61262a565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190612934565b6000610c1c61155b61262a565b84846127d9565b6060600a805480602002602001604051908101604052809291908181526020018280548015610bfe57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161159c575050505050905090565b600d602052600090815260409020546001600160801b0380821691600160801b90041682565b601481565b6103e881565b6009546001600160a01b031681565b42841015611642576040805162461bcd60e51b81526020600482015260076024820152661156141254915160ca1b604482015290519081900360640190fd5b6001600160a01b038088166000818152600b602090815260408083208054600180820190925560085483517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98187015280850197909752968d166060870152608086018c905260a0860181905260c08087018c90528351808803909101815260e08701845280519085012061190160f01b6101008801526101028701979097526101228087019790975282518087039097018752610142860180845287519785019790972096859052610162860180845287905260ff8a166101828701526101a286018990526101c28601889052915191959490926101e2808301939192601f198301929081900390910190855afa158015611762573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906117985750896001600160a01b0316816001600160a01b0316145b6117dd576040805162461bcd60e51b8152602060048201526011602482015270494e56414c49445f5349474e415455524560781b604482015290519081900360640190fd5b6117e88a8a8a61262e565b50505050505050505050565b60006002600654141561183c576040805162461bcd60e51b815260206004820152601f602482015260008051602061349c833981519152604482015290519081900360640190fd5b60026006556118536001600160a01b038716612d64565b61185e576000611860565b835b34146118b3576040805162461bcd60e51b815260206004820152601c60248201527f4d6f6f6e69737761703a2077726f6e672076616c756520757361676500000000604482015290519081900360640190fd5b6118bb61343f565b60405180604001604052806119016118db8a6001600160a01b0316612d64565b6118e65760006118e8565b345b6118fb6001600160a01b038c1630612b21565b90612cc6565b81526020016119196001600160a01b03891630612b21565b905280516001600160a01b0389166000908152600e602090815260408083208151808301909252546001600160d81b0381168252600160d81b900464ffffffffff16918101919091529293509161197b916119749190612d71565b8351612dd2565b6020838101516001600160a01b038a166000908152600f835260408082208151808301909252546001600160d81b0381168252600160d81b900464ffffffffff16938101939093529293506119dd916119d391612d71565b8460200151612de9565b90506119f26001600160a01b038a1688612df8565b8251600090611a0e906118fb6001600160a01b038d1630612b21565b9050611a1d8a8a83868661271a565b9450600085118015611a2f5750868510155b611a80576040805162461bcd60e51b815260206004820152601f60248201527f4d6f6f6e69737761703a2072657475726e206973206e6f7420656e6f75676800604482015290519081900360640190fd5b611a946001600160a01b038a163387612c5d565b83518314611ac757611ac7611aa984836129cb565b6001600160a01b038c166000908152600e6020526040902090612ebb565b83602001518214611afd57611afd611adf8387612cc6565b6001600160a01b038b166000908152600f6020526040902090612ebb565b83516001600160a01b038b166000908152600f60205260409020611b2091612ee7565b6020808501516001600160a01b038b166000908152600e9092526040909120611b4891612ee7565b6001600160a01b03861615611c035783516ec097ce7bc90715b34b9f100000000090611b8290610e4c611b7b82866129cb565b8490612bc2565b6020860151909150611b9b90610e4c611b7b828a612cc6565b90506ec097ce7bc90715b34b9f1000000000811115611c01576000611bed6014610e4c670de0b6b3a7640000610e4c611bd2610c26565b611be7670de0b6b3a76400006118fb8a612f22565b90612bc2565b90508015611bff57611bff8882612f7c565b505b505b886001600160a01b03168a6001600160a01b0316336001600160a01b03167f86c49b5d8577da08444947f1427d23ef191cfabf2c0788f93324d79e926a9302848989600001518a60200151611c56610c26565b60408051958652602086019490945284840192909252606084015260808301526001600160a01b038c1660a0830152519081900360c00190a46001600160a01b039099166000908152600d602052604090208054600160801b6001600160801b03808316909c018c166fffffffffffffffffffffffffffffffff19909216919091178181048c1687018c169091029a16999099179098555050600160065595945050505050565b670de0b6b3a764000081565b600080611d1f6001600160a01b03841630612b21565b6001600160a01b0384166000908152600e60209081526040918290208251808401909352546001600160d81b0381168352600160d81b900464ffffffffff1690820152909150611d7990611d739083612d71565b82612dd2565b9392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6009546040805163ddca3f4360e01b815290516000926001600160a01b03169163ddca3f43916004808301926020929190829003018186803b158015611df057600080fd5b505afa158015611e04573d6000803e3d6000fd5b505050506040513d6020811015611e1a57600080fd5b5051905090565b600080611e376001600160a01b03841630612b21565b6001600160a01b0384166000908152600f60209081526040918290208251808401909352546001600160d81b0381168352600160d81b900464ffffffffff1690820152909150611d7990611e8b9083612d71565b82612de9565b600060026006541415611ed9576040805162461bcd60e51b815260206004820152601f602482015260008051602061349c833981519152604482015290519081900360640190fd5b6002600655600a80546040805160208084028201810190925282815260609390929091830182828015611f3557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611f17575b5050505050905080518686905014611f94576040805162461bcd60e51b815260206004820152601f60248201527f4d6f6f6e69737761703a2077726f6e6720616d6f756e7473206c656e67746800604482015290519081900360640190fd5b611fba81600081518110611fa457fe5b60200260200101516001600160a01b0316612d64565b611ff357611fce81600181518110611fa457fe5b611fd9576000611fee565b85856001818110611fe657fe5b905060200201355b612008565b8585600081811061200057fe5b905060200201355b341461205b576040805162461bcd60e51b815260206004820152601c60248201527f4d6f6f6e69737761703a2077726f6e672076616c756520757361676500000000604482015290519081900360640190fd5b60608567ffffffffffffffff8111801561207457600080fd5b5060405190808252806020026020018201604052801561209e578160200160208202803683370190505b50905060005b815181101561211a576120fb6120bf848381518110611fa457fe5b6120ca5760006120cc565b345b6118fb308685815181106120dc57fe5b60200260200101516001600160a01b0316612b2190919063ffffffff16565b82828151811061210757fe5b60209081029190910101526001016120a4565b506000612125610c26565b90508061217e576121396103e86063612bc2565b9350612147306103e8612f7c565b60005b878110156121785761216e858a8a8481811061216257fe5b90506020020135612dd2565b945060010161214a565b506121df565b600019935060005b878110156121dd576121d3856121ce8584815181106121a157fe5b6020026020010151610e4c8d8d878181106121b857fe5b9050602002013587612bc290919063ffffffff16565b612de9565b9450600101612186565b505b8360005b888110156123ae5760008a8a838181106121f957fe5b9050602002013511612252576040805162461bcd60e51b815260206004820152601960248201527f4d6f6f6e69737761703a20616d6f756e74206973207a65726f00000000000000604482015290519081900360640190fd5b600083156122965761229184610e4c6001870361228b878a888151811061227557fe5b6020026020010151612bc290919063ffffffff16565b906129cb565b6122aa565b8a8a838181106122a257fe5b905060200201355b90508888838181106122b857fe5b90506020020135811015612313576040805162461bcd60e51b815260206004820181905260248201527f4d6f6f6e69737761703a206d696e416d6f756e74206e6f742072656163686564604482015290519081900360640190fd5b6123428187848151811061232357fe5b60200260200101516001600160a01b0316612df890919063ffffffff16565b83156123a557600061237186848151811061235957fe5b60200260200101516118fb308a87815181106120dc57fe5b90506123a1886121ce88868151811061238657fe5b6020026020010151610e4c858a612bc290919063ffffffff16565b9750505b506001016121e3565b5081156124785760005b88811015612476576124338482815181106123cf57fe5b60200260200101516123ea88866129cb90919063ffffffff16565b85600f60008a87815181106123fb57fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020612d08909392919063ffffffff16565b61246e84828151811061244257fe5b602002602001015161245d88866129cb90919063ffffffff16565b85600e60008a87815181106123fb57fe5b6001016123b8565b505b600085116124cd576040805162461bcd60e51b815260206004820152601f60248201527f4d6f6f6e69737761703a20726573756c74206973206e6f7420656e6f75676800604482015290519081900360640190fd5b6124d73386612f7c565b60408051868152905133917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4919081900360200190a250506001600655509095945050505050565b61252761262a565b6007546001600160a01b03908116911614612589576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166125ce5760405162461bcd60e51b81526004018080602001828103825260268152602001806134de6026913960400191505060405180910390fd5b6007546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600780546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b0383166126735760405162461bcd60e51b81526004018080602001828103825260248152602001806135db6024913960400191505060405180910390fd5b6001600160a01b0382166126b85760405162461bcd60e51b81526004018080602001828103825260228152602001806135046022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0385166000908152600c602052604081205460ff16801561275a57506001600160a01b0385166000908152600c602052604090205460ff165b80156127785750846001600160a01b0316866001600160a01b031614155b80156127845750600084115b156127d05760006127b36127ac670de0b6b3a7640000610e4c6127a5611dab565b8990612bc2565b8690612cc6565b90506127cc6127c285836129cb565b610e4c8386612bc2565b9150505b95945050505050565b6001600160a01b03831661281e5760405162461bcd60e51b81526004018080602001828103825260258152602001806135b66025913960400191505060405180910390fd5b6001600160a01b0382166128635760405162461bcd60e51b81526004018080602001828103825260238152602001806134796023913960400191505060405180910390fd5b61286e838383612cc1565b6128ab81604051806060016040528060268152602001613526602691396001600160a01b0386166000908152602081905260409020549190612934565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546128da90826129cb565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156129c35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612988578181015183820152602001612970565b50505050905090810190601f1680156129b55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015611d79576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b038216612a6a5760405162461bcd60e51b81526004018080602001828103825260218152602001806135956021913960400191505060405180910390fd5b612a7682600083612cc1565b612ab3816040518060600160405280602281526020016134bc602291396001600160a01b0385166000908152602081905260409020549190612934565b6001600160a01b038316600090815260208190526040902055600254612ad99082612cc6565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000612b2c83612d64565b15612b4257506001600160a01b03811631610c20565b826001600160a01b03166370a08231836040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612b8f57600080fd5b505afa158015612ba3573d6000803e3d6000fd5b505050506040513d6020811015612bb957600080fd5b50519050610c20565b600082612bd157506000610c20565b82820282848281612bde57fe5b0414611d795760405162461bcd60e51b815260040180806020018281038252602181526020018061354c6021913960400191505060405180910390fd5b6000611d7983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061306c565b8015612cc157612c6c83612d64565b15612cad576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015612ca7573d6000803e3d6000fd5b50612cc1565b612cc16001600160a01b03841683836130d1565b505050565b6000611d7983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612934565b612d5e84612d5983610e4c612d1e826001612cc6565b604080518082019091528a546001600160d81b0381168252600160d81b900464ffffffffff16602082015261228b908990611be7908c612d71565b612ebb565b50505050565b6001600160a01b03161590565b600080612d9861012c6121ce866020015164ffffffffff1642612cc690919063ffffffff16565b90506000612da861012c83612cc6565b90506127d061012c610e4c612dbd8786612bc2565b885161228b906001600160d81b031686612bc2565b600081831015612de25781611d79565b5090919050565b6000818310612de25781611d79565b80156114e257612e0782612d64565b15612ea65780341015612e61576040805162461bcd60e51b815260206004820152601a60248201527f556e6945524332303a206e6f7420656e6f7567682076616c7565000000000000604482015290519081900360640190fd5b80341115612ea157336108fc612e773484612cc6565b6040518115909202916000818181858888f19350505050158015612e9f573d6000803e3d6000fd5b505b6114e2565b6114e26001600160a01b038316333084613123565b81546001600160d81b0319166001600160d81b039182161716600160d81b4264ffffffffff1602179055565b6040805180820190915282546001600160d81b0381168252600160d81b900464ffffffffff1660208201526114e2908390612d599084612d71565b60006003821115612f665781600160028204015b81811015612f5e57809150600281828681612f4d57fe5b040181612f5657fe5b049050612f36565b509050610ff4565b8115612f7457506001610ff4565b506000610ff4565b6001600160a01b038216612fd7576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b612fe360008383612cc1565b600254612ff090826129cb565b6002556001600160a01b03821660009081526020819052604090205461301690826129cb565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600081836130bb5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612988578181015183820152602001612970565b5060008385816130c757fe5b0495945050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052612cc1908490613179565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052612d5e9085905b60606131ce826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661322a9092919063ffffffff16565b805190915015612cc1578080602001905160208110156131ed57600080fd5b5051612cc15760405162461bcd60e51b815260040180806020018281038252602a8152602001806135ff602a913960400191505060405180910390fd5b6060610c608484600085606061323f856133a1565b613290576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106132cf5780518252601f1990920191602091820191016132b0565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114613331576040519150601f19603f3d011682016040523d82523d6000602084013e613336565b606091505b5091509150811561334a579150610c609050565b80511561335a5780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315612988578181015183820152602001612970565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610c60575050151592915050565b82805482825590600052602060002090810192821561342f579160200282015b8281111561342f57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906133fa565b5061343b929150613459565b5090565b604051806040016040528060008152602001600081525090565b5b8082111561343b5780546001600160a01b031916815560010161345a56fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573735265656e7472616e637947756172643a207265656e7472616e742063616c6c0045524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c56a9d4f729c91522386bea105d15297ae47fa07b747c70d4233e30b7bd1e7be64736f6c634300060c0033",
							"opcodes": "PUSH1 0x7 PUSH1 0x80 DUP2 DUP2 MSTORE PUSH7 0x4C502D4E414D45 PUSH1 0xC8 SHL PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x40 MSTORE PUSH1 0x9 PUSH1 0xC0 SWAP1 DUP2 MSTORE PUSH9 0x534F4D455448494E47 PUSH1 0xB8 SHL PUSH1 0xE0 MSTORE SWAP2 SWAP3 PUSH3 0x43 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x22A JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x59 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x22A JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x0 PUSH3 0x7A PUSH3 0x18C JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE CHAINID PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH3 0x106 PUSH3 0x190 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP1 MLOAD DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x8 SSTORE PUSH3 0x2C6 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH3 0x220 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x1F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x220 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x202 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x26D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x29D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x29D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x29D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x280 JUMP JUMPDEST POP PUSH3 0x2AB SWAP3 SWAP2 POP PUSH3 0x2AF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2AB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2B0 JUMP JUMPDEST PUSH2 0x3683 DUP1 PUSH3 0x2D6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x225 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9FE JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0xA39 JUMPI DUP1 PUSH4 0xE7FF42C9 EQ PUSH2 0xA4E JUMPI DUP1 PUSH4 0xF223885A EQ PUSH2 0xA81 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB3F JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x8FF JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x914 JUMPI DUP1 PUSH4 0xD5BCB9B5 EQ PUSH2 0x972 JUMPI DUP1 PUSH4 0xD73792A9 EQ PUSH2 0x9B6 JUMPI DUP1 PUSH4 0xD7D3AAB5 EQ PUSH2 0x9CB JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7D5 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0xB1EC4C40 EQ PUSH2 0x873 JUMPI DUP1 PUSH4 0xB21B5A21 EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xBAF13A0A EQ PUSH2 0x8EA JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0xA224CEE7 EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x79C JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x6EDC2C09 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x6EDC2C09 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0x78E3214F EQ PUSH2 0x658 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x691 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x48D67E1B EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x5915D806 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x5ED9156D EQ PUSH2 0x581 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x1E1401F8 GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x1E1401F8 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x421 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x19F37361 EQ PUSH2 0x328 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x279 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x261 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xC41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xC68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0xCEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0xD1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0xD70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xD9D SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFDA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH2 0xFF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x10AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1303 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH2 0x1315 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x1324 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1385 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x14E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x154E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x823 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x85F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x847 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x896 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0x15E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0x15EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH2 0x15F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x937 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x1603 JUMP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x17F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0x1CFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D09 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1D80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0x1DAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E21 JUMP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xB01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xB34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1E91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x251F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBFE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBD3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBFE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBE1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C PUSH2 0xC15 PUSH2 0x262A JUMP JUMPDEST DUP5 DUP5 PUSH2 0x262E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC60 DUP5 DUP5 DUP5 PUSH2 0xC52 DUP9 PUSH2 0x1D09 JUMP JUMPDEST PUSH2 0xC5B DUP9 PUSH2 0x1E21 JUMP JUMPDEST PUSH2 0x271A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC75 DUP5 DUP5 DUP5 PUSH2 0x27D9 JUMP JUMPDEST PUSH2 0xCE5 DUP5 PUSH2 0xC81 PUSH2 0x262A JUMP JUMPDEST PUSH2 0xCE0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x356D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xCBF PUSH2 0x262A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2934 JUMP JUMPDEST PUSH2 0x262E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C PUSH2 0xD2F PUSH2 0x262A JUMP JUMPDEST DUP5 PUSH2 0xCE0 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xD40 PUSH2 0x262A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x29CB JUMP JUMPDEST PUSH2 0x12C SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD83 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x349C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0x0 PUSH2 0xDF2 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP PUSH2 0xDFE CALLER DUP5 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xF43 JUMPI PUSH1 0x0 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE1A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0xE3A DUP3 ADDRESS PUSH2 0x2B21 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE52 DUP6 PUSH2 0xE4C DUP5 DUP11 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 PUSH2 0x2C1B JUMP JUMPDEST SWAP1 POP PUSH2 0xE68 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP4 PUSH2 0x2C5D JUMP JUMPDEST DUP6 MLOAD DUP5 LT ISZERO DUP1 PUSH2 0xE8B JUMPI POP DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xE7F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0xEDC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A20726573756C74206973206E6F7420656E6F75676800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xF0A DUP3 PUSH2 0xEEA DUP8 DUP11 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 DUP9 PUSH2 0x2D08 JUMP JUMPDEST PUSH2 0xF38 DUP3 PUSH2 0xF18 DUP8 DUP11 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 DUP9 PUSH2 0x2D08 JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0xE01 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1001 PUSH2 0x262A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1063 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x10F3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x349C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH2 0x1100 PUSH2 0x262A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1162 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x117E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11A8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1202 JUMPI PUSH2 0x11E3 ADDRESS PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x11C8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2B21 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11EF JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x11AE JUMP JUMPDEST POP PUSH2 0x1217 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP5 PUSH2 0x2C5D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x129E JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x122F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1248 ADDRESS PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x11C8 JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0x1296 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x135BDBDB9A5CDDD85C0E881858D8D95CDCC819195B9A5959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x121A JUMP JUMPDEST POP PUSH2 0x3E8 PUSH2 0x12AB ADDRESS PUSH2 0xFDA JUMP JUMPDEST LT ISZERO PUSH2 0x12F9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x135BDBDB9A5CDDD85C0E881858D8D95CDCC819195B9A5959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBFE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBD3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBFE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 EQ PUSH2 0x13DB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A206F6E6C79203220746F6B656E7320616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 MLOAD PUSH2 0x1400 SWAP1 PUSH1 0xA SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x33DA JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x14E2 JUMPI PUSH1 0xC PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x141D JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1496 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A206475706C696361746520746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x14A8 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x1404 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C PUSH2 0x14F3 PUSH2 0x262A JUMP JUMPDEST DUP5 PUSH2 0xCE0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3629 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x151D PUSH2 0x262A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2934 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C PUSH2 0x155B PUSH2 0x262A JUMP JUMPDEST DUP5 DUP5 PUSH2 0x27D9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xBFE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x159C JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x1642 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x11561412549151 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x8 SLOAD DUP4 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP8 ADD MSTORE DUP1 DUP6 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP7 DUP14 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP8 ADD DUP13 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP9 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP8 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP6 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x102 DUP8 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH2 0x122 DUP1 DUP8 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP3 MLOAD DUP1 DUP8 SUB SWAP1 SWAP8 ADD DUP8 MSTORE PUSH2 0x142 DUP7 ADD DUP1 DUP5 MSTORE DUP8 MLOAD SWAP8 DUP6 ADD SWAP8 SWAP1 SWAP8 KECCAK256 SWAP7 DUP6 SWAP1 MSTORE PUSH2 0x162 DUP7 ADD DUP1 DUP5 MSTORE DUP8 SWAP1 MSTORE PUSH1 0xFF DUP11 AND PUSH2 0x182 DUP8 ADD MSTORE PUSH2 0x1A2 DUP7 ADD DUP10 SWAP1 MSTORE PUSH2 0x1C2 DUP7 ADD DUP9 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP6 SWAP5 SWAP1 SWAP3 PUSH2 0x1E2 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1762 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1798 JUMPI POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x17DD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x494E56414C49445F5349474E4154555245 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x17E8 DUP11 DUP11 DUP11 PUSH2 0x262E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x183C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x349C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH2 0x1853 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x185E JUMPI PUSH1 0x0 PUSH2 0x1860 JUMP JUMPDEST DUP4 JUMPDEST CALLVALUE EQ PUSH2 0x18B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A2077726F6E672076616C756520757361676500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x18BB PUSH2 0x343F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1901 PUSH2 0x18DB DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x18E6 JUMPI PUSH1 0x0 PUSH2 0x18E8 JUMP JUMPDEST CALLVALUE JUMPDEST PUSH2 0x18FB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND ADDRESS PUSH2 0x2B21 JUMP JUMPDEST SWAP1 PUSH2 0x2CC6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1919 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ADDRESS PUSH2 0x2B21 JUMP JUMPDEST SWAP1 MSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP4 POP SWAP2 PUSH2 0x197B SWAP2 PUSH2 0x1974 SWAP2 SWAP1 PUSH2 0x2D71 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x2DD2 JUMP JUMPDEST PUSH1 0x20 DUP4 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 SWAP4 POP PUSH2 0x19DD SWAP2 PUSH2 0x19D3 SWAP2 PUSH2 0x2D71 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x2DE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x19F2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP9 PUSH2 0x2DF8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x1A0E SWAP1 PUSH2 0x18FB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND ADDRESS PUSH2 0x2B21 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A1D DUP11 DUP11 DUP4 DUP7 DUP7 PUSH2 0x271A JUMP JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 GT DUP1 ISZERO PUSH2 0x1A2F JUMPI POP DUP7 DUP6 LT ISZERO JUMPDEST PUSH2 0x1A80 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A2072657475726E206973206E6F7420656E6F75676800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1A94 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND CALLER DUP8 PUSH2 0x2C5D JUMP JUMPDEST DUP4 MLOAD DUP4 EQ PUSH2 0x1AC7 JUMPI PUSH2 0x1AC7 PUSH2 0x1AA9 DUP5 DUP4 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 PUSH2 0x2EBB JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD DUP3 EQ PUSH2 0x1AFD JUMPI PUSH2 0x1AFD PUSH2 0x1ADF DUP4 DUP8 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 PUSH2 0x2EBB JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1B20 SWAP2 PUSH2 0x2EE7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x1B48 SWAP2 PUSH2 0x2EE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x1C03 JUMPI DUP4 MLOAD PUSH15 0xC097CE7BC90715B34B9F1000000000 SWAP1 PUSH2 0x1B82 SWAP1 PUSH2 0xE4C PUSH2 0x1B7B DUP3 DUP7 PUSH2 0x29CB JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x1B9B SWAP1 PUSH2 0xE4C PUSH2 0x1B7B DUP3 DUP11 PUSH2 0x2CC6 JUMP JUMPDEST SWAP1 POP PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 GT ISZERO PUSH2 0x1C01 JUMPI PUSH1 0x0 PUSH2 0x1BED PUSH1 0x14 PUSH2 0xE4C PUSH8 0xDE0B6B3A7640000 PUSH2 0xE4C PUSH2 0x1BD2 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x1BE7 PUSH8 0xDE0B6B3A7640000 PUSH2 0x18FB DUP11 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1BFF JUMPI PUSH2 0x1BFF DUP9 DUP3 PUSH2 0x2F7C JUMP JUMPDEST POP JUMPDEST POP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x86C49B5D8577DA08444947F1427D23EF191CFABF2C0788F93324D79E926A9302 DUP5 DUP10 DUP10 PUSH1 0x0 ADD MLOAD DUP11 PUSH1 0x20 ADD MLOAD PUSH2 0x1C56 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP5 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0xA0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND SWAP1 SWAP13 ADD DUP13 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 DUP2 DIV DUP13 AND DUP8 ADD DUP13 AND SWAP1 SWAP2 MUL SWAP11 AND SWAP10 SWAP1 SWAP10 OR SWAP1 SWAP9 SSTORE POP POP PUSH1 0x1 PUSH1 0x6 SSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D1F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH2 0x1D79 SWAP1 PUSH2 0x1D73 SWAP1 DUP4 PUSH2 0x2D71 JUMP JUMPDEST DUP3 PUSH2 0x2DD2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDDCA3F43 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDDCA3F43 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E37 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH2 0x1D79 SWAP1 PUSH2 0x1E8B SWAP1 DUP4 PUSH2 0x2D71 JUMP JUMPDEST DUP3 PUSH2 0x2DE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x1ED9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x349C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1F35 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F17 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD DUP7 DUP7 SWAP1 POP EQ PUSH2 0x1F94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A2077726F6E6720616D6F756E7473206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1FBA DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1FA4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x1FF3 JUMPI PUSH2 0x1FCE DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1FA4 JUMPI INVALID JUMPDEST PUSH2 0x1FD9 JUMPI PUSH1 0x0 PUSH2 0x1FEE JUMP JUMPDEST DUP6 DUP6 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x1FE6 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD JUMPDEST PUSH2 0x2008 JUMP JUMPDEST DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x2000 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD JUMPDEST CALLVALUE EQ PUSH2 0x205B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A2077726F6E672076616C756520757361676500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x2074 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x209E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x211A JUMPI PUSH2 0x20FB PUSH2 0x20BF DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FA4 JUMPI INVALID JUMPDEST PUSH2 0x20CA JUMPI PUSH1 0x0 PUSH2 0x20CC JUMP JUMPDEST CALLVALUE JUMPDEST PUSH2 0x18FB ADDRESS DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x20DC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B21 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2107 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x20A4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2125 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x217E JUMPI PUSH2 0x2139 PUSH2 0x3E8 PUSH1 0x63 PUSH2 0x2BC2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2147 ADDRESS PUSH2 0x3E8 PUSH2 0x2F7C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x2178 JUMPI PUSH2 0x216E DUP6 DUP11 DUP11 DUP5 DUP2 DUP2 LT PUSH2 0x2162 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 ADD PUSH2 0x214A JUMP JUMPDEST POP PUSH2 0x21DF JUMP JUMPDEST PUSH1 0x0 NOT SWAP4 POP PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x21DD JUMPI PUSH2 0x21D3 DUP6 PUSH2 0x21CE DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x21A1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xE4C DUP14 DUP14 DUP8 DUP2 DUP2 LT PUSH2 0x21B8 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP8 PUSH2 0x2BC2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE9 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 ADD PUSH2 0x2186 JUMP JUMPDEST POP JUMPDEST DUP4 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x23AE JUMPI PUSH1 0x0 DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x21F9 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT PUSH2 0x2252 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A20616D6F756E74206973207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ISZERO PUSH2 0x2296 JUMPI PUSH2 0x2291 DUP5 PUSH2 0xE4C PUSH1 0x1 DUP8 SUB PUSH2 0x228B DUP8 DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x2275 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2BC2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x29CB JUMP JUMPDEST PUSH2 0x22AA JUMP JUMPDEST DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x22A2 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD JUMPDEST SWAP1 POP DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x22B8 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x2313 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A206D696E416D6F756E74206E6F742072656163686564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2342 DUP2 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2323 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2DF8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 ISZERO PUSH2 0x23A5 JUMPI PUSH1 0x0 PUSH2 0x2371 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2359 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18FB ADDRESS DUP11 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x20DC JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x23A1 DUP9 PUSH2 0x21CE DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2386 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xE4C DUP6 DUP11 PUSH2 0x2BC2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x21E3 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x2478 JUMPI PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x2476 JUMPI PUSH2 0x2433 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23CF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x23EA DUP9 DUP7 PUSH2 0x29CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0xF PUSH1 0x0 DUP11 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x23FB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2D08 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x246E DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2442 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x245D DUP9 DUP7 PUSH2 0x29CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0xE PUSH1 0x0 DUP11 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x23FB JUMPI INVALID JUMPDEST PUSH1 0x1 ADD PUSH2 0x23B8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x24CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A20726573756C74206973206E6F7420656E6F75676800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x24D7 CALLER DUP7 PUSH2 0x2F7C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2527 PUSH2 0x262A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2589 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x25CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x34DE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35DB PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x26B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3504 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x275A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x2778 JUMPI POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2784 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST ISZERO PUSH2 0x27D0 JUMPI PUSH1 0x0 PUSH2 0x27B3 PUSH2 0x27AC PUSH8 0xDE0B6B3A7640000 PUSH2 0xE4C PUSH2 0x27A5 PUSH2 0x1DAB JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x2CC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x27CC PUSH2 0x27C2 DUP6 DUP4 PUSH2 0x29CB JUMP JUMPDEST PUSH2 0xE4C DUP4 DUP7 PUSH2 0x2BC2 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x281E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35B6 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2863 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3479 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x286E DUP4 DUP4 DUP4 PUSH2 0x2CC1 JUMP JUMPDEST PUSH2 0x28AB DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3526 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2934 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x28DA SWAP1 DUP3 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x29C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2988 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2970 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x29B5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1D79 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2A6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3595 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A76 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2CC1 JUMP JUMPDEST PUSH2 0x2AB3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34BC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2934 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x2AD9 SWAP1 DUP3 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2C DUP4 PUSH2 0x2D64 JUMP JUMPDEST ISZERO PUSH2 0x2B42 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND BALANCE PUSH2 0xC20 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2BD1 JUMPI POP PUSH1 0x0 PUSH2 0xC20 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2BDE JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1D79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x354C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D79 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x306C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CC1 JUMPI PUSH2 0x2C6C DUP4 PUSH2 0x2D64 JUMP JUMPDEST ISZERO PUSH2 0x2CAD JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2CA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x2CC1 JUMP JUMPDEST PUSH2 0x2CC1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x30D1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D79 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2934 JUMP JUMPDEST PUSH2 0x2D5E DUP5 PUSH2 0x2D59 DUP4 PUSH2 0xE4C PUSH2 0x2D1E DUP3 PUSH1 0x1 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x228B SWAP1 DUP10 SWAP1 PUSH2 0x1BE7 SWAP1 DUP13 PUSH2 0x2D71 JUMP JUMPDEST PUSH2 0x2EBB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D98 PUSH2 0x12C PUSH2 0x21CE DUP7 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND TIMESTAMP PUSH2 0x2CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2DA8 PUSH2 0x12C DUP4 PUSH2 0x2CC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x27D0 PUSH2 0x12C PUSH2 0xE4C PUSH2 0x2DBD DUP8 DUP7 PUSH2 0x2BC2 JUMP JUMPDEST DUP9 MLOAD PUSH2 0x228B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB AND DUP7 PUSH2 0x2BC2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x2DE2 JUMPI DUP2 PUSH2 0x1D79 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2DE2 JUMPI DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14E2 JUMPI PUSH2 0x2E07 DUP3 PUSH2 0x2D64 JUMP JUMPDEST ISZERO PUSH2 0x2EA6 JUMPI DUP1 CALLVALUE LT ISZERO PUSH2 0x2E61 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6945524332303A206E6F7420656E6F7567682076616C7565000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 CALLVALUE GT ISZERO PUSH2 0x2EA1 JUMPI CALLER PUSH2 0x8FC PUSH2 0x2E77 CALLVALUE DUP5 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2E9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x14E2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER ADDRESS DUP5 PUSH2 0x3123 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB SWAP2 DUP3 AND OR AND PUSH1 0x1 PUSH1 0xD8 SHL TIMESTAMP PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x14E2 SWAP1 DUP4 SWAP1 PUSH2 0x2D59 SWAP1 DUP5 PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x2F66 JUMPI DUP2 PUSH1 0x1 PUSH1 0x2 DUP3 DIV ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F5E JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP7 DUP2 PUSH2 0x2F4D JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x2F56 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x2F36 JUMP JUMPDEST POP SWAP1 POP PUSH2 0xFF4 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2F74 JUMPI POP PUSH1 0x1 PUSH2 0xFF4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2FD7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2FE3 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2CC1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2FF0 SWAP1 DUP3 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3016 SWAP1 DUP3 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x30BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2988 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2970 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x30C7 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x2CC1 SWAP1 DUP5 SWAP1 PUSH2 0x3179 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x2D5E SWAP1 DUP6 SWAP1 JUMPDEST PUSH1 0x60 PUSH2 0x31CE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x322A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2CC1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2CC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35FF PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xC60 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH1 0x60 PUSH2 0x323F DUP6 PUSH2 0x33A1 JUMP JUMPDEST PUSH2 0x3290 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x32CF JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x32B0 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3331 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x334A JUMPI SWAP2 POP PUSH2 0xC60 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x335A JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2988 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xC60 JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x342F JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x342F JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x33FA JUMP JUMPDEST POP PUSH2 0x343B SWAP3 SWAP2 POP PUSH2 0x3459 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x343B JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x345A JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 MSTORE PUSH6 0x656E7472616E PUSH4 0x79477561 PUSH19 0x643A207265656E7472616E742063616C6C0045 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65536166 PUSH6 0x4D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0xC5 PUSH11 0x9D4F729C91522386BEA105 0xD1 MSTORE SWAP8 0xAE SELFBALANCE STATICCALL SMOD 0xB7 SELFBALANCE 0xC7 0xD TIMESTAMP CALLER 0xE3 SIGNEXTEND PUSH28 0xD1E7BE64736F6C634300060C00330000000000000000000000000000 ",
							"sourceMap": "2013:141:4:-:0;1561:11233:9;2013:141:4;;;-1:-1:-1;;;2013:141:4;;;;;1561:11233:9;2013:141:4;;;;;;-1:-1:-1;;;2013:141:4;;1561:11233:9;;2085:12:4;;:5;;:12;:::i;:::-;-1:-1:-1;2107:16:4;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2133:9:4;:14;;-1:-1:-1;;2133:14:4;2145:2;2133:14;;;-1:-1:-1;2133:14:4;1743:7:8;:22;2133:9:4;885:12:1;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:1;-1:-1:-1;;;;;907:18:1;;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:1;-1:-1:-1;;940:43:1;;-1:-1:-1;;940:43:1;-1:-1:-1;3259:7:9::1;:30:::0;;-1:-1:-1;;;;;;3259:30:9::1;3278:10;3259:30;::::0;;3355:9:::1;3453:95;3582:6;:4;:6::i;:::-;3566:24:::0;;::::1;::::0;;::::1;::::0;3618:10:::1;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;3618:10:9;;::::1;::::0;3425:274;;;;::::1;::::0;;;;;;;;;;;3608:21;3425:274;;;;;;;;;;;3680:4:::1;3425:274:::0;;;;;;;;;;;;;;;;;;;;;;;;;3402:307;;;::::1;::::0;3383:16:::1;:326:::0;1561:11233;;590:104:0;677:10;590:104;:::o;2219:81:4:-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;1561:11233:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1561:11233:9;;;-1:-1:-1;1561:11233:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106102255760003560e01c80638da5cb5b11610123578063c45a0155116100ab578063dd62ed3e1161006f578063dd62ed3e146109fe578063ddca3f4314610a39578063e7ff42c914610a4e578063f223885a14610a81578063f2fde38b14610b3f57610225565b8063c45a0155146108ff578063d505accf14610914578063d5bcb9b514610972578063d73792a9146109b6578063d7d3aab5146109cb57610225565b8063a9059cbb116100f2578063a9059cbb146107d5578063aa6ca8081461080e578063b1ec4c4014610873578063b21b5a21146108d5578063baf13a0a146108ea57610225565b80638da5cb5b146106c457806395d89b41146106d9578063a224cee7146106ee578063a457c2d71461079c57610225565b806339509351116101b15780636edc2c09116101755780636edc2c09146105dd57806370a0823114610610578063715018a61461064357806378e3214f146106585780637ecebe001461069157610225565b8063395093511461043657806348d67e1b1461046f5780634f64b2be146104845780635915d806146104ca5780635ed9156d1461058157610225565b80631e1401f8116101f85780631e1401f81461035b57806323b872dd1461039e57806330adf81f146103e1578063313ce567146103f65780633644e5151461042157610225565b806306fdde031461022a578063095ea7b3146102b457806318160ddd1461030157806319f3736114610328575b600080fd5b34801561023657600080fd5b5061023f610b72565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610279578181015183820152602001610261565b50505050905090810190601f1680156102a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c057600080fd5b506102ed600480360360408110156102d757600080fd5b506001600160a01b038135169060200135610c08565b604080519115158252519081900360200190f35b34801561030d57600080fd5b50610316610c26565b60408051918252519081900360200190f35b34801561033457600080fd5b506102ed6004803603602081101561034b57600080fd5b50356001600160a01b0316610c2c565b34801561036757600080fd5b506103166004803603606081101561037e57600080fd5b506001600160a01b03813581169160208101359091169060400135610c41565b3480156103aa57600080fd5b506102ed600480360360608110156103c157600080fd5b506001600160a01b03813581169160208101359091169060400135610c68565b3480156103ed57600080fd5b50610316610cef565b34801561040257600080fd5b5061040b610d13565b6040805160ff9092168252519081900360200190f35b34801561042d57600080fd5b50610316610d1c565b34801561044257600080fd5b506102ed6004803603604081101561045957600080fd5b506001600160a01b038135169060200135610d22565b34801561047b57600080fd5b50610316610d70565b34801561049057600080fd5b506104ae600480360360208110156104a757600080fd5b5035610d76565b604080516001600160a01b039092168252519081900360200190f35b3480156104d657600080fd5b5061057f600480360360408110156104ed57600080fd5b81359190810190604081016020820135600160201b81111561050e57600080fd5b82018360208201111561052057600080fd5b803590602001918460208302840111600160201b8311171561054157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610d9d945050505050565b005b34801561058d57600080fd5b506105b4600480360360208110156105a457600080fd5b50356001600160a01b0316610f84565b604080516001600160d81b03909316835264ffffffffff90911660208301528051918290030190f35b3480156105e957600080fd5b506105b46004803603602081101561060057600080fd5b50356001600160a01b0316610faf565b34801561061c57600080fd5b506103166004803603602081101561063357600080fd5b50356001600160a01b0316610fda565b34801561064f57600080fd5b5061057f610ff9565b34801561066457600080fd5b5061057f6004803603604081101561067b57600080fd5b506001600160a01b0381351690602001356110ad565b34801561069d57600080fd5b50610316600480360360208110156106b457600080fd5b50356001600160a01b0316611303565b3480156106d057600080fd5b506104ae611315565b3480156106e557600080fd5b5061023f611324565b3480156106fa57600080fd5b5061057f6004803603602081101561071157600080fd5b810190602081018135600160201b81111561072b57600080fd5b82018360208201111561073d57600080fd5b803590602001918460208302840111600160201b8311171561075e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611385945050505050565b3480156107a857600080fd5b506102ed600480360360408110156107bf57600080fd5b506001600160a01b0381351690602001356114e6565b3480156107e157600080fd5b506102ed600480360360408110156107f857600080fd5b506001600160a01b03813516906020013561154e565b34801561081a57600080fd5b50610823611562565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561085f578181015183820152602001610847565b505050509050019250505060405180910390f35b34801561087f57600080fd5b506108a66004803603602081101561089657600080fd5b50356001600160a01b03166115c3565b60405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390f35b3480156108e157600080fd5b506103166115e9565b3480156108f657600080fd5b506103166115ee565b34801561090b57600080fd5b506104ae6115f4565b34801561092057600080fd5b5061057f600480360360e081101561093757600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611603565b610316600480360360a081101561098857600080fd5b506001600160a01b0381358116916020810135821691604082013591606081013591608090910135166117f4565b3480156109c257600080fd5b50610316611cfd565b3480156109d757600080fd5b50610316600480360360208110156109ee57600080fd5b50356001600160a01b0316611d09565b348015610a0a57600080fd5b5061031660048036036040811015610a2157600080fd5b506001600160a01b0381358116916020013516611d80565b348015610a4557600080fd5b50610316611dab565b348015610a5a57600080fd5b5061031660048036036020811015610a7157600080fd5b50356001600160a01b0316611e21565b61031660048036036040811015610a9757600080fd5b810190602081018135600160201b811115610ab157600080fd5b820183602082011115610ac357600080fd5b803590602001918460208302840111600160201b83111715610ae457600080fd5b919390929091602081019035600160201b811115610b0157600080fd5b820183602082011115610b1357600080fd5b803590602001918460208302840111600160201b83111715610b3457600080fd5b509092509050611e91565b348015610b4b57600080fd5b5061057f60048036036020811015610b6257600080fd5b50356001600160a01b031661251f565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610bfe5780601f10610bd357610100808354040283529160200191610bfe565b820191906000526020600020905b815481529060010190602001808311610be157829003601f168201915b5050505050905090565b6000610c1c610c1561262a565b848461262e565b5060015b92915050565b60025490565b600c6020526000908152604090205460ff1681565b6000610c60848484610c5288611d09565b610c5b88611e21565b61271a565b949350505050565b6000610c758484846127d9565b610ce584610c8161262a565b610ce08560405180606001604052806028815260200161356d602891396001600160a01b038a16600090815260016020526040812090610cbf61262a565b6001600160a01b031681526020810191909152604001600020549190612934565b61262e565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60055460ff1690565b60085481565b6000610c1c610d2f61262a565b84610ce08560016000610d4061262a565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906129cb565b61012c90565b600a8181548110610d8357fe5b6000918252602090912001546001600160a01b0316905081565b60026006541415610de3576040805162461bcd60e51b815260206004820152601f602482015260008051602061349c833981519152604482015290519081900360640190fd5b60026006556000610df2610c26565b9050610dfe3384612a25565b60005b600a54811015610f43576000600a8281548110610e1a57fe5b60009182526020822001546001600160a01b03169150610e3a8230612b21565b90506000610e5285610e4c848a612bc2565b90612c1b565b9050610e686001600160a01b0384163383612c5d565b855184101580610e8b5750858481518110610e7f57fe5b60200260200101518110155b610edc576040805162461bcd60e51b815260206004820152601f60248201527f4d6f6f6e69737761703a20726573756c74206973206e6f7420656e6f75676800604482015290519081900360640190fd5b610f0a82610eea878a612cc6565b6001600160a01b0386166000908152600e60205260409020919088612d08565b610f3882610f18878a612cc6565b6001600160a01b0386166000908152600f60205260409020919088612d08565b505050600101610e01565b5060408051848152905133917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a25050600160065550565b600f602052600090815260409020546001600160d81b03811690600160d81b900464ffffffffff1682565b600e602052600090815260409020546001600160d81b03811690600160d81b900464ffffffffff1682565b6001600160a01b0381166000908152602081905260409020545b919050565b61100161262a565b6007546001600160a01b03908116911614611063576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6007546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600780546001600160a01b0319169055565b600260065414156110f3576040805162461bcd60e51b815260206004820152601f602482015260008051602061349c833981519152604482015290519081900360640190fd5b600260065561110061262a565b6007546001600160a01b03908116911614611162576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600a5460609067ffffffffffffffff8111801561117e57600080fd5b506040519080825280602002602001820160405280156111a8578160200160208202803683370190505b50905060005b8151811015611202576111e330600a83815481106111c857fe5b6000918252602090912001546001600160a01b031690612b21565b8282815181106111ef57fe5b60209081029190910101526001016111ae565b506112176001600160a01b0384163384612c5d565b60005b815181101561129e5781818151811061122f57fe5b602002602001015161124830600a84815481106111c857fe5b1015611296576040805162461bcd60e51b8152602060048201526018602482015277135bdbdb9a5cddd85c0e881858d8d95cdcc819195b9a595960421b604482015290519081900360640190fd5b60010161121a565b506103e86112ab30610fda565b10156112f9576040805162461bcd60e51b8152602060048201526018602482015277135bdbdb9a5cddd85c0e881858d8d95cdcc819195b9a595960421b604482015290519081900360640190fd5b5050600160065550565b600b6020526000908152604090205481565b6007546001600160a01b031690565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610bfe5780601f10610bd357610100808354040283529160200191610bfe565b80516002146113db576040805162461bcd60e51b815260206004820181905260248201527f4d6f6f6e69737761703a206f6e6c79203220746f6b656e7320616c6c6f776564604482015290519081900360640190fd5b600980546001600160a01b03191633179055805161140090600a9060208401906133da565b5060005b81518110156114e257600c600083838151811061141d57fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615611496576040805162461bcd60e51b815260206004820152601b60248201527f4d6f6f6e69737761703a206475706c696361746520746f6b656e730000000000604482015290519081900360640190fd5b6001600c60008484815181106114a857fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101611404565b5050565b6000610c1c6114f361262a565b84610ce085604051806060016040528060258152602001613629602591396001600061151d61262a565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190612934565b6000610c1c61155b61262a565b84846127d9565b6060600a805480602002602001604051908101604052809291908181526020018280548015610bfe57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161159c575050505050905090565b600d602052600090815260409020546001600160801b0380821691600160801b90041682565b601481565b6103e881565b6009546001600160a01b031681565b42841015611642576040805162461bcd60e51b81526020600482015260076024820152661156141254915160ca1b604482015290519081900360640190fd5b6001600160a01b038088166000818152600b602090815260408083208054600180820190925560085483517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98187015280850197909752968d166060870152608086018c905260a0860181905260c08087018c90528351808803909101815260e08701845280519085012061190160f01b6101008801526101028701979097526101228087019790975282518087039097018752610142860180845287519785019790972096859052610162860180845287905260ff8a166101828701526101a286018990526101c28601889052915191959490926101e2808301939192601f198301929081900390910190855afa158015611762573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906117985750896001600160a01b0316816001600160a01b0316145b6117dd576040805162461bcd60e51b8152602060048201526011602482015270494e56414c49445f5349474e415455524560781b604482015290519081900360640190fd5b6117e88a8a8a61262e565b50505050505050505050565b60006002600654141561183c576040805162461bcd60e51b815260206004820152601f602482015260008051602061349c833981519152604482015290519081900360640190fd5b60026006556118536001600160a01b038716612d64565b61185e576000611860565b835b34146118b3576040805162461bcd60e51b815260206004820152601c60248201527f4d6f6f6e69737761703a2077726f6e672076616c756520757361676500000000604482015290519081900360640190fd5b6118bb61343f565b60405180604001604052806119016118db8a6001600160a01b0316612d64565b6118e65760006118e8565b345b6118fb6001600160a01b038c1630612b21565b90612cc6565b81526020016119196001600160a01b03891630612b21565b905280516001600160a01b0389166000908152600e602090815260408083208151808301909252546001600160d81b0381168252600160d81b900464ffffffffff16918101919091529293509161197b916119749190612d71565b8351612dd2565b6020838101516001600160a01b038a166000908152600f835260408082208151808301909252546001600160d81b0381168252600160d81b900464ffffffffff16938101939093529293506119dd916119d391612d71565b8460200151612de9565b90506119f26001600160a01b038a1688612df8565b8251600090611a0e906118fb6001600160a01b038d1630612b21565b9050611a1d8a8a83868661271a565b9450600085118015611a2f5750868510155b611a80576040805162461bcd60e51b815260206004820152601f60248201527f4d6f6f6e69737761703a2072657475726e206973206e6f7420656e6f75676800604482015290519081900360640190fd5b611a946001600160a01b038a163387612c5d565b83518314611ac757611ac7611aa984836129cb565b6001600160a01b038c166000908152600e6020526040902090612ebb565b83602001518214611afd57611afd611adf8387612cc6565b6001600160a01b038b166000908152600f6020526040902090612ebb565b83516001600160a01b038b166000908152600f60205260409020611b2091612ee7565b6020808501516001600160a01b038b166000908152600e9092526040909120611b4891612ee7565b6001600160a01b03861615611c035783516ec097ce7bc90715b34b9f100000000090611b8290610e4c611b7b82866129cb565b8490612bc2565b6020860151909150611b9b90610e4c611b7b828a612cc6565b90506ec097ce7bc90715b34b9f1000000000811115611c01576000611bed6014610e4c670de0b6b3a7640000610e4c611bd2610c26565b611be7670de0b6b3a76400006118fb8a612f22565b90612bc2565b90508015611bff57611bff8882612f7c565b505b505b886001600160a01b03168a6001600160a01b0316336001600160a01b03167f86c49b5d8577da08444947f1427d23ef191cfabf2c0788f93324d79e926a9302848989600001518a60200151611c56610c26565b60408051958652602086019490945284840192909252606084015260808301526001600160a01b038c1660a0830152519081900360c00190a46001600160a01b039099166000908152600d602052604090208054600160801b6001600160801b03808316909c018c166fffffffffffffffffffffffffffffffff19909216919091178181048c1687018c169091029a16999099179098555050600160065595945050505050565b670de0b6b3a764000081565b600080611d1f6001600160a01b03841630612b21565b6001600160a01b0384166000908152600e60209081526040918290208251808401909352546001600160d81b0381168352600160d81b900464ffffffffff1690820152909150611d7990611d739083612d71565b82612dd2565b9392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6009546040805163ddca3f4360e01b815290516000926001600160a01b03169163ddca3f43916004808301926020929190829003018186803b158015611df057600080fd5b505afa158015611e04573d6000803e3d6000fd5b505050506040513d6020811015611e1a57600080fd5b5051905090565b600080611e376001600160a01b03841630612b21565b6001600160a01b0384166000908152600f60209081526040918290208251808401909352546001600160d81b0381168352600160d81b900464ffffffffff1690820152909150611d7990611e8b9083612d71565b82612de9565b600060026006541415611ed9576040805162461bcd60e51b815260206004820152601f602482015260008051602061349c833981519152604482015290519081900360640190fd5b6002600655600a80546040805160208084028201810190925282815260609390929091830182828015611f3557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611f17575b5050505050905080518686905014611f94576040805162461bcd60e51b815260206004820152601f60248201527f4d6f6f6e69737761703a2077726f6e6720616d6f756e7473206c656e67746800604482015290519081900360640190fd5b611fba81600081518110611fa457fe5b60200260200101516001600160a01b0316612d64565b611ff357611fce81600181518110611fa457fe5b611fd9576000611fee565b85856001818110611fe657fe5b905060200201355b612008565b8585600081811061200057fe5b905060200201355b341461205b576040805162461bcd60e51b815260206004820152601c60248201527f4d6f6f6e69737761703a2077726f6e672076616c756520757361676500000000604482015290519081900360640190fd5b60608567ffffffffffffffff8111801561207457600080fd5b5060405190808252806020026020018201604052801561209e578160200160208202803683370190505b50905060005b815181101561211a576120fb6120bf848381518110611fa457fe5b6120ca5760006120cc565b345b6118fb308685815181106120dc57fe5b60200260200101516001600160a01b0316612b2190919063ffffffff16565b82828151811061210757fe5b60209081029190910101526001016120a4565b506000612125610c26565b90508061217e576121396103e86063612bc2565b9350612147306103e8612f7c565b60005b878110156121785761216e858a8a8481811061216257fe5b90506020020135612dd2565b945060010161214a565b506121df565b600019935060005b878110156121dd576121d3856121ce8584815181106121a157fe5b6020026020010151610e4c8d8d878181106121b857fe5b9050602002013587612bc290919063ffffffff16565b612de9565b9450600101612186565b505b8360005b888110156123ae5760008a8a838181106121f957fe5b9050602002013511612252576040805162461bcd60e51b815260206004820152601960248201527f4d6f6f6e69737761703a20616d6f756e74206973207a65726f00000000000000604482015290519081900360640190fd5b600083156122965761229184610e4c6001870361228b878a888151811061227557fe5b6020026020010151612bc290919063ffffffff16565b906129cb565b6122aa565b8a8a838181106122a257fe5b905060200201355b90508888838181106122b857fe5b90506020020135811015612313576040805162461bcd60e51b815260206004820181905260248201527f4d6f6f6e69737761703a206d696e416d6f756e74206e6f742072656163686564604482015290519081900360640190fd5b6123428187848151811061232357fe5b60200260200101516001600160a01b0316612df890919063ffffffff16565b83156123a557600061237186848151811061235957fe5b60200260200101516118fb308a87815181106120dc57fe5b90506123a1886121ce88868151811061238657fe5b6020026020010151610e4c858a612bc290919063ffffffff16565b9750505b506001016121e3565b5081156124785760005b88811015612476576124338482815181106123cf57fe5b60200260200101516123ea88866129cb90919063ffffffff16565b85600f60008a87815181106123fb57fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020612d08909392919063ffffffff16565b61246e84828151811061244257fe5b602002602001015161245d88866129cb90919063ffffffff16565b85600e60008a87815181106123fb57fe5b6001016123b8565b505b600085116124cd576040805162461bcd60e51b815260206004820152601f60248201527f4d6f6f6e69737761703a20726573756c74206973206e6f7420656e6f75676800604482015290519081900360640190fd5b6124d73386612f7c565b60408051868152905133917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4919081900360200190a250506001600655509095945050505050565b61252761262a565b6007546001600160a01b03908116911614612589576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166125ce5760405162461bcd60e51b81526004018080602001828103825260268152602001806134de6026913960400191505060405180910390fd5b6007546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600780546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b0383166126735760405162461bcd60e51b81526004018080602001828103825260248152602001806135db6024913960400191505060405180910390fd5b6001600160a01b0382166126b85760405162461bcd60e51b81526004018080602001828103825260228152602001806135046022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0385166000908152600c602052604081205460ff16801561275a57506001600160a01b0385166000908152600c602052604090205460ff165b80156127785750846001600160a01b0316866001600160a01b031614155b80156127845750600084115b156127d05760006127b36127ac670de0b6b3a7640000610e4c6127a5611dab565b8990612bc2565b8690612cc6565b90506127cc6127c285836129cb565b610e4c8386612bc2565b9150505b95945050505050565b6001600160a01b03831661281e5760405162461bcd60e51b81526004018080602001828103825260258152602001806135b66025913960400191505060405180910390fd5b6001600160a01b0382166128635760405162461bcd60e51b81526004018080602001828103825260238152602001806134796023913960400191505060405180910390fd5b61286e838383612cc1565b6128ab81604051806060016040528060268152602001613526602691396001600160a01b0386166000908152602081905260409020549190612934565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546128da90826129cb565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156129c35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612988578181015183820152602001612970565b50505050905090810190601f1680156129b55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015611d79576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b038216612a6a5760405162461bcd60e51b81526004018080602001828103825260218152602001806135956021913960400191505060405180910390fd5b612a7682600083612cc1565b612ab3816040518060600160405280602281526020016134bc602291396001600160a01b0385166000908152602081905260409020549190612934565b6001600160a01b038316600090815260208190526040902055600254612ad99082612cc6565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000612b2c83612d64565b15612b4257506001600160a01b03811631610c20565b826001600160a01b03166370a08231836040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612b8f57600080fd5b505afa158015612ba3573d6000803e3d6000fd5b505050506040513d6020811015612bb957600080fd5b50519050610c20565b600082612bd157506000610c20565b82820282848281612bde57fe5b0414611d795760405162461bcd60e51b815260040180806020018281038252602181526020018061354c6021913960400191505060405180910390fd5b6000611d7983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061306c565b8015612cc157612c6c83612d64565b15612cad576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015612ca7573d6000803e3d6000fd5b50612cc1565b612cc16001600160a01b03841683836130d1565b505050565b6000611d7983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612934565b612d5e84612d5983610e4c612d1e826001612cc6565b604080518082019091528a546001600160d81b0381168252600160d81b900464ffffffffff16602082015261228b908990611be7908c612d71565b612ebb565b50505050565b6001600160a01b03161590565b600080612d9861012c6121ce866020015164ffffffffff1642612cc690919063ffffffff16565b90506000612da861012c83612cc6565b90506127d061012c610e4c612dbd8786612bc2565b885161228b906001600160d81b031686612bc2565b600081831015612de25781611d79565b5090919050565b6000818310612de25781611d79565b80156114e257612e0782612d64565b15612ea65780341015612e61576040805162461bcd60e51b815260206004820152601a60248201527f556e6945524332303a206e6f7420656e6f7567682076616c7565000000000000604482015290519081900360640190fd5b80341115612ea157336108fc612e773484612cc6565b6040518115909202916000818181858888f19350505050158015612e9f573d6000803e3d6000fd5b505b6114e2565b6114e26001600160a01b038316333084613123565b81546001600160d81b0319166001600160d81b039182161716600160d81b4264ffffffffff1602179055565b6040805180820190915282546001600160d81b0381168252600160d81b900464ffffffffff1660208201526114e2908390612d599084612d71565b60006003821115612f665781600160028204015b81811015612f5e57809150600281828681612f4d57fe5b040181612f5657fe5b049050612f36565b509050610ff4565b8115612f7457506001610ff4565b506000610ff4565b6001600160a01b038216612fd7576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b612fe360008383612cc1565b600254612ff090826129cb565b6002556001600160a01b03821660009081526020819052604090205461301690826129cb565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600081836130bb5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612988578181015183820152602001612970565b5060008385816130c757fe5b0495945050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052612cc1908490613179565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052612d5e9085905b60606131ce826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661322a9092919063ffffffff16565b805190915015612cc1578080602001905160208110156131ed57600080fd5b5051612cc15760405162461bcd60e51b815260040180806020018281038252602a8152602001806135ff602a913960400191505060405180910390fd5b6060610c608484600085606061323f856133a1565b613290576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106132cf5780518252601f1990920191602091820191016132b0565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114613331576040519150601f19603f3d011682016040523d82523d6000602084013e613336565b606091505b5091509150811561334a579150610c609050565b80511561335a5780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315612988578181015183820152602001612970565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610c60575050151592915050565b82805482825590600052602060002090810192821561342f579160200282015b8281111561342f57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906133fa565b5061343b929150613459565b5090565b604051806040016040528060008152602001600081525090565b5b8082111561343b5780546001600160a01b031916815560010161345a56fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573735265656e7472616e637947756172643a207265656e7472616e742063616c6c0045524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c56a9d4f729c91522386bea105d15297ae47fa07b747c70d4233e30b7bd1e7be64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x225 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9FE JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0xA39 JUMPI DUP1 PUSH4 0xE7FF42C9 EQ PUSH2 0xA4E JUMPI DUP1 PUSH4 0xF223885A EQ PUSH2 0xA81 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB3F JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x8FF JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x914 JUMPI DUP1 PUSH4 0xD5BCB9B5 EQ PUSH2 0x972 JUMPI DUP1 PUSH4 0xD73792A9 EQ PUSH2 0x9B6 JUMPI DUP1 PUSH4 0xD7D3AAB5 EQ PUSH2 0x9CB JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7D5 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0xB1EC4C40 EQ PUSH2 0x873 JUMPI DUP1 PUSH4 0xB21B5A21 EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xBAF13A0A EQ PUSH2 0x8EA JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0xA224CEE7 EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x79C JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x6EDC2C09 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x6EDC2C09 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0x78E3214F EQ PUSH2 0x658 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x691 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x48D67E1B EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x5915D806 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x5ED9156D EQ PUSH2 0x581 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x1E1401F8 GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x1E1401F8 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x421 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x19F37361 EQ PUSH2 0x328 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x279 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x261 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xC41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xC68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0xCEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0xD1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0xD70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xD9D SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFDA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH2 0xFF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x10AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1303 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH2 0x1315 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x1324 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1385 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x14E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x154E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x823 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x85F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x847 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x896 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0x15E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0x15EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH2 0x15F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x937 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x1603 JUMP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x17F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0x1CFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D09 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1D80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0x1DAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E21 JUMP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xB01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xB34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1E91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x251F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBFE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBD3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBFE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBE1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C PUSH2 0xC15 PUSH2 0x262A JUMP JUMPDEST DUP5 DUP5 PUSH2 0x262E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC60 DUP5 DUP5 DUP5 PUSH2 0xC52 DUP9 PUSH2 0x1D09 JUMP JUMPDEST PUSH2 0xC5B DUP9 PUSH2 0x1E21 JUMP JUMPDEST PUSH2 0x271A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC75 DUP5 DUP5 DUP5 PUSH2 0x27D9 JUMP JUMPDEST PUSH2 0xCE5 DUP5 PUSH2 0xC81 PUSH2 0x262A JUMP JUMPDEST PUSH2 0xCE0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x356D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xCBF PUSH2 0x262A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2934 JUMP JUMPDEST PUSH2 0x262E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C PUSH2 0xD2F PUSH2 0x262A JUMP JUMPDEST DUP5 PUSH2 0xCE0 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xD40 PUSH2 0x262A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x29CB JUMP JUMPDEST PUSH2 0x12C SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD83 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x349C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0x0 PUSH2 0xDF2 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP PUSH2 0xDFE CALLER DUP5 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xF43 JUMPI PUSH1 0x0 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE1A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0xE3A DUP3 ADDRESS PUSH2 0x2B21 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE52 DUP6 PUSH2 0xE4C DUP5 DUP11 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 PUSH2 0x2C1B JUMP JUMPDEST SWAP1 POP PUSH2 0xE68 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP4 PUSH2 0x2C5D JUMP JUMPDEST DUP6 MLOAD DUP5 LT ISZERO DUP1 PUSH2 0xE8B JUMPI POP DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xE7F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0xEDC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A20726573756C74206973206E6F7420656E6F75676800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xF0A DUP3 PUSH2 0xEEA DUP8 DUP11 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 DUP9 PUSH2 0x2D08 JUMP JUMPDEST PUSH2 0xF38 DUP3 PUSH2 0xF18 DUP8 DUP11 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 DUP9 PUSH2 0x2D08 JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0xE01 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1001 PUSH2 0x262A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1063 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x10F3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x349C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH2 0x1100 PUSH2 0x262A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1162 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x117E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11A8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1202 JUMPI PUSH2 0x11E3 ADDRESS PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x11C8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2B21 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11EF JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x11AE JUMP JUMPDEST POP PUSH2 0x1217 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP5 PUSH2 0x2C5D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x129E JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x122F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1248 ADDRESS PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x11C8 JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0x1296 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x135BDBDB9A5CDDD85C0E881858D8D95CDCC819195B9A5959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x121A JUMP JUMPDEST POP PUSH2 0x3E8 PUSH2 0x12AB ADDRESS PUSH2 0xFDA JUMP JUMPDEST LT ISZERO PUSH2 0x12F9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x135BDBDB9A5CDDD85C0E881858D8D95CDCC819195B9A5959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBFE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBD3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBFE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 EQ PUSH2 0x13DB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A206F6E6C79203220746F6B656E7320616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 MLOAD PUSH2 0x1400 SWAP1 PUSH1 0xA SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x33DA JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x14E2 JUMPI PUSH1 0xC PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x141D JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1496 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A206475706C696361746520746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x14A8 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x1404 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C PUSH2 0x14F3 PUSH2 0x262A JUMP JUMPDEST DUP5 PUSH2 0xCE0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3629 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x151D PUSH2 0x262A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2934 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C PUSH2 0x155B PUSH2 0x262A JUMP JUMPDEST DUP5 DUP5 PUSH2 0x27D9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xBFE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x159C JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x1642 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x11561412549151 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x8 SLOAD DUP4 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP8 ADD MSTORE DUP1 DUP6 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP7 DUP14 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP8 ADD DUP13 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP9 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP8 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP6 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x102 DUP8 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH2 0x122 DUP1 DUP8 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP3 MLOAD DUP1 DUP8 SUB SWAP1 SWAP8 ADD DUP8 MSTORE PUSH2 0x142 DUP7 ADD DUP1 DUP5 MSTORE DUP8 MLOAD SWAP8 DUP6 ADD SWAP8 SWAP1 SWAP8 KECCAK256 SWAP7 DUP6 SWAP1 MSTORE PUSH2 0x162 DUP7 ADD DUP1 DUP5 MSTORE DUP8 SWAP1 MSTORE PUSH1 0xFF DUP11 AND PUSH2 0x182 DUP8 ADD MSTORE PUSH2 0x1A2 DUP7 ADD DUP10 SWAP1 MSTORE PUSH2 0x1C2 DUP7 ADD DUP9 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP6 SWAP5 SWAP1 SWAP3 PUSH2 0x1E2 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1762 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1798 JUMPI POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x17DD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x494E56414C49445F5349474E4154555245 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x17E8 DUP11 DUP11 DUP11 PUSH2 0x262E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x183C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x349C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH2 0x1853 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x185E JUMPI PUSH1 0x0 PUSH2 0x1860 JUMP JUMPDEST DUP4 JUMPDEST CALLVALUE EQ PUSH2 0x18B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A2077726F6E672076616C756520757361676500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x18BB PUSH2 0x343F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1901 PUSH2 0x18DB DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x18E6 JUMPI PUSH1 0x0 PUSH2 0x18E8 JUMP JUMPDEST CALLVALUE JUMPDEST PUSH2 0x18FB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND ADDRESS PUSH2 0x2B21 JUMP JUMPDEST SWAP1 PUSH2 0x2CC6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1919 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ADDRESS PUSH2 0x2B21 JUMP JUMPDEST SWAP1 MSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP4 POP SWAP2 PUSH2 0x197B SWAP2 PUSH2 0x1974 SWAP2 SWAP1 PUSH2 0x2D71 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x2DD2 JUMP JUMPDEST PUSH1 0x20 DUP4 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 SWAP4 POP PUSH2 0x19DD SWAP2 PUSH2 0x19D3 SWAP2 PUSH2 0x2D71 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x2DE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x19F2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP9 PUSH2 0x2DF8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x1A0E SWAP1 PUSH2 0x18FB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND ADDRESS PUSH2 0x2B21 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A1D DUP11 DUP11 DUP4 DUP7 DUP7 PUSH2 0x271A JUMP JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 GT DUP1 ISZERO PUSH2 0x1A2F JUMPI POP DUP7 DUP6 LT ISZERO JUMPDEST PUSH2 0x1A80 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A2072657475726E206973206E6F7420656E6F75676800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1A94 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND CALLER DUP8 PUSH2 0x2C5D JUMP JUMPDEST DUP4 MLOAD DUP4 EQ PUSH2 0x1AC7 JUMPI PUSH2 0x1AC7 PUSH2 0x1AA9 DUP5 DUP4 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 PUSH2 0x2EBB JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD DUP3 EQ PUSH2 0x1AFD JUMPI PUSH2 0x1AFD PUSH2 0x1ADF DUP4 DUP8 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 PUSH2 0x2EBB JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1B20 SWAP2 PUSH2 0x2EE7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x1B48 SWAP2 PUSH2 0x2EE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x1C03 JUMPI DUP4 MLOAD PUSH15 0xC097CE7BC90715B34B9F1000000000 SWAP1 PUSH2 0x1B82 SWAP1 PUSH2 0xE4C PUSH2 0x1B7B DUP3 DUP7 PUSH2 0x29CB JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x1B9B SWAP1 PUSH2 0xE4C PUSH2 0x1B7B DUP3 DUP11 PUSH2 0x2CC6 JUMP JUMPDEST SWAP1 POP PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 GT ISZERO PUSH2 0x1C01 JUMPI PUSH1 0x0 PUSH2 0x1BED PUSH1 0x14 PUSH2 0xE4C PUSH8 0xDE0B6B3A7640000 PUSH2 0xE4C PUSH2 0x1BD2 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x1BE7 PUSH8 0xDE0B6B3A7640000 PUSH2 0x18FB DUP11 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1BFF JUMPI PUSH2 0x1BFF DUP9 DUP3 PUSH2 0x2F7C JUMP JUMPDEST POP JUMPDEST POP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x86C49B5D8577DA08444947F1427D23EF191CFABF2C0788F93324D79E926A9302 DUP5 DUP10 DUP10 PUSH1 0x0 ADD MLOAD DUP11 PUSH1 0x20 ADD MLOAD PUSH2 0x1C56 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP5 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0xA0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND SWAP1 SWAP13 ADD DUP13 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 DUP2 DIV DUP13 AND DUP8 ADD DUP13 AND SWAP1 SWAP2 MUL SWAP11 AND SWAP10 SWAP1 SWAP10 OR SWAP1 SWAP9 SSTORE POP POP PUSH1 0x1 PUSH1 0x6 SSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D1F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH2 0x1D79 SWAP1 PUSH2 0x1D73 SWAP1 DUP4 PUSH2 0x2D71 JUMP JUMPDEST DUP3 PUSH2 0x2DD2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDDCA3F43 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDDCA3F43 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E37 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH2 0x1D79 SWAP1 PUSH2 0x1E8B SWAP1 DUP4 PUSH2 0x2D71 JUMP JUMPDEST DUP3 PUSH2 0x2DE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x1ED9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x349C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1F35 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F17 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD DUP7 DUP7 SWAP1 POP EQ PUSH2 0x1F94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A2077726F6E6720616D6F756E7473206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1FBA DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1FA4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x1FF3 JUMPI PUSH2 0x1FCE DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1FA4 JUMPI INVALID JUMPDEST PUSH2 0x1FD9 JUMPI PUSH1 0x0 PUSH2 0x1FEE JUMP JUMPDEST DUP6 DUP6 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x1FE6 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD JUMPDEST PUSH2 0x2008 JUMP JUMPDEST DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x2000 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD JUMPDEST CALLVALUE EQ PUSH2 0x205B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A2077726F6E672076616C756520757361676500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x2074 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x209E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x211A JUMPI PUSH2 0x20FB PUSH2 0x20BF DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FA4 JUMPI INVALID JUMPDEST PUSH2 0x20CA JUMPI PUSH1 0x0 PUSH2 0x20CC JUMP JUMPDEST CALLVALUE JUMPDEST PUSH2 0x18FB ADDRESS DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x20DC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B21 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2107 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x20A4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2125 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x217E JUMPI PUSH2 0x2139 PUSH2 0x3E8 PUSH1 0x63 PUSH2 0x2BC2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2147 ADDRESS PUSH2 0x3E8 PUSH2 0x2F7C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x2178 JUMPI PUSH2 0x216E DUP6 DUP11 DUP11 DUP5 DUP2 DUP2 LT PUSH2 0x2162 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x2DD2 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 ADD PUSH2 0x214A JUMP JUMPDEST POP PUSH2 0x21DF JUMP JUMPDEST PUSH1 0x0 NOT SWAP4 POP PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x21DD JUMPI PUSH2 0x21D3 DUP6 PUSH2 0x21CE DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x21A1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xE4C DUP14 DUP14 DUP8 DUP2 DUP2 LT PUSH2 0x21B8 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP8 PUSH2 0x2BC2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE9 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 ADD PUSH2 0x2186 JUMP JUMPDEST POP JUMPDEST DUP4 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x23AE JUMPI PUSH1 0x0 DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x21F9 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT PUSH2 0x2252 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A20616D6F756E74206973207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ISZERO PUSH2 0x2296 JUMPI PUSH2 0x2291 DUP5 PUSH2 0xE4C PUSH1 0x1 DUP8 SUB PUSH2 0x228B DUP8 DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x2275 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2BC2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x29CB JUMP JUMPDEST PUSH2 0x22AA JUMP JUMPDEST DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x22A2 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD JUMPDEST SWAP1 POP DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x22B8 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x2313 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A206D696E416D6F756E74206E6F742072656163686564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2342 DUP2 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2323 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2DF8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 ISZERO PUSH2 0x23A5 JUMPI PUSH1 0x0 PUSH2 0x2371 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2359 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18FB ADDRESS DUP11 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x20DC JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x23A1 DUP9 PUSH2 0x21CE DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2386 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xE4C DUP6 DUP11 PUSH2 0x2BC2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x21E3 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x2478 JUMPI PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x2476 JUMPI PUSH2 0x2433 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23CF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x23EA DUP9 DUP7 PUSH2 0x29CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0xF PUSH1 0x0 DUP11 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x23FB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2D08 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x246E DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2442 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x245D DUP9 DUP7 PUSH2 0x29CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0xE PUSH1 0x0 DUP11 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x23FB JUMPI INVALID JUMPDEST PUSH1 0x1 ADD PUSH2 0x23B8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x24CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6F6E69737761703A20726573756C74206973206E6F7420656E6F75676800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x24D7 CALLER DUP7 PUSH2 0x2F7C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2527 PUSH2 0x262A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2589 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x25CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x34DE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35DB PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x26B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3504 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x275A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x2778 JUMPI POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2784 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST ISZERO PUSH2 0x27D0 JUMPI PUSH1 0x0 PUSH2 0x27B3 PUSH2 0x27AC PUSH8 0xDE0B6B3A7640000 PUSH2 0xE4C PUSH2 0x27A5 PUSH2 0x1DAB JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x2CC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x27CC PUSH2 0x27C2 DUP6 DUP4 PUSH2 0x29CB JUMP JUMPDEST PUSH2 0xE4C DUP4 DUP7 PUSH2 0x2BC2 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x281E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35B6 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2863 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3479 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x286E DUP4 DUP4 DUP4 PUSH2 0x2CC1 JUMP JUMPDEST PUSH2 0x28AB DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3526 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2934 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x28DA SWAP1 DUP3 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x29C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2988 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2970 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x29B5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1D79 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2A6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3595 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A76 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2CC1 JUMP JUMPDEST PUSH2 0x2AB3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x34BC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2934 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x2AD9 SWAP1 DUP3 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2C DUP4 PUSH2 0x2D64 JUMP JUMPDEST ISZERO PUSH2 0x2B42 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND BALANCE PUSH2 0xC20 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2BD1 JUMPI POP PUSH1 0x0 PUSH2 0xC20 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2BDE JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1D79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x354C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D79 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x306C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CC1 JUMPI PUSH2 0x2C6C DUP4 PUSH2 0x2D64 JUMP JUMPDEST ISZERO PUSH2 0x2CAD JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2CA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x2CC1 JUMP JUMPDEST PUSH2 0x2CC1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x30D1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D79 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2934 JUMP JUMPDEST PUSH2 0x2D5E DUP5 PUSH2 0x2D59 DUP4 PUSH2 0xE4C PUSH2 0x2D1E DUP3 PUSH1 0x1 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x228B SWAP1 DUP10 SWAP1 PUSH2 0x1BE7 SWAP1 DUP13 PUSH2 0x2D71 JUMP JUMPDEST PUSH2 0x2EBB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D98 PUSH2 0x12C PUSH2 0x21CE DUP7 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND TIMESTAMP PUSH2 0x2CC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2DA8 PUSH2 0x12C DUP4 PUSH2 0x2CC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x27D0 PUSH2 0x12C PUSH2 0xE4C PUSH2 0x2DBD DUP8 DUP7 PUSH2 0x2BC2 JUMP JUMPDEST DUP9 MLOAD PUSH2 0x228B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB AND DUP7 PUSH2 0x2BC2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x2DE2 JUMPI DUP2 PUSH2 0x1D79 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2DE2 JUMPI DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14E2 JUMPI PUSH2 0x2E07 DUP3 PUSH2 0x2D64 JUMP JUMPDEST ISZERO PUSH2 0x2EA6 JUMPI DUP1 CALLVALUE LT ISZERO PUSH2 0x2E61 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6945524332303A206E6F7420656E6F7567682076616C7565000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 CALLVALUE GT ISZERO PUSH2 0x2EA1 JUMPI CALLER PUSH2 0x8FC PUSH2 0x2E77 CALLVALUE DUP5 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2E9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x14E2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER ADDRESS DUP5 PUSH2 0x3123 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB SWAP2 DUP3 AND OR AND PUSH1 0x1 PUSH1 0xD8 SHL TIMESTAMP PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x14E2 SWAP1 DUP4 SWAP1 PUSH2 0x2D59 SWAP1 DUP5 PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x2F66 JUMPI DUP2 PUSH1 0x1 PUSH1 0x2 DUP3 DIV ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F5E JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP7 DUP2 PUSH2 0x2F4D JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x2F56 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x2F36 JUMP JUMPDEST POP SWAP1 POP PUSH2 0xFF4 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2F74 JUMPI POP PUSH1 0x1 PUSH2 0xFF4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2FD7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2FE3 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2CC1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2FF0 SWAP1 DUP3 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3016 SWAP1 DUP3 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x30BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2988 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2970 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x30C7 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x2CC1 SWAP1 DUP5 SWAP1 PUSH2 0x3179 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x2D5E SWAP1 DUP6 SWAP1 JUMPDEST PUSH1 0x60 PUSH2 0x31CE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x322A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2CC1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2CC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35FF PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xC60 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH1 0x60 PUSH2 0x323F DUP6 PUSH2 0x33A1 JUMP JUMPDEST PUSH2 0x3290 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x32CF JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x32B0 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3331 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x334A JUMPI SWAP2 POP PUSH2 0xC60 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x335A JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2988 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xC60 JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x342F JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x342F JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x33FA JUMP JUMPDEST POP PUSH2 0x343B SWAP3 SWAP2 POP PUSH2 0x3459 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x343B JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x345A JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 MSTORE PUSH6 0x656E7472616E PUSH4 0x79477561 PUSH19 0x643A207265656E7472616E742063616C6C0045 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65536166 PUSH6 0x4D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0xC5 PUSH11 0x9D4F729C91522386BEA105 0xD1 MSTORE SWAP8 0xAE SELFBALANCE STATICCALL SMOD 0xB7 SELFBALANCE 0xC7 0xD TIMESTAMP CALLER 0xE3 SIGNEXTEND PUSH28 0xD1E7BE64736F6C634300060C00330000000000000000000000000000 ",
							"sourceMap": "1561:11233:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4255:166;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4255:166:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3262:98;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2939:38:9;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2939:38:9;-1:-1:-1;;;;;2939:38:9;;:::i;4925:197::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4925:197:9;;;;;;;;;;;;;;;;;:::i;4881:317:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4881:317:4;;;;;;;;;;;;;;;;;:::i;2722:108:9:-;;;;;;;;;;;;;:::i;3121:81:4:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2581:31:9;;;;;;;;;;;;;:::i;5593:215:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5593:215:4;;;;;;;;:::i;4348:105:9:-;;;;;;;;;;;;;:::i;2867:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2867:22:9;;:::i;:::-;;;;-1:-1:-1;;;;;2867:22:9;;;;;;;;;;;;;;7723:817;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7723:817:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7723:817:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7723:817:9;;-1:-1:-1;7723:817:9;;-1:-1:-1;;;;;7723:817:9:i;:::-;;3112:71;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3112:71:9;-1:-1:-1;;;;;3112:71:9;;:::i;:::-;;;;-1:-1:-1;;;;;3112:71:9;;;;;;;;;;;;;;;;;;;;;;3034:72;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3034:72:9;-1:-1:-1;;;;;3034:72:9;;:::i;3418:117:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3418:117:4;-1:-1:-1;;;;;3418:117:4;;:::i;1689:145:1:-;;;;;;;;;;;;;:::i;11125:585:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11125:585:9;;;;;;;;:::i;2895:38::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2895:38:9;-1:-1:-1;;;;;2895:38:9;;:::i;1066:77:1:-;;;;;;;;;;;;;:::i;2413:85:4:-;;;;;;;;;;;;;:::i;3727:432:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3727:432:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3727:432:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3727:432:9;;-1:-1:-1;3727:432:9;;-1:-1:-1;;;;;3727:432:9:i;6295:266:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6295:266:4;;;;;;;;:::i;3738:172::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3738:172:4;;;;;;;;:::i;4252:90:9:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2983:45;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2983:45:9;-1:-1:-1;;;;;2983:45:9;;:::i;:::-;;;;;-1:-1:-1;;;;;2983:45:9;;;;;;-1:-1:-1;;;;;2983:45:9;;;;;;;;;;;;;;;;2363:43;;;;;;;;;;;;;:::i;2443:42::-;;;;;;;;;;;;;:::i;2838:23::-;;;;;;;;;;;;;:::i;12110:682::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12110:682:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8546:2573::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8546:2573:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2525:46::-;;;;;;;;;;;;;:::i;4459:228::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4459:228:9;-1:-1:-1;;;;;4459:228:9;;:::i;3968:149:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3968:149:4;;;;;;;;;;:::i;4165:81:9:-;;;;;;;;;;;;;:::i;4693:226::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4693:226:9;-1:-1:-1;;;;;4693:226:9;;:::i;5128:2589::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5128:2589:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5128:2589:9;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5128:2589:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5128:2589:9;;;;;;;;;;-1:-1:-1;5128:2589:9;;-1:-1:-1;5128:2589:9;-1:-1:-1;5128:2589:9;:::i;1983:240:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1983:240:1;-1:-1:-1;;;;;1983:240:1;;:::i;2219:81:4:-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;-1:-1:-1;4410:4:4;4255:166;;;;;:::o;3262:98::-;3341:12;;3262:98;:::o;2939:38:9:-;;;;;;;;;;;;;;;:::o;4925:197::-;5006:7;5032:83;5043:3;5048;5053:6;5061:26;5083:3;5061:21;:26::i;:::-;5089:25;5110:3;5089:20;:25::i;:::-;5032:10;:83::i;:::-;5025:90;4925:197;-1:-1:-1;;;;4925:197:9:o;4881:317:4:-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5080:19:4;;;;;;:11;:19;;;;;;5100:12;:10;:12::i;:::-;-1:-1:-1;;;;;5080:33:4;;;;;;;;;;;;-1:-1:-1;5080:33:4;;;:89;:37;:89::i;:::-;5049:8;:121::i;:::-;-1:-1:-1;5187:4:4;4881:317;;;;;:::o;2722:108:9:-;2764:66;2722:108;:::o;3121:81:4:-;3186:9;;;;3121:81;:::o;2581:31:9:-;;;;:::o;5593:215:4:-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;-1:-1:-1;;;;;5729:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;5729:25:4;;;:34;;;;;;;;;;;:38;:50::i;4348:105:9:-;643:9;4348:105;:::o;2867:22::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2867:22:9;;-1:-1:-1;2867:22:9;:::o;7723:817::-;1671:1:8;2260:7;;:19;;2252:63;;;;;-1:-1:-1;;;2252:63:8;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2252:63:8;;;;;;;;;;;;;;;1671:1;2390:7;:18;7818:19:9::1;7840:13;:11;:13::i;:::-;7818:35;;7863:25;7869:10;7881:6;7863:5;:25::i;:::-;7904:6;7899:590;7920:6;:13:::0;7916:17;::::1;7899:590;;;7954:12;7969:6;7976:1;7969:9;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;7969:9:9::1;::::0;-1:-1:-1;8014:33:9::1;7969:9:::0;8041:4:::1;8014:18;:33::i;:::-;7993:54:::0;-1:-1:-1;8061:13:9::1;8077:39;8104:11:::0;8077:22:::1;7993:54:::0;8092:6;8077:14:::1;:22::i;:::-;:26:::0;::::1;:39::i;:::-;8061:55:::0;-1:-1:-1;8130:36:9::1;-1:-1:-1::0;;;;;8130:17:9;::::1;8148:10;8061:55:::0;8130:17:::1;:36::i;:::-;8193:10;:17;8188:1;:22;;:48;;;;8223:10;8234:1;8223:13;;;;;;;;;;;;;;8214:5;:22;;8188:48;8180:92;;;::::0;;-1:-1:-1;;;8180:92:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8287:89;8327:10:::0;8339:23:::1;:11:::0;8355:6;8339:15:::1;:23::i;:::-;-1:-1:-1::0;;;;;8287:33:9;::::1;;::::0;;;:26:::1;:33;::::0;;;;;:89;8364:11;8287:39:::1;:89::i;:::-;8390:88;8429:10:::0;8441:23:::1;:11:::0;8457:6;8441:15:::1;:23::i;:::-;-1:-1:-1::0;;;;;8390:32:9;::::1;;::::0;;;:25:::1;:32;::::0;;;;;:88;8466:11;8390:38:::1;:88::i;:::-;-1:-1:-1::0;;;7935:3:9::1;;7899:590;;;-1:-1:-1::0;8504:29:9::1;::::0;;;;;;;8514:10:::1;::::0;8504:29:::1;::::0;;;;;::::1;::::0;;::::1;-1:-1:-1::0;;1628:1:8;2563:7;:22;-1:-1:-1;7723:817:9:o;3112:71::-;;;;;;;;;;;;-1:-1:-1;;;;;3112:71:9;;;-1:-1:-1;;;3112:71:9;;;;;:::o;3034:72::-;;;;;;;;;;;;-1:-1:-1;;;;;3034:72:9;;;-1:-1:-1;;;3034:72:9;;;;;:::o;3418:117:4:-;-1:-1:-1;;;;;3510:18:4;;3484:7;3510:18;;;;;;;;;;;3418:117;;;;:::o;1689:145:1:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:1;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:6:::1;::::0;1758:40:::1;::::0;1795:1:::1;::::0;-1:-1:-1;;;;;1779:6:1::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1808:6;:19:::0;;-1:-1:-1;;;;;;1808:19:1::1;::::0;;1689:145::o;11125:585:9:-;1671:1:8;2260:7;;:19;;2252:63;;;;;-1:-1:-1;;;2252:63:8;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2252:63:8;;;;;;;;;;;;;;;1671:1;2390:7;:18;1280:12:1::1;:10;:12::i;:::-;1270:6;::::0;-1:-1:-1;;;;;1270:6:1;;::::1;:22:::0;::::1;;1262:67;;;::::0;;-1:-1:-1;;;1262:67:1;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;11260:6:9::2;:13:::0;11218:25:::2;::::0;11246:28:::2;::::0;::::2;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;11246:28:9::2;;11218:56;;11289:6;11284:119;11305:8;:15;11301:1;:19;11284:119;;;11355:37;11386:4;11355:6;11362:1;11355:9;;;;;;;;;::::0;;;::::2;::::0;;;::::2;::::0;-1:-1:-1;;;;;11355:9:9::2;::::0;:22:::2;:37::i;:::-;11341:8;11350:1;11341:11;;;;;;;;;::::0;;::::2;::::0;;;;;:51;11322:3:::2;;11284:119;;;-1:-1:-1::0;11413:37:9::2;-1:-1:-1::0;;;;;11413:17:9;::::2;11431:10;11443:6:::0;11413:17:::2;:37::i;:::-;11466:6;11461:157;11482:8;:15;11478:1;:19;11461:157;;;11567:8;11576:1;11567:11;;;;;;;;;;;;;;11526:37;11557:4;11526:6;11533:1;11526:9;;;;;;;:37;:52;;11518:89;;;::::0;;-1:-1:-1;;;11518:89:9;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;11518:89:9;;;;;;;;;;;;;::::2;;11499:3;;11461:157;;;;2481:4;11635:24;11653:4;11635:9;:24::i;:::-;:39;;11627:76;;;::::0;;-1:-1:-1;;;11627:76:9;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;11627:76:9;;;;;;;;;;;;;::::2;;-1:-1:-1::0;;1628:1:8;2563:7;:22;-1:-1:-1;11125:585:9:o;2895:38::-;;;;;;;;;;;;;:::o;1066:77:1:-;1130:6;;-1:-1:-1;;;;;1130:6:1;1066:77;:::o;2413:85:4:-;2484:7;2477:14;;;;;;;;-1:-1:-1;;2477:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:13;;2477:14;;2484:7;;2477:14;;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;3727:432:9;3804:6;:13;3821:1;3804:18;3796:63;;;;;-1:-1:-1;;;3796:63:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3924:7;:30;;-1:-1:-1;;;;;;3924:30:9;3943:10;3924:30;;;3964:15;;;;:6;;:15;;;;;:::i;:::-;;3994:6;3989:164;4010:6;:13;4006:1;:17;3989:164;;;4053:7;:18;4061:6;4068:1;4061:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4053:18:9;;;;;;;;;;;-1:-1:-1;4053:18:9;;;;4052:19;4044:59;;;;;-1:-1:-1;;;4044:59:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;4138:4;4117:7;:18;4125:6;4132:1;4125:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4117:18:9;;;;;;;;;;;-1:-1:-1;4117:18:9;:25;;-1:-1:-1;;4117:25:9;;;;;;;;;;-1:-1:-1;4025:3:9;3989:164;;;;3727:432;:::o;6295:266:4:-;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;-1:-1:-1;;;;;6436:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6436:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;4252:90:9:-;4295:15;4329:6;4322:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4322:13:9;;;;;;;;;;;;;;;;;;;;;;4252:90;:::o;2983:45::-;;;;;;;;;;;;-1:-1:-1;;;;;2983:45:9;;;;-1:-1:-1;;;2983:45:9;;;;:::o;2363:43::-;2404:2;2363:43;:::o;2443:42::-;2481:4;2443:42;:::o;2838:23::-;;;-1:-1:-1;;;;;2838:23:9;;:::o;12110:682::-;12256:15;12244:8;:27;;12236:47;;;;;-1:-1:-1;;;12236:47:9;;;;;;;;;;;;-1:-1:-1;;;12236:47:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;12306:14:9;;;12293:10;12306:14;;;:6;:14;;;;;;;;:16;;;;;;;;;12434;;12478:68;;2764:66;12478:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12468:79;;;;;;-1:-1:-1;;;12372:189:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12349:222;;;;;;;;;12608:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12306:16;;12349:222;12306:16;;12608:26;;;;;12306:14;;-1:-1:-1;;12608:26:9;;;;;;;;;;;12306:16;12608:26;;;;;;;;;;;;;;;-1:-1:-1;;12608:26:9;;-1:-1:-1;;12608:26:9;;;-1:-1:-1;;;;;;;12652:30:9;;;;;;:60;;;12706:6;-1:-1:-1;;;;;12686:26:9;:16;-1:-1:-1;;;;;12686:26:9;;12652:60;12644:90;;;;;-1:-1:-1;;;12644:90:9;;;;;;;;;;;;-1:-1:-1;;;12644:90:9;;;;;;;;;;;;;;;12753:32;12762:6;12770:7;12779:5;12753:8;:32::i;:::-;12110:682;;;;;;;;;;:::o;8546:2573::-;8675:14;1671:1:8;2260:7;;:19;;2252:63;;;;;-1:-1:-1;;;2252:63:8;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2252:63:8;;;;;;;;;;;;;;;1671:1;2390:7;:18;8723:11:9::1;-1:-1:-1::0;;;;;8723:9:9;::::1;;:11::i;:::-;:24;;8746:1;8723:24;;;8737:6;8723:24;8709:9;:39;8701:80;;;::::0;;-1:-1:-1;;;8701:80:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8792:24;;:::i;:::-;8819:153;;;;;;;;8847:64;8883:11;:3;-1:-1:-1::0;;;;;8883:9:9::1;;:11::i;:::-;:27;;8909:1;8883:27;;;8897:9;8883:27;8847:31;-1:-1:-1::0;;;;;8847:16:9;::::1;8872:4;8847:16;:31::i;:::-;:35:::0;::::1;:64::i;:::-;8819:153:::0;;::::1;;8930:31;-1:-1:-1::0;;;;;8930:16:9;::::1;8955:4;8930:16;:31::i;:::-;8819:153:::0;;9149:12;;-1:-1:-1;;;;;9109:31:9;::::1;9071:26;9109:31:::0;;;:26:::1;:31;::::0;;;;;;;:39;;;;::::1;::::0;;;;-1:-1:-1;;;;;9109:39:9;::::1;::::0;;-1:-1:-1;;;9109:39:9;::::1;;;::::0;;::::1;::::0;;;;9149:12;;-1:-1:-1;9071:26:9;9100:77:::1;::::0;9109:53:::1;::::0;:39;::::1;:53::i;:::-;9164:12:::0;;9100:8:::1;:77::i;:::-;9263:12;::::0;;::::1;::::0;-1:-1:-1;;;;;9224:30:9;::::1;9187:25;9224:30:::0;;;:25:::1;:30:::0;;;;;;:38;;;;::::1;::::0;;;;-1:-1:-1;;;;;9224:38:9;::::1;::::0;;-1:-1:-1;;;9224:38:9;::::1;;;::::0;;::::1;::::0;;;;9071:106;;-1:-1:-1;9215:76:9::1;::::0;9224:52:::1;::::0;:38:::1;:52::i;:::-;9278:8;:12;;;9215:8;:76::i;:::-;9187:104:::0;-1:-1:-1;9302:39:9::1;-1:-1:-1::0;;;;;9302:31:9;::::1;9334:6:::0;9302:31:::1;:39::i;:::-;9407:12:::0;;9351:17:::1;::::0;9371:49:::1;::::0;:31:::1;-1:-1:-1::0;;;;;9371:16:9;::::1;9396:4;9371:16;:31::i;:49::-;9351:69;;9439:70;9450:3;9455;9460:9;9471:18;9491:17;9439:10;:70::i;:::-;9430:79;;9536:1;9527:6;:10;:33;;;;;9551:9;9541:6;:19;;9527:33;9519:77;;;::::0;;-1:-1:-1;;;9519:77:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9606:35;-1:-1:-1::0;;;;;9606:15:9;::::1;9622:10;9634:6:::0;9606:15:::1;:35::i;:::-;9760:12:::0;;9738:34;::::1;9734:135;;9788:70;9824:33;:18:::0;9847:9;9824:22:::1;:33::i;:::-;-1:-1:-1::0;;;;;9788:31:9;::::1;;::::0;;;:26:::1;:31;::::0;;;;;:35:::1;:70::i;:::-;9903:8;:12;;;9882:17;:33;9878:129;;9931:65;9966:29;:17:::0;9988:6;9966:21:::1;:29::i;:::-;-1:-1:-1::0;;;;;9931:30:9;::::1;;::::0;;;:25:::1;:30;::::0;;;;;:34:::1;:65::i;:::-;10116:12:::0;;-1:-1:-1;;;;;10078:30:9;::::1;10116:12;10078:30:::0;;;:25:::1;:30;::::0;;;;:51:::1;::::0;:37:::1;:51::i;:::-;10178:12;::::0;;::::1;::::0;-1:-1:-1;;;;;10139:31:9;::::1;;::::0;;;:26:::1;:31:::0;;;;;;;:52:::1;::::0;:38:::1;:52::i;:::-;-1:-1:-1::0;;;;;10206:22:9;::::1;::::0;10202:631:::1;;10365:12:::0;;10277:4:::1;::::0;10313:65:::1;::::0;:47:::1;10332:27;10365:12:::0;10349:9;10332:16:::1;:27::i;:::-;10313:14:::0;;:18:::1;:47::i;:65::-;10458:12;::::0;::::1;::::0;10296:82;;-1:-1:-1;10409:62:9::1;::::0;:44:::1;10428:24;10458:12:::0;10445:6;10428:16:::1;:24::i;10409:62::-;10392:79;;10506:4;10489:14;:21;10485:338;;;10593:21;10617:80;2404:2;10617:60;10672:4;10617:50;10653:13;:11;:13::i;:::-;10617:31;10643:4;10617:21;:14;:19;:21::i;:31::-;:35:::0;::::1;:50::i;:80::-;10593:104:::0;-1:-1:-1;10719:17:9;;10715:94:::1;;10760:30;10766:8;10776:13;10760:5;:30::i;:::-;10485:338;;10202:631;;10890:3;-1:-1:-1::0;;;;;10848:119:9::1;10876:3;-1:-1:-1::0;;;;;10848:119:9::1;10856:10;-1:-1:-1::0;;;;;10848:119:9::1;;10896:9;10907:6;10915:8;:12;;;10929:8;:12;;;10943:13;:11;:13::i;:::-;10848:119;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10848:119:9;::::1;::::0;;;;;;;;;;;;::::1;-1:-1:-1::0;;;;;11020:12:9;;::::1;;::::0;;;:7:::1;:12;::::0;;;;:44;;-1:-1:-1;;;;;;;;11020:44:9;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;11020:44:9;;::::1;::::0;;;::::1;11074:38:::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;11020:44:9;2563:7:8;:22;11105:6:9;8546:2573;-1:-1:-1;;;;;8546:2573:9:o;2525:46::-;2567:4;2525:46;:::o;4459:228::-;4524:7;;4561:33;-1:-1:-1;;;;;4561:18:9;;4588:4;4561:18;:33::i;:::-;-1:-1:-1;;;;;4620:33:9;;;;;;:26;:33;;;;;;;;;:41;;;;;;;;;-1:-1:-1;;;;;4620:41:9;;;;-1:-1:-1;;;4620:41:9;;;;;;;;4543:51;;-1:-1:-1;4611:69:9;;4620:50;;4543:51;4620:41;:50::i;:::-;4672:7;4611:8;:69::i;:::-;4604:76;4459:228;-1:-1:-1;;;4459:228:9:o;3968:149:4:-;-1:-1:-1;;;;;4083:18:4;;;4057:7;4083:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3968:149::o;4165:81:9:-;4226:7;;:13;;;-1:-1:-1;;;4226:13:9;;;;4200:7;;-1:-1:-1;;;;;4226:7:9;;:11;;:13;;;;;;;;;;;;;;:7;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4226:13:9;;-1:-1:-1;4165:81:9;:::o;4693:226::-;4757:7;;4794:33;-1:-1:-1;;;;;4794:18:9;;4821:4;4794:18;:33::i;:::-;-1:-1:-1;;;;;4853:32:9;;;;;;:25;:32;;;;;;;;;:40;;;;;;;;;-1:-1:-1;;;;;4853:40:9;;;;-1:-1:-1;;;4853:40:9;;;;;;;;4776:51;;-1:-1:-1;4844:68:9;;4853:49;;4776:51;4853:40;:49::i;:::-;4904:7;4844:8;:68::i;5128:2589::-;5242:18;1671:1:8;2260:7;;:19;;2252:63;;;;;-1:-1:-1;;;2252:63:8;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2252:63:8;;;;;;;;;;;;;;;1671:1;2390:7;:18;5298:6:9::1;5272:32:::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;:23:::1;::::0;:32;;5298:6;;5272:32;::::1;5298:6:::0;5272:32;;::::1;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;5272:32:9::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;5340:7;:14;5322:7;;:14;;:32;5314:76;;;::::0;;-1:-1:-1;;;5314:76:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;5422:18;:7;5430:1;5422:10;;;;;;;;;;;;;;-1:-1:-1::0;;;;;5422:16:9::1;;:18::i;:::-;:71;;5457:18;:7;5465:1;5457:10;;;;;;;:18;:35;;5491:1;5457:35;;;5478:7;;5486:1;5478:10;;;;;;;;;;;;;5457:35;5422:71;;;5443:7;;5451:1;5443:10;;;;;;;;;;;;;5422:71;5408:9;:86;5400:127;;;::::0;;-1:-1:-1;;;5400:127:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;5538:29;5584:7:::0;5570:29:::1;::::0;::::1;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;5570:29:9::1;;5538:61;;5614:6;5609:168;5630:12;:19;5626:1;:23;5609:168;;;5688:78;5731:18;:7;5739:1;5731:10;;;;;;;:18;:34;;5764:1;5731:34;;;5752:9;5731:34;5688:38;5720:4;5688:7;5696:1;5688:10;;;;;;;;;;;;;;-1:-1:-1::0;;;;;5688:23:9::1;;;:38;;;;:::i;:78::-;5670:12;5683:1;5670:15;;;;;;;;;::::0;;::::1;::::0;;;;;:96;5651:3:::1;;5609:168;;;;5787:19;5809:13;:11;:13::i;:::-;5787:35:::0;-1:-1:-1;5836:16:9;5832:648:::1;;5881:19;2481:4;5897:2;5881:15;:19::i;:::-;5868:32;;5914:33;5928:4;2481;5914:5;:33::i;:::-;6076:6;6071:120;6088:18:::0;;::::1;6071:120;;;6144:32;6153:10;6165:7;;6173:1;6165:10;;;;;;;;;;;;;6144:8;:32::i;:::-;6131:45:::0;-1:-1:-1;6108:3:9::1;;6071:120;;;;5832:648;;;-1:-1:-1::0;;6268:30:9::1;;6317:6;6312:158;6329:18:::0;;::::1;6312:158;;;6385:70;6394:10;6406:48;6438:12;6451:1;6438:15;;;;;;;;;;;;;;6406:27;6422:7;;6430:1;6422:10;;;;;;;;;;;;;6406:11;:15;;:27;;;;:::i;:48::-;6385:8;:70::i;:::-;6372:83:::0;-1:-1:-1;6349:3:9::1;;6312:158;;;;5832:648;6517:10:::0;6490:24:::1;6537:664;6554:18:::0;;::::1;6537:664;;;6614:1;6601:7;;6609:1;6601:10;;;;;;;;;;;;;:14;6593:52;;;::::0;;-1:-1:-1;;;6593:52:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;6659:14;6677:16:::0;;6676:125:::1;;6726:75;6789:11;6726:58;6782:1;6768:11;:15;6726:37;6746:16;6726:12;6739:1;6726:15;;;;;;;;;;;;;;:19;;:37;;;;:::i;:::-;:41:::0;::::1;:58::i;:75::-;6676:125;;;6697:7;;6705:1;6697:10;;;;;;;;;;;;;6676:125;6659:142;;6833:10;;6844:1;6833:13;;;;;;;;;;;;;6823:6;:23;;6815:68;;;::::0;;-1:-1:-1;;;6815:68:9;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;6898:46;6937:6;6898:7;6906:1;6898:10;;;;;;;;;;;;;;-1:-1:-1::0;;;;;6898:38:9::1;;;:46;;;;:::i;:::-;6962:15:::0;;6958:233:::1;;6997:17;7017:59;7060:12;7073:1;7060:15;;;;;;;;;;;;;;7017:38;7049:4;7017:7;7025:1;7017:10;;;;;;;:59;6997:79;;7107:69;7116:10;7128:47;7159:12;7172:1;7159:15;;;;;;;;;;;;;;7128:26;7144:9;7128:11;:15;;:26;;;;:::i;7107:69::-;7094:82;;6958:233;;-1:-1:-1::0;6574:3:9::1;;6537:664;;;-1:-1:-1::0;7215:15:9;;7211:343:::1;;7251:6;7246:298;7263:18:::0;;::::1;7246:298;;;7306:102;7350:12;7363:1;7350:15;;;;;;;;;;;;;;7367:27;7383:10;7367:11;:15;;:27;;;;:::i;:::-;7396:11;7306:25;:37;7332:7;7340:1;7332:10;;;;;;;;;;;;;;-1:-1:-1::0;;;;;7306:37:9::1;-1:-1:-1::0;;;;;7306:37:9::1;;;;;;;;;;;;:43;;:102;;;;;;:::i;:::-;7426:103;7471:12;7484:1;7471:15;;;;;;;;;;;;;;7488:27;7504:10;7488:11;:15;;:27;;;;:::i;:::-;7517:11;7426:26;:38;7453:7;7461:1;7453:10;;;;;;;7426:103;7283:3;;7246:298;;;;7211:343;7585:1;7572:10;:14;7564:58;;;::::0;;-1:-1:-1;;;7564:58:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;7632:29;7638:10;7650;7632:5;:29::i;:::-;7677:33;::::0;;;;;;;7687:10:::1;::::0;7677:33:::1;::::0;;;;;::::1;::::0;;::::1;-1:-1:-1::0;;1628:1:8;2563:7;:22;-1:-1:-1;5128:2589:9;;;-1:-1:-1;;;;;5128:2589:9:o;1983:240:1:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:1;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:1;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:1;;::::1;::::0;2172:6:::1;::::0;2151:38:::1;::::0;2172:6:::1;::::0;2151:38:::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:1::1;-1:-1:-1::0;;;;;2199:17:1;;;::::1;::::0;;;::::1;::::0;;1983:240::o;590:104:0:-;677:10;590:104;:::o;9359:340:4:-;-1:-1:-1;;;;;9460:19:4;;9452:68;;;;-1:-1:-1;;;9452:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9538:21:4;;9530:68;;;;-1:-1:-1;;;9530:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9609:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9660:32;;;;;;;;;;;;;;;;;9359:340;;;:::o;11716:387:9:-;-1:-1:-1;;;;;11861:12:9;;11838:7;11861:12;;;:7;:12;;;;;;;;:28;;;;-1:-1:-1;;;;;;11877:12:9;;;;;;:7;:12;;;;;;;;11861:28;:42;;;;;11900:3;-1:-1:-1;;;;;11893:10:9;:3;-1:-1:-1;;;;;11893:10:9;;;11861:42;:56;;;;;11916:1;11907:6;:10;11861:56;11857:240;;;11933:19;11955:50;11966:38;2567:4;11966:17;11977:5;:3;:5::i;:::-;11966:6;;:10;:17::i;:38::-;11955:6;;:10;:50::i;:::-;11933:72;-1:-1:-1;12026:60:9;12058:27;:10;11933:72;12058:14;:27::i;:::-;12026;:11;12042:10;12026:15;:27::i;:60::-;12019:67;;;11857:240;11716:387;;;;;;;:::o;7035:530:4:-;-1:-1:-1;;;;;7140:20:4;;7132:70;;;;-1:-1:-1;;;7132:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7220:23:4;;7212:71;;;;-1:-1:-1;;;7212:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7372:17:4;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7352:17:4;;;:9;:17;;;;;;;;;;;:91;;;;7476:20;;;;;;;:32;;7501:6;7476:24;:32::i;:::-;-1:-1:-1;;;;;7453:20:4;;;:9;:20;;;;;;;;;;;;:55;;;;7523:35;;;;;;;7453:20;;7523:35;;;;;;;;;;;;;7035:530;;;:::o;1746:187:3:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:3;;;1746:187::o;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;8524:410:4;-1:-1:-1;;;;;8607:21:4;;8599:67;;;;-1:-1:-1;;;8599:67:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8758:18:4;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8737:18:4;;:9;:18;;;;;;;;;;:89;8851:12;;:24;;8868:6;8851:16;:24::i;:::-;8836:12;:39;8890:37;;;;;;;;8916:1;;-1:-1:-1;;;;;8890:37:4;;;;;;;;;;;;8524:410;;:::o;434:228:11:-;510:7;533:12;539:5;533;:12::i;:::-;529:127;;;-1:-1:-1;;;;;;568:15:11;;;561:22;;529:127;621:5;-1:-1:-1;;;;;621:15:11;;637:7;621:24;;;;;;;;;;;;;-1:-1:-1;;;;;621:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;621:24:11;;-1:-1:-1;614:31:11;;2180:459:3;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:3;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3101:130;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;668:275:11:-;762:10;;758:179;;792:12;798:5;792;:12::i;:::-;788:139;;;824:19;;-1:-1:-1;;;;;824:11:11;;;:19;;;;;836:6;;824:19;;;;836:6;824:11;:19;;;;;;;;;;;;;;;;;;;;;788:139;;;882:30;-1:-1:-1;;;;;882:18:11;;901:2;905:6;882:18;:30::i;:::-;668:275;;;:::o;1321:134:3:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;971:199:9:-;1088:75;1092:4;1098:64;1156:5;1098:53;1138:12;1156:5;1148:1;1138:9;:12::i;:::-;1098:26;;;;;;;;;;;-1:-1:-1;;;;;1098:26:9;;;;-1:-1:-1;;;1098:26:9;;;;;;;;:35;;1129:3;;1098:26;;1112:11;1098:7;:26::i;:64::-;1088:3;:75::i;:::-;971:199;;;;:::o;317:111:11:-;-1:-1:-1;;;;;392:28:11;;;317:111::o;1176:380:9:-;1269:7;1288:18;1309:54;643:9;1332:30;1352:4;:9;;;1332:30;;:15;:19;;:30;;;;:::i;1309:54::-;1288:75;-1:-1:-1;1373:18:9;1394:28;643:9;1288:75;1394:16;:28::i;:::-;1373:49;-1:-1:-1;1439:110:9;643:9;1439:92;1494:27;:11;1510:10;1494:15;:27::i;:::-;1447:12;;1439:37;;-1:-1:-1;;;;;1439:21:9;1465:10;1439:25;:37::i;215:105:2:-;273:7;304:1;299;:6;;:14;;312:1;299:14;;;-1:-1:-1;308:1:2;;215:105;-1:-1:-1;215:105:2:o;391:104::-;449:7;479:1;475;:5;:13;;487:1;475:13;;949:510:11;1039:10;;1035:418;;1069:12;1075:5;1069;:12::i;:::-;1065:378;;;1122:6;1109:9;:19;;1101:58;;;;;-1:-1:-1;;;1101:58:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:6;1181:9;:18;1177:156;;;1272:10;:42;1292:21;:9;1306:6;1292:13;:21::i;:::-;1272:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1177:156;1065:378;;;1371:57;-1:-1:-1;;;;;1371:22:11;;1394:10;1414:4;1421:6;1371:22;:57::i;659:166:9:-;742:31;;-1:-1:-1;;;;;;742:31:9;-1:-1:-1;;;;;742:31:9;;;;783:35;-1:-1:-1;;;802:15:9;783:35;;;;;;659:166::o;831:134::-;931:26;;;;;;;;;;;-1:-1:-1;;;;;931:26:9;;;;-1:-1:-1;;;931:26:9;;;;;;;;921:37;;931:26;;;;945:11;931:7;:26::i;187:371:10:-;235:7;262:1;258;:5;254:298;;;291:1;326;322;318:5;;:9;341:89;352:1;348;:5;341:89;;;377:1;373:5;;414:1;409;405;401;:5;;;;;;:9;400:15;;;;;;396:19;;341:89;;;-1:-1:-1;450:1:10;-1:-1:-1;443:8:10;;254:298;472:6;;468:84;;-1:-1:-1;501:1:10;494:8;;468:84;-1:-1:-1;540:1:10;533:8;;7835:370:4;-1:-1:-1;;;;;7918:21:4;;7910:65;;;;;-1:-1:-1;;;7910:65:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:12;;:24;;8078:6;8061:16;:24::i;:::-;8046:12;:39;-1:-1:-1;;;;;8116:18:4;;:9;:18;;;;;;;;;;;:30;;8139:6;8116:22;:30::i;:::-;-1:-1:-1;;;;;8095:18:4;;:9;:18;;;;;;;;;;;:51;;;;8161:37;;;;;;;8095:18;;:9;;8161:37;;;;;;;;;;7835:370;;:::o;3713:272:3:-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:3:o;696:175:6:-;805:58;;;-1:-1:-1;;;;;805:58:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;805:58:6;-1:-1:-1;;;805:58:6;;;778:86;;798:5;;778:19;:86::i;877:203::-;1004:68;;;-1:-1:-1;;;;;1004:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1004:68:6;-1:-1:-1;;;1004:68:6;;;977:96;;997:5;;2959:751;3378:23;3404:69;3432:4;3404:69;;;;;;;;;;;;;;;;;3412:5;-1:-1:-1;;;;;3404:27:6;;;:69;;;;;:::i;:::-;3487:17;;3378:95;;-1:-1:-1;3487:21:6;3483:221;;3627:10;3616:30;;;;;;;;;;;;;;;-1:-1:-1;3616:30:6;3608:85;;;;-1:-1:-1;;;3608:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3770:194:7;3873:12;3904:53;3927:6;3935:4;3941:1;3944:12;5247;5279:18;5290:6;5279:10;:18::i;:::-;5271:60;;;;;-1:-1:-1;;;5271:60:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;5402:12;5416:23;5443:6;-1:-1:-1;;;;;5443:11:7;5463:8;5474:4;5443:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5443:36:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5401:78;;;;5493:7;5489:580;;;5523:10;-1:-1:-1;5516:17:7;;-1:-1:-1;5516:17:7;5489:580;5634:17;;:21;5630:429;;5892:10;5886:17;5952:15;5939:10;5935:2;5931:19;5924:44;5841:145;6024:20;;-1:-1:-1;;;6024:20:7;;;;;;;;;;;;;;;;;6031:12;;6024:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:610;778:4;1239:20;;1084:66;1278:23;;;;;;:42;;-1:-1:-1;;1305:15:7;;;1270:51;-1:-1:-1;;718:610:7:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2791000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BASE_SUPPLY()": "331",
								"DOMAIN_SEPARATOR()": "1132",
								"FEE_DENOMINATOR()": "309",
								"PERMIT_TYPEHASH()": "288",
								"REFERRAL_SHARE()": "309",
								"allowance(address,address)": "1294",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1221",
								"decayPeriod()": "266",
								"decimals()": "1125",
								"decreaseAllowance(address,uint256)": "infinite",
								"deposit(uint256[],uint256[])": "infinite",
								"factory()": "1082",
								"fee()": "infinite",
								"getBalanceForAddition(address)": "infinite",
								"getBalanceForRemoval(address)": "infinite",
								"getReturn(address,address,uint256)": "infinite",
								"getTokens()": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"initialize(address[])": "infinite",
								"isToken(address)": "1249",
								"name()": "infinite",
								"nonces(address)": "1257",
								"owner()": "1083",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"renounceOwnership()": "24290",
								"rescueFunds(address,uint256)": "infinite",
								"swap(address,address,uint256,uint256,address)": "infinite",
								"symbol()": "infinite",
								"tokens(uint256)": "2060",
								"totalSupply()": "1089",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"virtualBalancesForAddition(address)": "1264",
								"virtualBalancesForRemoval(address)": "1353",
								"volumes(address)": "1323",
								"withdraw(uint256,uint256[])": "infinite"
							},
							"internal": {
								"_getReturn(contract IERC20,contract IERC20,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C502D4E414D45"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "534F4D455448494E47"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 2013,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2114,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2107,
									"end": 2114,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2107,
									"end": 2123,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2133,
									"end": 2142,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2133,
									"end": 2147,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2133,
									"end": 2147,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2133,
									"end": 2147,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2145,
									"end": 2147,
									"name": "PUSH",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2133,
									"end": 2147,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2133,
									"end": 2147,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2133,
									"end": 2147,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2133,
									"end": 2147,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1743,
									"end": 1750,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1743,
									"end": 1765,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2133,
									"end": 2142,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 897,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 885,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 885,
									"end": 897,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 885,
									"end": 897,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 885,
									"end": 897,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 907,
									"end": 913,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 907,
									"end": 925,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 940,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 983,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 940,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 940,
									"end": 983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 940,
									"end": 983,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3259,
									"end": 3266,
									"name": "PUSH",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 3259,
									"end": 3289,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3259,
									"end": 3289,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3259,
									"end": 3289,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3278,
									"end": 3288,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 3259,
									"end": 3289,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3259,
									"end": 3289,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3259,
									"end": 3289,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3355,
									"end": 3364,
									"name": "CHAINID",
									"source": 9
								},
								{
									"begin": 3453,
									"end": 3548,
									"name": "PUSH",
									"source": 9,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 3582,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 3582,
									"end": 3586,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 3582,
									"end": 3588,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3582,
									"end": 3588,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 3582,
									"end": 3588,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3566,
									"end": 3590,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3566,
									"end": 3590,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3566,
									"end": 3590,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3566,
									"end": 3590,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3566,
									"end": 3590,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3566,
									"end": 3590,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3566,
									"end": 3590,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3628,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3608,
									"end": 3629,
									"name": "PUSH",
									"source": 9,
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3680,
									"end": 3684,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3425,
									"end": 3699,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3402,
									"end": 3709,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3402,
									"end": 3709,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3402,
									"end": 3709,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3402,
									"end": 3709,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3402,
									"end": 3709,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 3383,
									"end": 3399,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3383,
									"end": 3709,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 590,
									"end": 694,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 590,
									"end": 694,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 677,
									"end": 687,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 590,
									"end": 694,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 590,
									"end": 694,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2219,
									"end": 2300,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2219,
									"end": 2300,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2288,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2256,
									"end": 2269,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2256,
									"end": 2269,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2288,
									"end": 2293,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2288,
									"end": 2293,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2288,
									"end": 2293,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2219,
									"end": 2300,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2219,
									"end": 2300,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 12794,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c56a9d4f729c91522386bea105d15297ae47fa07b747c70d4233e30b7bd1e7be64736f6c634300060c0033",
									".code": [
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "C45A0155"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "DDCA3F43"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "E7FF42C9"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "F223885A"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "C45A0155"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "D505ACCF"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "D5BCB9B5"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "D73792A9"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "D7D3AAB5"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "AA6CA808"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "B1EC4C40"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "B21B5A21"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "BAF13A0A"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "A224CEE7"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "A457C2D7"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "39509351"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "6EDC2C09"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "6EDC2C09"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "78E3214F"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "7ECEBE00"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "39509351"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "48D67E1B"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "4F64B2BE"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "5915D806"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "5ED9156D"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "1E1401F8"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "1E1401F8"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "30ADF81F"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "3644E515"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "19F37361"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 12794,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "GT",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "GT",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "GT",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "GT",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2269,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2256,
											"end": 2269,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2300,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4342,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 4363,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4377,
											"end": 4384,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4386,
											"end": 4392,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4354,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4354,
											"end": 4393,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4354,
											"end": 4393,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4354,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4410,
											"end": 4414,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4421,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3353,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3341,
											"end": 3353,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3360,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2977,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5013,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 5043,
											"end": 5046,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5051,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5059,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 5083,
											"end": 5086,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 5061,
											"end": 5087,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5061,
											"end": 5087,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 5061,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5089,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 5110,
											"end": 5113,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5089,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 5089,
											"end": 5114,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5089,
											"end": 5114,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 5089,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5032,
											"end": 5115,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5032,
											"end": 5115,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 5032,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5025,
											"end": 5115,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4925,
											"end": 5122,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4987,
											"end": 4991,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 5013,
											"end": 5019,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5021,
											"end": 5030,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5032,
											"end": 5038,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 5003,
											"end": 5039,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5003,
											"end": 5039,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 5003,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 5066,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5066,
											"end": 5078,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5066,
											"end": 5078,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 5066,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5118,
											"end": 5124,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH data",
											"source": 4,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5091,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5100,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 5100,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5100,
											"end": 5112,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5100,
											"end": 5112,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 5100,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5113,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5080,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 5049,
											"end": 5170,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5049,
											"end": 5170,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 5049,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5187,
											"end": 5191,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5198,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2764,
											"end": 2830,
											"name": "PUSH",
											"source": 9,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2830,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3202,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5593,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5681,
											"end": 5685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5697,
											"end": 5780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 5706,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5706,
											"end": 5718,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5706,
											"end": 5718,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 5706,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5727,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5768,
											"end": 5778,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5740,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 5741,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5741,
											"end": 5753,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5741,
											"end": 5753,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 5741,
											"end": 5753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5754,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 5729,
											"end": 5779,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 643,
											"end": 652,
											"name": "PUSH",
											"source": 9,
											"value": "12C"
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4453,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7837,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7840,
											"end": 7853,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7840,
											"end": 7853,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 7840,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7818,
											"end": 7853,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7818,
											"end": 7853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7863,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 7869,
											"end": 7879,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7887,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7863,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 7863,
											"end": 7888,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7863,
											"end": 7888,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 7863,
											"end": 7888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7910,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 8489,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 7899,
											"end": 8489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7920,
											"end": 7926,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7920,
											"end": 7933,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 7933,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 7933,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 8489,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 8489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 7899,
											"end": 8489,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7969,
											"end": 7975,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7976,
											"end": 7977,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8014,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 7969,
											"end": 7978,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8041,
											"end": 8045,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 8014,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 8014,
											"end": 8047,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8014,
											"end": 8047,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 8014,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7993,
											"end": 8047,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8061,
											"end": 8074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8077,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 8104,
											"end": 8115,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8077,
											"end": 8099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 7993,
											"end": 8047,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8092,
											"end": 8098,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 8077,
											"end": 8091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 8077,
											"end": 8099,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8077,
											"end": 8099,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 8077,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8077,
											"end": 8103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8077,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 8077,
											"end": 8116,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8077,
											"end": 8116,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 8077,
											"end": 8116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8061,
											"end": 8116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8130,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8130,
											"end": 8147,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8130,
											"end": 8147,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8158,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8061,
											"end": 8116,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8130,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 8130,
											"end": 8166,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8130,
											"end": 8166,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 8130,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8193,
											"end": 8203,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8193,
											"end": 8210,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8189,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8210,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8210,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8236,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 8188,
											"end": 8236,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8233,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8234,
											"end": 8235,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8219,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8236,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8236,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8236,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 8188,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "PUSH",
											"source": 9,
											"value": "4D6F6F6E69737761703A20726573756C74206973206E6F7420656E6F75676800"
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 8180,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8287,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 8327,
											"end": 8337,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8339,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 8339,
											"end": 8350,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8355,
											"end": 8361,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 8339,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8339,
											"end": 8362,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8339,
											"end": 8362,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 8339,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8287,
											"end": 8320,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8287,
											"end": 8320,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8287,
											"end": 8320,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8287,
											"end": 8320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8287,
											"end": 8320,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8287,
											"end": 8320,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8287,
											"end": 8313,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 8287,
											"end": 8320,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8287,
											"end": 8320,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8287,
											"end": 8320,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8287,
											"end": 8320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8287,
											"end": 8320,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8287,
											"end": 8320,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8287,
											"end": 8376,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8364,
											"end": 8375,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8287,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 8287,
											"end": 8376,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8287,
											"end": 8376,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 8287,
											"end": 8376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 8429,
											"end": 8439,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8441,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 8441,
											"end": 8452,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8457,
											"end": 8463,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 8441,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8441,
											"end": 8464,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8441,
											"end": 8464,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 8441,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8415,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8478,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8477,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 8390,
											"end": 8478,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8390,
											"end": 8478,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 8390,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7935,
											"end": 7938,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7935,
											"end": 7938,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 8489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 7899,
											"end": 8489,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 8489,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 7899,
											"end": 8489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8524,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8524,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "PUSH",
											"source": 9,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8533,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 8540,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 1280,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1758,
											"end": 1798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1798,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1758,
											"end": 1798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1798,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1814,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1808,
											"end": 1827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1827,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1808,
											"end": 1827,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1827,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1834,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 1280,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11260,
											"end": 11266,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 11260,
											"end": 11273,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11218,
											"end": 11243,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11218,
											"end": 11243,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11218,
											"end": 11274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11218,
											"end": 11274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11284,
											"end": 11403,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 11284,
											"end": 11403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11305,
											"end": 11313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11305,
											"end": 11320,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11301,
											"end": 11302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11301,
											"end": 11320,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11284,
											"end": 11403,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11284,
											"end": 11403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 11284,
											"end": 11403,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 11386,
											"end": 11390,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11361,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 11362,
											"end": 11363,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 11355,
											"end": 11392,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11355,
											"end": 11392,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 11355,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11350,
											"end": 11351,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11322,
											"end": 11325,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11322,
											"end": 11325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11284,
											"end": 11403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 11284,
											"end": 11403,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11284,
											"end": 11403,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 11284,
											"end": 11403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11413,
											"end": 11450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11413,
											"end": 11430,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11413,
											"end": 11430,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11441,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11443,
											"end": 11449,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11413,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 11413,
											"end": 11450,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11413,
											"end": 11450,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 11413,
											"end": 11450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11466,
											"end": 11472,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11461,
											"end": 11618,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11461,
											"end": 11618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11482,
											"end": 11490,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11482,
											"end": 11497,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11478,
											"end": 11479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11478,
											"end": 11497,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11618,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11461,
											"end": 11618,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11577,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11578,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 11557,
											"end": 11561,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11532,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 11533,
											"end": 11534,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11535,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11535,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11535,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11535,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 11526,
											"end": 11535,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11535,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11563,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 11526,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11578,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11578,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "135BDBDB9A5CDDD85C0E881858D8D95CDCC819195B9A5959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 11518,
											"end": 11607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11499,
											"end": 11502,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11499,
											"end": 11502,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11461,
											"end": 11618,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11618,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11461,
											"end": 11618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2481,
											"end": 2485,
											"name": "PUSH",
											"source": 9,
											"value": "3E8"
										},
										{
											"begin": 11635,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 11653,
											"end": 11657,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 11635,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 11635,
											"end": 11659,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11635,
											"end": 11659,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 11635,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11635,
											"end": 11674,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11635,
											"end": 11674,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "135BDBDB9A5CDDD85C0E881858D8D95CDCC819195B9A5959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 11627,
											"end": 11703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11125,
											"end": 11710,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1143,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2413,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2465,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2452,
											"end": 2465,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3810,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3817,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3821,
											"end": 3822,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "PUSH",
											"source": 9,
											"value": "4D6F6F6E69737761703A206F6E6C79203220746F6B656E7320616C6C6F776564"
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 3796,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3924,
											"end": 3954,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3954,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3924,
											"end": 3954,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3953,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3954,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3954,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3994,
											"end": 4000,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4153,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 3989,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4023,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4006,
											"end": 4007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4153,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 3989,
											"end": 4153,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4060,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4067,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4052,
											"end": 4071,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "PUSH",
											"source": 9,
											"value": "4D6F6F6E69737761703A206475706C696361746520746F6B656E730000000000"
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 4044,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4142,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4117,
											"end": 4124,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4131,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4133,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4142,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4025,
											"end": 4028,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 3989,
											"end": 4153,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4153,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 3989,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 4159,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 6295,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6388,
											"end": 6392,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6404,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 6413,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 6413,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 6413,
											"end": 6425,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6413,
											"end": 6425,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 6413,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6427,
											"end": 6434,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH data",
											"source": 4,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6447,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6448,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 6448,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 6448,
											"end": 6460,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6448,
											"end": 6460,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 6448,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6461,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6436,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 6436,
											"end": 6532,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3738,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3824,
											"end": 3828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3850,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 3850,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3850,
											"end": 3862,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 3850,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 3873,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 3840,
											"end": 3882,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4329,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4342,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3028,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2404,
											"end": 2406,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2406,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2481,
											"end": 2485,
											"name": "PUSH",
											"source": 9,
											"value": "3E8"
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2485,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2861,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12256,
											"end": 12271,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 12244,
											"end": 12252,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12244,
											"end": 12271,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12244,
											"end": 12271,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 12236,
											"end": 12283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12312,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12434,
											"end": 12450,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12434,
											"end": 12450,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2764,
											"end": 2830,
											"name": "PUSH",
											"source": 9,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12468,
											"end": 12547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12468,
											"end": 12547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12468,
											"end": 12547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12468,
											"end": 12547,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12468,
											"end": 12547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12468,
											"end": 12547,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "PUSH",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "PUSH",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "PUSH",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12561,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12571,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12571,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12571,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12571,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12571,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12571,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12571,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12571,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "PUSH",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "PUSH",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "PUSH",
											"source": 9,
											"value": "1A2"
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "PUSH",
											"source": 9,
											"value": "1C2"
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12571,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "PUSH",
											"source": 9,
											"value": "1E2"
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12652,
											"end": 12682,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12682,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12682,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12682,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12682,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12682,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 12652,
											"end": 12712,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12706,
											"end": 12712,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12686,
											"end": 12712,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12686,
											"end": 12702,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12686,
											"end": 12712,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12686,
											"end": 12712,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12712,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 12652,
											"end": 12712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "494E56414C49445F5349474E4154555245"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 12644,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12753,
											"end": 12785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 12762,
											"end": 12768,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 12777,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 12779,
											"end": 12784,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 12753,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 12753,
											"end": 12785,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12753,
											"end": 12785,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 12753,
											"end": 12785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12792,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8675,
											"end": 8689,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8723,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8723,
											"end": 8732,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8723,
											"end": 8732,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8723,
											"end": 8732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 8723,
											"end": 8734,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8723,
											"end": 8734,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 8723,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8723,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 8723,
											"end": 8747,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8723,
											"end": 8747,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8723,
											"end": 8747,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 8723,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8737,
											"end": 8743,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8723,
											"end": 8747,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8723,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8709,
											"end": 8718,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8709,
											"end": 8748,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "PUSH",
											"source": 9,
											"value": "4D6F6F6E69737761703A2077726F6E672076616C756520757361676500000000"
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8701,
											"end": 8781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8792,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8792,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 8792,
											"end": 8816,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8792,
											"end": 8816,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8792,
											"end": 8816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8847,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 8883,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8883,
											"end": 8886,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 8883,
											"end": 8894,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8883,
											"end": 8894,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8883,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8883,
											"end": 8910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 8883,
											"end": 8910,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 8910,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8883,
											"end": 8910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 8883,
											"end": 8910,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8883,
											"end": 8910,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 8883,
											"end": 8910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8897,
											"end": 8906,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8883,
											"end": 8910,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 8883,
											"end": 8910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8847,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8847,
											"end": 8863,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 8847,
											"end": 8863,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8872,
											"end": 8876,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 8847,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 8847,
											"end": 8878,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8847,
											"end": 8878,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 8847,
											"end": 8878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8847,
											"end": 8882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8847,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8847,
											"end": 8911,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8847,
											"end": 8911,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 8847,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8930,
											"end": 8961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8930,
											"end": 8946,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 8930,
											"end": 8946,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8955,
											"end": 8959,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 8930,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 8930,
											"end": 8961,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8930,
											"end": 8961,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 8930,
											"end": 8961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9161,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9161,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9071,
											"end": 9097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9135,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9161,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9161,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9071,
											"end": 9097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9100,
											"end": 9177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 9100,
											"end": 9177,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 9109,
											"end": 9162,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 9109,
											"end": 9162,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9109,
											"end": 9162,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 9109,
											"end": 9162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9176,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9176,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9100,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 9100,
											"end": 9177,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9100,
											"end": 9177,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 9100,
											"end": 9177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9275,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9263,
											"end": 9275,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9275,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9275,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9187,
											"end": 9212,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9249,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9071,
											"end": 9177,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9071,
											"end": 9177,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9215,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 9215,
											"end": 9291,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 9224,
											"end": 9276,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 9224,
											"end": 9276,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9224,
											"end": 9276,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 9224,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9278,
											"end": 9286,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9278,
											"end": 9290,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9278,
											"end": 9290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9278,
											"end": 9290,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9215,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 9215,
											"end": 9291,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9215,
											"end": 9291,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 9215,
											"end": 9291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9187,
											"end": 9291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9302,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9302,
											"end": 9333,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9333,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9334,
											"end": 9340,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 9302,
											"end": 9341,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9302,
											"end": 9341,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 9302,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9419,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9419,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9351,
											"end": 9368,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9368,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 9371,
											"end": 9420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9371,
											"end": 9387,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9387,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9396,
											"end": 9400,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 9371,
											"end": 9402,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9371,
											"end": 9420,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 9371,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9351,
											"end": 9420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9351,
											"end": 9420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9439,
											"end": 9509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9450,
											"end": 9453,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9455,
											"end": 9458,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9469,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9491,
											"end": 9508,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9439,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 9439,
											"end": 9509,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9439,
											"end": 9509,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9439,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9430,
											"end": 9509,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9430,
											"end": 9509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9536,
											"end": 9537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9527,
											"end": 9533,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9527,
											"end": 9560,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9527,
											"end": 9560,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9527,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 9527,
											"end": 9560,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9527,
											"end": 9560,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9551,
											"end": 9560,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9541,
											"end": 9547,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9541,
											"end": 9560,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9541,
											"end": 9560,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9527,
											"end": 9560,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 9527,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "PUSH",
											"source": 9,
											"value": "4D6F6F6E69737761703A2072657475726E206973206E6F7420656E6F75676800"
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 9519,
											"end": 9596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9606,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9622,
											"end": 9632,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9634,
											"end": 9640,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 9606,
											"end": 9641,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9606,
											"end": 9641,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 9606,
											"end": 9641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9772,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9772,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9738,
											"end": 9772,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9738,
											"end": 9772,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9734,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 9734,
											"end": 9869,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 9824,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 9824,
											"end": 9842,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9847,
											"end": 9856,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9824,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 9824,
											"end": 9857,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9824,
											"end": 9857,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 9824,
											"end": 9857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9788,
											"end": 9819,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9819,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9819,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9819,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9819,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9814,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 9788,
											"end": 9819,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9788,
											"end": 9819,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9819,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9788,
											"end": 9819,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9819,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9819,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 9788,
											"end": 9858,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9788,
											"end": 9858,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 9788,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9903,
											"end": 9911,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9903,
											"end": 9915,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9903,
											"end": 9915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9903,
											"end": 9915,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9882,
											"end": 9899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9882,
											"end": 9915,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 10007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 9878,
											"end": 10007,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 9966,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 9966,
											"end": 9983,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9988,
											"end": 9994,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9966,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 9966,
											"end": 9995,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9966,
											"end": 9995,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 9966,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9931,
											"end": 9961,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9961,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9961,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9931,
											"end": 9961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9961,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9961,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9956,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 9931,
											"end": 9961,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9931,
											"end": 9961,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9961,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9931,
											"end": 9961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9961,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 9931,
											"end": 9996,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9931,
											"end": 9996,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 9931,
											"end": 9996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10116,
											"end": 10128,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10116,
											"end": 10128,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10116,
											"end": 10128,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10078,
											"end": 10103,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10078,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 10078,
											"end": 10129,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10078,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 10078,
											"end": 10129,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10078,
											"end": 10129,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 10078,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10178,
											"end": 10190,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10178,
											"end": 10190,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10178,
											"end": 10190,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10178,
											"end": 10190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10178,
											"end": 10190,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10139,
											"end": 10170,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10170,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10170,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10139,
											"end": 10170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10170,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10165,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 10139,
											"end": 10170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10170,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10170,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10170,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10139,
											"end": 10170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10170,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10170,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 10139,
											"end": 10191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 10139,
											"end": 10191,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10139,
											"end": 10191,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 10139,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10206,
											"end": 10228,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10206,
											"end": 10228,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10206,
											"end": 10228,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10202,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 10202,
											"end": 10833,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10365,
											"end": 10377,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10365,
											"end": 10377,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10277,
											"end": 10281,
											"name": "PUSH",
											"source": 9,
											"value": "C097CE7BC90715B34B9F1000000000"
										},
										{
											"begin": 10277,
											"end": 10281,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10313,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 10313,
											"end": 10378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10313,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 10332,
											"end": 10359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 10365,
											"end": 10377,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10349,
											"end": 10358,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10332,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 10332,
											"end": 10359,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10332,
											"end": 10359,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 10332,
											"end": 10359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10313,
											"end": 10327,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10313,
											"end": 10327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10313,
											"end": 10331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 10313,
											"end": 10360,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10313,
											"end": 10378,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 10313,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10458,
											"end": 10470,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10458,
											"end": 10470,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10458,
											"end": 10470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10458,
											"end": 10470,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10296,
											"end": 10378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10296,
											"end": 10378,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10409,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 10409,
											"end": 10471,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10409,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 10428,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 10458,
											"end": 10470,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10445,
											"end": 10451,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 10428,
											"end": 10444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 10428,
											"end": 10452,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10409,
											"end": 10471,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 10409,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10392,
											"end": 10471,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10392,
											"end": 10471,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10510,
											"name": "PUSH",
											"source": 9,
											"value": "C097CE7BC90715B34B9F1000000000"
										},
										{
											"begin": 10489,
											"end": 10503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10489,
											"end": 10510,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10485,
											"end": 10823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10485,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 10485,
											"end": 10823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10593,
											"end": 10614,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10617,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 2404,
											"end": 2406,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 10617,
											"end": 10677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 10672,
											"end": 10676,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10617,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 10653,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 10653,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10653,
											"end": 10666,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10653,
											"end": 10666,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 10653,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10617,
											"end": 10648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 10643,
											"end": 10647,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10617,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 10617,
											"end": 10631,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 10617,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 10617,
											"end": 10638,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 10648,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 10617,
											"end": 10648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 10617,
											"end": 10667,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 10697,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 10617,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10593,
											"end": 10697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10719,
											"end": 10736,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10719,
											"end": 10736,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10715,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 10715,
											"end": 10809,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10760,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 10766,
											"end": 10774,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 10776,
											"end": 10789,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10760,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 10760,
											"end": 10790,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10760,
											"end": 10790,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 10760,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10485,
											"end": 10823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10485,
											"end": 10823,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 10485,
											"end": 10823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10202,
											"end": 10833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10202,
											"end": 10833,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 10202,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10890,
											"end": 10893,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10876,
											"end": 10879,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 10866,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "PUSH",
											"source": 9,
											"value": "86C49B5D8577DA08444947F1427D23EF191CFABF2C0788F93324D79E926A9302"
										},
										{
											"begin": 10896,
											"end": 10905,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10907,
											"end": 10913,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 10915,
											"end": 10923,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 10915,
											"end": 10927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10915,
											"end": 10927,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10915,
											"end": 10927,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10929,
											"end": 10937,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 10929,
											"end": 10941,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10929,
											"end": 10941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10929,
											"end": 10941,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 10943,
											"end": 10954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10967,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11020,
											"end": 11032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11032,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11032,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11020,
											"end": 11032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11027,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 11020,
											"end": 11032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11020,
											"end": 11032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11032,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11020,
											"end": 11032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11032,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "SWAP13",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "SWAP11",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11112,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11020,
											"end": 11064,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8546,
											"end": 11119,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2567,
											"end": 2571,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4524,
											"end": 4531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4524,
											"end": 4531,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4561,
											"end": 4579,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4579,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4592,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 4561,
											"end": 4594,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4561,
											"end": 4594,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 4561,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4543,
											"end": 4594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4543,
											"end": 4594,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4611,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 4611,
											"end": 4680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 4620,
											"end": 4670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4543,
											"end": 4594,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4620,
											"end": 4670,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4620,
											"end": 4670,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 4620,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4679,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 4611,
											"end": 4680,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4611,
											"end": 4680,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 4611,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4604,
											"end": 4680,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4459,
											"end": 4687,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4094,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 4117,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4233,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4226,
											"end": 4233,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DDCA3F43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4200,
											"end": 4207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4207,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4226,
											"end": 4233,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4233,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "PUSH",
											"source": 9,
											"value": "DDCA3F43"
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4233,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4246,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 4693,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4757,
											"end": 4764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 4764,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4825,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 4794,
											"end": 4827,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4794,
											"end": 4827,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 4794,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4878,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4776,
											"end": 4827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4776,
											"end": 4827,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4844,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 4844,
											"end": 4912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 4853,
											"end": 4902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4776,
											"end": 4827,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4853,
											"end": 4902,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4853,
											"end": 4902,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 4853,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4844,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 4844,
											"end": 4912,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5298,
											"end": 5304,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5295,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5272,
											"end": 5295,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5347,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5354,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5329,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5329,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5354,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "PUSH",
											"source": 9,
											"value": "4D6F6F6E69737761703A2077726F6E6720616D6F756E7473206C656E67746800"
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 5314,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 5422,
											"end": 5429,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5422,
											"end": 5438,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 5422,
											"end": 5493,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 5457,
											"end": 5464,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5466,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5457,
											"end": 5467,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5457,
											"end": 5467,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5457,
											"end": 5467,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5457,
											"end": 5467,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5457,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 5457,
											"end": 5467,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5457,
											"end": 5467,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5457,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 5457,
											"end": 5492,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5492,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 5457,
											"end": 5492,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5457,
											"end": 5492,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 5457,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5485,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5485,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5487,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5457,
											"end": 5492,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 5457,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 5422,
											"end": 5493,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5493,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 5422,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5450,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5450,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5452,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5493,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 5422,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5417,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5494,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "PUSH",
											"source": 9,
											"value": "4D6F6F6E69737761703A2077726F6E672076616C756520757361676500000000"
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 5400,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5538,
											"end": 5567,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5584,
											"end": 5591,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5538,
											"end": 5599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5538,
											"end": 5599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5620,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5609,
											"end": 5777,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 5609,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5630,
											"end": 5642,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5630,
											"end": 5649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5627,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5609,
											"end": 5777,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5609,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 5609,
											"end": 5777,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 5731,
											"end": 5738,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5739,
											"end": 5740,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5741,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 5731,
											"end": 5741,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5741,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 5720,
											"end": 5724,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5695,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5696,
											"end": 5697,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5688,
											"end": 5711,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 5688,
											"end": 5711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5726,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5726,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5726,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5688,
											"end": 5726,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5726,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5688,
											"end": 5766,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 5688,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5682,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5651,
											"end": 5654,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5651,
											"end": 5654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5609,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 5609,
											"end": 5777,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5609,
											"end": 5777,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 5609,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5609,
											"end": 5777,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5809,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 5809,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5809,
											"end": 5822,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5809,
											"end": 5822,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 5809,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5787,
											"end": 5822,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5836,
											"end": 5852,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 5832,
											"end": 6480,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5881,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 2481,
											"end": 2485,
											"name": "PUSH",
											"source": 9,
											"value": "3E8"
										},
										{
											"begin": 5897,
											"end": 5899,
											"name": "PUSH",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 5881,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 5881,
											"end": 5900,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5881,
											"end": 5900,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 5881,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5900,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5914,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 5928,
											"end": 5932,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2481,
											"end": 2485,
											"name": "PUSH",
											"source": 9,
											"value": "3E8"
										},
										{
											"begin": 5914,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 5914,
											"end": 5947,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5914,
											"end": 5947,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 5914,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6191,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 6071,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6088,
											"end": 6106,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6088,
											"end": 6106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6088,
											"end": 6106,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6191,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 6071,
											"end": 6191,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6144,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 6153,
											"end": 6163,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6172,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6172,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6174,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6144,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 6144,
											"end": 6176,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6144,
											"end": 6176,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 6144,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6131,
											"end": 6176,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6108,
											"end": 6111,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6108,
											"end": 6111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 6071,
											"end": 6191,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6191,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 6071,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 5832,
											"end": 6480,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 6480,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 5832,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6268,
											"end": 6298,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6268,
											"end": 6298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6323,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6470,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 6312,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6470,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 6312,
											"end": 6470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6385,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 6394,
											"end": 6404,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 6438,
											"end": 6450,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6451,
											"end": 6452,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 6422,
											"end": 6429,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6429,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6431,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6432,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6417,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 6406,
											"end": 6421,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6433,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6433,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6433,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6406,
											"end": 6454,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 6406,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6385,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 6385,
											"end": 6455,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6385,
											"end": 6455,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 6385,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6455,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6349,
											"end": 6352,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6349,
											"end": 6352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 6312,
											"end": 6470,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6470,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 6312,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 6480,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 5832,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6517,
											"end": 6527,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6537,
											"end": 7201,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 6537,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6554,
											"end": 6572,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6554,
											"end": 6572,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6554,
											"end": 6572,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6537,
											"end": 7201,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6537,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 6537,
											"end": 7201,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6615,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6601,
											"end": 6608,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6608,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6609,
											"end": 6610,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6611,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6615,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "PUSH",
											"source": 9,
											"value": "4D6F6F6E69737761703A20616D6F756E74206973207A65726F00000000000000"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6659,
											"end": 6673,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6677,
											"end": 6693,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6677,
											"end": 6693,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 6676,
											"end": 6801,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 6789,
											"end": 6800,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 6782,
											"end": 6783,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6768,
											"end": 6779,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6768,
											"end": 6783,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 6746,
											"end": 6762,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6738,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6739,
											"end": 6740,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 6726,
											"end": 6745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6763,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6763,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6726,
											"end": 6763,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6763,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6726,
											"end": 6763,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 6726,
											"end": 6763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6726,
											"end": 6784,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6726,
											"end": 6801,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 6726,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 6676,
											"end": 6801,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6801,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 6676,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6704,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6704,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6705,
											"end": 6706,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6707,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6801,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 6676,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6659,
											"end": 6801,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6659,
											"end": 6801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6843,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6843,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6844,
											"end": 6845,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6823,
											"end": 6829,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6823,
											"end": 6846,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6823,
											"end": 6846,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "PUSH",
											"source": 9,
											"value": "4D6F6F6E69737761703A206D696E416D6F756E74206E6F742072656163686564"
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 6815,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 6937,
											"end": 6943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6905,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6906,
											"end": 6907,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6898,
											"end": 6936,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 6898,
											"end": 6936,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6944,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6944,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6898,
											"end": 6944,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6944,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6898,
											"end": 6944,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 6898,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6962,
											"end": 6977,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6962,
											"end": 6977,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 6958,
											"end": 7191,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7014,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 7060,
											"end": 7072,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7073,
											"end": 7074,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 7049,
											"end": 7053,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7024,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7027,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7027,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7027,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7027,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 7017,
											"end": 7027,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7027,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7076,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 7017,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7107,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 7116,
											"end": 7126,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 7173,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 7144,
											"end": 7153,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7139,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 7128,
											"end": 7143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7154,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7154,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7154,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7128,
											"end": 7154,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7154,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7107,
											"end": 7176,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 7107,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7094,
											"end": 7176,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 7094,
											"end": 7176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 7191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 7191,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 6958,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6574,
											"end": 6577,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6574,
											"end": 6577,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6537,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 6537,
											"end": 7201,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6537,
											"end": 7201,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 6537,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7215,
											"end": 7230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 7211,
											"end": 7554,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7251,
											"end": 7257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7544,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 7246,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7263,
											"end": 7281,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7263,
											"end": 7281,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7263,
											"end": 7281,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7246,
											"end": 7544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7246,
											"end": 7544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 7246,
											"end": 7544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 7350,
											"end": 7362,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7363,
											"end": 7364,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 7383,
											"end": 7393,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7378,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 7367,
											"end": 7382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7394,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7394,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7367,
											"end": 7394,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7394,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7367,
											"end": 7394,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 7367,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7396,
											"end": 7407,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7331,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7332,
											"end": 7339,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 7340,
											"end": 7341,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7342,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 7306,
											"end": 7349,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7408,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7408,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7408,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7408,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7306,
											"end": 7408,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7408,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7306,
											"end": 7408,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 7306,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7426,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 7471,
											"end": 7483,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7484,
											"end": 7485,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7486,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7488,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 7504,
											"end": 7514,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7488,
											"end": 7499,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7488,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 7488,
											"end": 7503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7488,
											"end": 7515,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7488,
											"end": 7515,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7488,
											"end": 7515,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7488,
											"end": 7515,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7488,
											"end": 7515,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7488,
											"end": 7515,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 7488,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7517,
											"end": 7528,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7426,
											"end": 7452,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 7426,
											"end": 7464,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7460,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 7461,
											"end": 7462,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7453,
											"end": 7463,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7453,
											"end": 7463,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7453,
											"end": 7463,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7453,
											"end": 7463,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7453,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 7453,
											"end": 7463,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7453,
											"end": 7463,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 7426,
											"end": 7529,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 7426,
											"end": 7529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7283,
											"end": 7286,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7283,
											"end": 7286,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7246,
											"end": 7544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 7246,
											"end": 7544,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7246,
											"end": 7544,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 7246,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7246,
											"end": 7544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7554,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 7211,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7582,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7572,
											"end": 7586,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "4D6F6F6E69737761703A20726573756C74206973206E6F7420656E6F75676800"
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 7564,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 7638,
											"end": 7648,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7650,
											"end": 7660,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 7632,
											"end": 7661,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7632,
											"end": 7661,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 7632,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7687,
											"end": 7697,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7687,
											"end": 7697,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "PUSH",
											"source": 9,
											"value": "2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4"
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7710,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5128,
											"end": 7717,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 1280,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 1262,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2172,
											"end": 2178,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2151,
											"end": 2189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2189,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2189,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2178,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2151,
											"end": 2189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2189,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2205,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2223,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 677,
											"end": 687,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 590,
											"end": 694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9359,
											"end": 9699,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 9359,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9460,
											"end": 9479,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9460,
											"end": 9479,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "498"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH data",
											"source": 4,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "tag",
											"source": 4,
											"value": "498"
										},
										{
											"begin": 9452,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9538,
											"end": 9559,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9538,
											"end": 9559,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "499"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH data",
											"source": 4,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "tag",
											"source": 4,
											"value": "499"
										},
										{
											"begin": 9530,
											"end": 9598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9620,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9645,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9645,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9699,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11716,
											"end": 12103,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11716,
											"end": 12103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11838,
											"end": 11845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11868,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11889,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 11861,
											"end": 11889,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11884,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11877,
											"end": 11889,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11889,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 11861,
											"end": 11889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11903,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11903,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 11861,
											"end": 11903,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11903,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11900,
											"end": 11903,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11893,
											"end": 11903,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11893,
											"end": 11896,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11893,
											"end": 11903,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11893,
											"end": 11903,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11893,
											"end": 11903,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11903,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 11861,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11917,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11917,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 11861,
											"end": 11917,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11916,
											"end": 11917,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11907,
											"end": 11913,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11907,
											"end": 11917,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11861,
											"end": 11917,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 11861,
											"end": 11917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11857,
											"end": 12097,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11857,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 11857,
											"end": 12097,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 11952,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 11966,
											"end": 12004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 2567,
											"end": 2571,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11966,
											"end": 11983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 11977,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 11977,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 11977,
											"end": 11982,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11977,
											"end": 11982,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 11977,
											"end": 11982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11966,
											"end": 11972,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 11966,
											"end": 11972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11966,
											"end": 11976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 11966,
											"end": 11983,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11966,
											"end": 12004,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 11966,
											"end": 12004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11955,
											"end": 11961,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11955,
											"end": 11961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11955,
											"end": 11965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 11955,
											"end": 12005,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11955,
											"end": 12005,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 11955,
											"end": 12005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 12005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12026,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 12058,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 12058,
											"end": 12068,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 12005,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12058,
											"end": 12072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 12058,
											"end": 12085,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12058,
											"end": 12085,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 12058,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12026,
											"end": 12053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 12026,
											"end": 12037,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12052,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12026,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 12026,
											"end": 12053,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12026,
											"end": 12086,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 12026,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12019,
											"end": 12086,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12019,
											"end": 12086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12019,
											"end": 12086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11857,
											"end": 12097,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 11857,
											"end": 12097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 12103,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 12103,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 12103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 12103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 12103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 12103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 12103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 12103,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7035,
											"end": 7565,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 7035,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7160,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7140,
											"end": 7160,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "513"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH data",
											"source": 4,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "tag",
											"source": 4,
											"value": "513"
										},
										{
											"begin": 7132,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7220,
											"end": 7243,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7243,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "514"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH data",
											"source": 4,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "tag",
											"source": 4,
											"value": "514"
										},
										{
											"begin": 7212,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "515"
										},
										{
											"begin": 7315,
											"end": 7321,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7323,
											"end": 7332,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7334,
											"end": 7340,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "554"
										},
										{
											"begin": 7294,
											"end": 7341,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7294,
											"end": 7341,
											"name": "tag",
											"source": 4,
											"value": "515"
										},
										{
											"begin": 7294,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "517"
										},
										{
											"begin": 7394,
											"end": 7400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH data",
											"source": 4,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "tag",
											"source": 4,
											"value": "517"
										},
										{
											"begin": 7372,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7361,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7443,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7443,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7443,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "518"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7501,
											"end": 7507,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 4,
											"value": "518"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7508,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7508,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7508,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7523,
											"end": 7558,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7565,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "520"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 3,
											"value": "521"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "523"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "521"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 3,
											"value": "523"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "524"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 3,
											"value": "524"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 3,
											"value": "520"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 932,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 963,
											"end": 968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 963,
											"end": 968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 986,
											"end": 992,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8524,
											"end": 8934,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 8524,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8607,
											"end": 8628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8607,
											"end": 8628,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "528"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "PUSH data",
											"source": 4,
											"value": "B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "tag",
											"source": 4,
											"value": "528"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8677,
											"end": 8726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "529"
										},
										{
											"begin": 8698,
											"end": 8705,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8715,
											"end": 8716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8719,
											"end": 8725,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8677,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "554"
										},
										{
											"begin": 8677,
											"end": 8726,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8677,
											"end": 8726,
											"name": "tag",
											"source": 4,
											"value": "529"
										},
										{
											"begin": 8677,
											"end": 8726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "530"
										},
										{
											"begin": 8781,
											"end": 8787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "PUSH data",
											"source": 4,
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "tag",
											"source": 4,
											"value": "530"
										},
										{
											"begin": 8758,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8746,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8826,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8851,
											"end": 8863,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8851,
											"end": 8863,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8851,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "531"
										},
										{
											"begin": 8851,
											"end": 8875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8868,
											"end": 8874,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8851,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 8851,
											"end": 8875,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8851,
											"end": 8875,
											"name": "tag",
											"source": 4,
											"value": "531"
										},
										{
											"begin": 8851,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8836,
											"end": 8848,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8836,
											"end": 8875,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8927,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8524,
											"end": 8934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8524,
											"end": 8934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8524,
											"end": 8934,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 662,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 434,
											"end": 662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 510,
											"end": 517,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 533,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 533,
											"end": 545,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 533,
											"end": 545,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 533,
											"end": 545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 529,
											"end": 656,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 529,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 529,
											"end": 656,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 568,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 568,
											"end": 583,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 568,
											"end": 583,
											"name": "BALANCE",
											"source": 11
										},
										{
											"begin": 561,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 561,
											"end": 583,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 529,
											"end": 656,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 529,
											"end": 656,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 621,
											"end": 626,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 621,
											"end": 636,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 621,
											"end": 636,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 637,
											"end": 644,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 621,
											"end": 645,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "tag",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "tag",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 621,
											"end": 645,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 621,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 614,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 614,
											"end": 645,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2485,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "541"
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2508,
											"end": 2509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "tag",
											"source": 3,
											"value": "541"
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2547,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2546,
											"end": 2547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2543,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "542"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "tag",
											"source": 3,
											"value": "542"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2575,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH data",
											"source": 3,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3166,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "546"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 668,
											"end": 943,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 668,
											"end": 943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 762,
											"end": 772,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 762,
											"end": 772,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 758,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 758,
											"end": 937,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 792,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 792,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 792,
											"end": 804,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 804,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 792,
											"end": 804,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 788,
											"end": 927,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 788,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 788,
											"end": 927,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 843,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 824,
											"end": 835,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 824,
											"end": 835,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 824,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "PUSH",
											"source": 11,
											"value": "8FC"
										},
										{
											"begin": 824,
											"end": 843,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 836,
											"end": 842,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 836,
											"end": 842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 836,
											"end": 842,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 824,
											"end": 835,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 824,
											"end": 843,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 843,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 843,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "tag",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 824,
											"end": 843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 824,
											"end": 843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 788,
											"end": 927,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 927,
											"name": "tag",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 788,
											"end": 927,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 882,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 882,
											"end": 900,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 882,
											"end": 900,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 901,
											"end": 903,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 905,
											"end": 911,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 882,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 882,
											"end": 912,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 882,
											"end": 912,
											"name": "tag",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 882,
											"end": 912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 668,
											"end": 943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 668,
											"end": 943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 668,
											"end": 943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 668,
											"end": 943,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1413,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 971,
											"end": 1170,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 971,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1088,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 1092,
											"end": 1096,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 1156,
											"end": 1161,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 1156,
											"end": 1161,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1149,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "tag",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 1098,
											"end": 1133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1132,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1123,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1162,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 1098,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1088,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 1088,
											"end": 1163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1088,
											"end": 1163,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 1088,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 971,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 971,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 971,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 971,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 971,
											"end": 1170,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 428,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 317,
											"end": 428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 392,
											"end": 420,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 392,
											"end": 420,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 392,
											"end": 420,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 317,
											"end": 428,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1556,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 1176,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 643,
											"end": 652,
											"name": "PUSH",
											"source": 9,
											"value": "12C"
										},
										{
											"begin": 1332,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 1352,
											"end": 1356,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1361,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1362,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1362,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 1332,
											"end": 1351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1362,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1362,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1362,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1362,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1309,
											"end": 1363,
											"name": "tag",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 1309,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 643,
											"end": 652,
											"name": "PUSH",
											"source": 9,
											"value": "12C"
										},
										{
											"begin": 1288,
											"end": 1363,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1394,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 1394,
											"end": 1422,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1422,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 1394,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1373,
											"end": 1422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1439,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 643,
											"end": 652,
											"name": "PUSH",
											"source": 9,
											"value": "12C"
										},
										{
											"begin": 1439,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1494,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 1494,
											"end": 1505,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1510,
											"end": 1520,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1494,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 1494,
											"end": 1521,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1521,
											"name": "tag",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 1494,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1447,
											"end": 1459,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1447,
											"end": 1459,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1439,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 1439,
											"end": 1476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1439,
											"end": 1460,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1465,
											"end": 1475,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1439,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 1439,
											"end": 1476,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 215,
											"end": 320,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 215,
											"end": 320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 273,
											"end": 280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 299,
											"end": 300,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 299,
											"end": 305,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 299,
											"end": 305,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 299,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "575"
										},
										{
											"begin": 299,
											"end": 313,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 312,
											"end": 313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 299,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 299,
											"end": 313,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 299,
											"end": 313,
											"name": "tag",
											"source": 2,
											"value": "575"
										},
										{
											"begin": 299,
											"end": 313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 308,
											"end": 309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 308,
											"end": 309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 215,
											"end": 320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 320,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 391,
											"end": 495,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 391,
											"end": 495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 449,
											"end": 456,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 475,
											"end": 476,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 475,
											"end": 480,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 475,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "575"
										},
										{
											"begin": 475,
											"end": 488,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 487,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 475,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 475,
											"end": 488,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1459,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 949,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1035,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 1035,
											"end": 1453,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1069,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 1075,
											"end": 1080,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 1069,
											"end": 1081,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1069,
											"end": 1081,
											"name": "tag",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 1069,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1443,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 1065,
											"end": 1443,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1128,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1128,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1128,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "PUSH",
											"source": 11,
											"value": "556E6945524332303A206E6F7420656E6F7567682076616C7565000000000000"
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "tag",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 1101,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1199,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1181,
											"end": 1190,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1181,
											"end": 1199,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1333,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 1177,
											"end": 1333,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1282,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "PUSH",
											"source": 11,
											"value": "8FC"
										},
										{
											"begin": 1292,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1312,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 1292,
											"end": 1313,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1292,
											"end": 1313,
											"name": "tag",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 1292,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "tag",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1333,
											"name": "tag",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 1177,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 1065,
											"end": 1443,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1443,
											"name": "tag",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 1065,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1371,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1371,
											"end": 1393,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1371,
											"end": 1393,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1404,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1418,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1371,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "591"
										},
										{
											"begin": 1371,
											"end": 1428,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 659,
											"end": 825,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 659,
											"end": 825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 773,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 742,
											"end": 773,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 742,
											"end": 773,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 742,
											"end": 773,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 742,
											"end": 773,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 742,
											"end": 773,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 742,
											"end": 773,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 783,
											"end": 818,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 802,
											"end": 817,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 818,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 783,
											"end": 818,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 783,
											"end": 818,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 783,
											"end": 818,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 783,
											"end": 818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 818,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 659,
											"end": 825,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 831,
											"end": 965,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 831,
											"end": 965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 957,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 931,
											"end": 957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 931,
											"end": 957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 931,
											"end": 957,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 931,
											"end": 957,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 921,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 921,
											"end": 958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 931,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 931,
											"end": 957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 945,
											"end": 956,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 931,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 931,
											"end": 957,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 558,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 187,
											"end": 558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 235,
											"end": 242,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 263,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 258,
											"end": 259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 258,
											"end": 263,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 254,
											"end": 552,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 254,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 254,
											"end": 552,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 291,
											"end": 292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 326,
											"end": 327,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 322,
											"end": 323,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 318,
											"end": 323,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 318,
											"end": 327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 341,
											"end": 430,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 341,
											"end": 430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 352,
											"end": 353,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 348,
											"end": 349,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 348,
											"end": 353,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 341,
											"end": 430,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 341,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 341,
											"end": 430,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 377,
											"end": 378,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 378,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 373,
											"end": 378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 414,
											"end": 415,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 405,
											"end": 406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 401,
											"end": 402,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 401,
											"end": 406,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 401,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 401,
											"end": 406,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 401,
											"end": 406,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 401,
											"end": 406,
											"name": "tag",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 401,
											"end": 406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 401,
											"end": 406,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 401,
											"end": 410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 400,
											"end": 415,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 400,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 400,
											"end": 415,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 415,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 400,
											"end": 415,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 400,
											"end": 415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 400,
											"end": 415,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 396,
											"end": 415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 396,
											"end": 415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 341,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 341,
											"end": 430,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 341,
											"end": 430,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 341,
											"end": 430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 450,
											"end": 451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 443,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 443,
											"end": 451,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 254,
											"end": 552,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 254,
											"end": 552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 472,
											"end": 478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 472,
											"end": 478,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 468,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 468,
											"end": 552,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 501,
											"end": 502,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 494,
											"end": 502,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 468,
											"end": 552,
											"name": "tag",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 468,
											"end": 552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 540,
											"end": 541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 533,
											"end": 541,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7835,
											"end": 8205,
											"name": "tag",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 7835,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7918,
											"end": 7939,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "607"
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "tag",
											"source": 4,
											"value": "607"
										},
										{
											"begin": 7910,
											"end": 7975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 8035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "608"
										},
										{
											"begin": 8015,
											"end": 8016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8019,
											"end": 8026,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "554"
										},
										{
											"begin": 7986,
											"end": 8035,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7986,
											"end": 8035,
											"name": "tag",
											"source": 4,
											"value": "608"
										},
										{
											"begin": 7986,
											"end": 8035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8061,
											"end": 8073,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8061,
											"end": 8073,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8061,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "609"
										},
										{
											"begin": 8061,
											"end": 8085,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8078,
											"end": 8084,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8061,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8061,
											"end": 8085,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8061,
											"end": 8085,
											"name": "tag",
											"source": 4,
											"value": "609"
										},
										{
											"begin": 8061,
											"end": 8085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8046,
											"end": 8058,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8046,
											"end": 8085,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "610"
										},
										{
											"begin": 8116,
											"end": 8146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8139,
											"end": 8145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8116,
											"end": 8146,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8116,
											"end": 8146,
											"name": "tag",
											"source": 4,
											"value": "610"
										},
										{
											"begin": 8116,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8146,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8146,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8146,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8104,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8104,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 8205,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 8205,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 8205,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "tag",
											"source": 3,
											"value": "546"
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3799,
											"end": 3806,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "613"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "523"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "521"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 3,
											"value": "613"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 3865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3873,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3868,
											"end": 3869,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "618"
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "tag",
											"source": 3,
											"value": "618"
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 871,
											"name": "tag",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 696,
											"end": 871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 805,
											"end": 863,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 805,
											"end": 863,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 778,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "554"
										},
										{
											"begin": 778,
											"end": 864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 798,
											"end": 803,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 778,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "621"
										},
										{
											"begin": 778,
											"end": 864,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 877,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "559"
										},
										{
											"begin": 977,
											"end": 1073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2959,
											"end": 3710,
											"name": "tag",
											"source": 6,
											"value": "621"
										},
										{
											"begin": 2959,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "625"
										},
										{
											"begin": 3432,
											"end": 3436,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 6,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3417,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3404,
											"end": 3431,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "626"
										},
										{
											"begin": 3404,
											"end": 3431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "tag",
											"source": 6,
											"value": "625"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 3508,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3483,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "554"
										},
										{
											"begin": 3483,
											"end": 3704,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "628"
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "tag",
											"source": 6,
											"value": "628"
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "554"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH data",
											"source": 6,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3964,
											"name": "tag",
											"source": 7,
											"value": "626"
										},
										{
											"begin": 3770,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 3885,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3904,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3927,
											"end": 3933,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3939,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3956,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5247,
											"end": 5259,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "634"
										},
										{
											"begin": 5290,
											"end": 5296,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "635"
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "tag",
											"source": 7,
											"value": "634"
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "636"
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "tag",
											"source": 7,
											"value": "636"
										},
										{
											"begin": 5271,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5414,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5416,
											"end": 5439,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5471,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5474,
											"end": 5478,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "tag",
											"source": 7,
											"value": "637"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "639"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "637"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "tag",
											"source": 7,
											"value": "639"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "642"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "tag",
											"source": 7,
											"value": "642"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "tag",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5401,
											"end": 5479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5401,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5401,
											"end": 5479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5401,
											"end": 5479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5493,
											"end": 5500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 6069,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "643"
										},
										{
											"begin": 5489,
											"end": 6069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5516,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5516,
											"end": 5533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5516,
											"end": 5533,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 6069,
											"name": "tag",
											"source": 7,
											"value": "643"
										},
										{
											"begin": 5489,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5634,
											"end": 5651,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5634,
											"end": 5651,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5634,
											"end": 5655,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 5630,
											"end": 6059,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5892,
											"end": 5902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5903,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5952,
											"end": 5967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 5949,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5935,
											"end": 5937,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5931,
											"end": 5950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5924,
											"end": 5968,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5986,
											"name": "tag",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 5841,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 718,
											"end": 1328,
											"name": "tag",
											"source": 7,
											"value": "635"
										},
										{
											"begin": 718,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 778,
											"end": 782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1259,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1259,
											"name": "EXTCODEHASH",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1278,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1278,
											"end": 1320,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1305,
											"end": 1320,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1320,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1320,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1270,
											"end": 1321,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 718,
											"end": 1328,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "305"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "655"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "654"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "655"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "654"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "655"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "656"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "657"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "656"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "339"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "657"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "658"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "656"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "658"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c00",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"BASE_SUPPLY()": "baf13a0a",
							"DOMAIN_SEPARATOR()": "3644e515",
							"FEE_DENOMINATOR()": "d73792a9",
							"PERMIT_TYPEHASH()": "30adf81f",
							"REFERRAL_SHARE()": "b21b5a21",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decayPeriod()": "48d67e1b",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"deposit(uint256[],uint256[])": "f223885a",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"getBalanceForAddition(address)": "d7d3aab5",
							"getBalanceForRemoval(address)": "e7ff42c9",
							"getReturn(address,address,uint256)": "1e1401f8",
							"getTokens()": "aa6ca808",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize(address[])": "a224cee7",
							"isToken(address)": "19f37361",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"rescueFunds(address,uint256)": "78e3214f",
							"swap(address,address,uint256,uint256,address)": "d5bcb9b5",
							"symbol()": "95d89b41",
							"tokens(uint256)": "4f64b2be",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"virtualBalancesForAddition(address)": "6edc2c09",
							"virtualBalancesForRemoval(address)": "5ed9156d",
							"volumes(address)": "b1ec4c40",
							"withdraw(uint256,uint256[])": "5915d806"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"srcBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dstBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFERRAL_SHARE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decayPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmounts\",\"type\":\"uint256[]\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fairSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalanceForAddition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalanceForRemoval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReturn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"virtualBalancesForAddition\",\"outputs\":[{\"internalType\":\"uint216\",\"name\":\"balance\",\"type\":\"uint216\"},{\"internalType\":\"uint40\",\"name\":\"time\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"virtualBalancesForRemoval\",\"outputs\":[{\"internalType\":\"uint216\",\"name\":\"balance\",\"type\":\"uint216\"},{\"internalType\":\"uint40\",\"name\":\"time\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"volumes\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"confirmed\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"result\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minReturns\",\"type\":\"uint256[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mooniswap.sol\":\"Mooniswap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x6c234834003dfb86e2c23d12dfdde7cc01e78013d71b52162cb308b4873562cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0e3f39b2ec26694a42c89a5d9e489d5228f1880fcf5e375c5c975ba816e5ffe\",\"dweb:/ipfs/QmUErheHopnbBUSLDQAtWsmw6HsEvqTNp1QiBEuSJhmhHn\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf204d98eef08edacf5a02a2af1516ea4febdb6aba7a1ae5ac8deb6e568fd3dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4dea62bffbd180772a6cfe7cb90e3a045c52d6b502bdb2fdff83193da42d8d0\",\"dweb:/ipfs/QmW8qGZ5nngajmv5Aamdrpkeuq7S5YCVaR7rtcqNekKHtK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7de652204c2ee291a61aa984103dfc7ae4392d651fbbc44a0079caee7c69a3\",\"dweb:/ipfs/Qmcw1cQnq9eWDnrCBwU3TNyqLfTMUFg5YKpYUkELoMPuUE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78aa63fd7fbb8df2942b6c6e7bd89349507e306edbd5909ee8d9575c31be57e5\",\"dweb:/ipfs/Qmf6z9KWKCJCfEVokgTBhBVq5yHtE6is31N8AV5BHdMkqQ\"]},\"contracts/Mooniswap.sol\":{\"keccak256\":\"0xc3e852bd2528885b12a531d7b710bc73eb9937f036962e48c8d75a3364e3e940\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e11db3da7d6591f9b17ffd4ad0864c9b1098888dad5b2a00c314f24b19447905\",\"dweb:/ipfs/QmU5NQybwzynQtuaKhTik8K2P8MTNhuPKxoMD2rK9ZTs26\"]},\"contracts/libraries/Sqrt.sol\":{\"keccak256\":\"0x5674ed7d1bb3655d9d6698ff6175cb23261d8cf837915d0af70404aa019b5267\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b79b00374537e2b24bb4b0ef1e4f86e67f7c789201d2cfae430beb11d4deade3\",\"dweb:/ipfs/QmWDXiQrtSHbbAQctNjCo9w3zG4woPQBxz8kGskNDZ3EgZ\"]},\"contracts/libraries/UniERC20.sol\":{\"keccak256\":\"0x003b8d0112322ce396eff4ce68db536a75cc0fe9f9ca8c1942de1c7d812dd46e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362c0cc026bb634bc8f9925b4881d36bec8e35d00b47b3322acefe3024de946c\",\"dweb:/ipfs/QmVaGA8J9EqH2A1c7Aq1WUqQQrqdKak4m9yEaQB2bBo2d2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 421,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 427,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 429,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 431,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 433,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 435,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1413,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 30,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1663,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "8",
								"type": "t_bytes32"
							},
							{
								"astId": 1668,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "factory",
								"offset": 0,
								"slot": "9",
								"type": "t_contract(IFactory)1457"
							},
							{
								"astId": 1671,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "tokens",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_contract(IERC20)985)dyn_storage"
							},
							{
								"astId": 1675,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "nonces",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1679,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "isToken",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_contract(IERC20)985,t_bool)"
							},
							{
								"astId": 1683,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "volumes",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_contract(IERC20)985,t_struct(SwapVolumes)1620_storage)"
							},
							{
								"astId": 1687,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "virtualBalancesForAddition",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_contract(IERC20)985,t_struct(Data)1465_storage)"
							},
							{
								"astId": 1691,
								"contract": "contracts/Mooniswap.sol:Mooniswap",
								"label": "virtualBalancesForRemoval",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_contract(IERC20)985,t_struct(Data)1465_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(IERC20)985)dyn_storage": {
								"base": "t_contract(IERC20)985",
								"encoding": "dynamic_array",
								"label": "contract IERC20[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)985": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IFactory)1457": {
								"encoding": "inplace",
								"label": "contract IFactory",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_contract(IERC20)985,t_bool)": {
								"encoding": "mapping",
								"key": "t_contract(IERC20)985",
								"label": "mapping(contract IERC20 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_contract(IERC20)985,t_struct(Data)1465_storage)": {
								"encoding": "mapping",
								"key": "t_contract(IERC20)985",
								"label": "mapping(contract IERC20 => struct VirtualBalance.Data)",
								"numberOfBytes": "32",
								"value": "t_struct(Data)1465_storage"
							},
							"t_mapping(t_contract(IERC20)985,t_struct(SwapVolumes)1620_storage)": {
								"encoding": "mapping",
								"key": "t_contract(IERC20)985",
								"label": "mapping(contract IERC20 => struct Mooniswap.SwapVolumes)",
								"numberOfBytes": "32",
								"value": "t_struct(SwapVolumes)1620_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Data)1465_storage": {
								"encoding": "inplace",
								"label": "struct VirtualBalance.Data",
								"members": [
									{
										"astId": 1462,
										"contract": "contracts/Mooniswap.sol:Mooniswap",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint216"
									},
									{
										"astId": 1464,
										"contract": "contracts/Mooniswap.sol:Mooniswap",
										"label": "time",
										"offset": 27,
										"slot": "0",
										"type": "t_uint40"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(SwapVolumes)1620_storage": {
								"encoding": "inplace",
								"label": "struct Mooniswap.SwapVolumes",
								"members": [
									{
										"astId": 1617,
										"contract": "contracts/Mooniswap.sol:Mooniswap",
										"label": "confirmed",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 1619,
										"contract": "contracts/Mooniswap.sol:Mooniswap",
										"label": "result",
										"offset": 16,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint216": {
								"encoding": "inplace",
								"label": "uint216",
								"numberOfBytes": "27"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint40": {
								"encoding": "inplace",
								"label": "uint40",
								"numberOfBytes": "5"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"VirtualBalance": {
					"abi": [
						{
							"inputs": [],
							"name": "DECAY_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Mooniswap.sol\":471:1558  library VirtualBalance {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Mooniswap.sol\":471:1558  library VirtualBalance {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1e9d4904\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Mooniswap.sol\":604:652  uint256 public constant DECAY_PERIOD = 5 minutes */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n    tag_4:\n        /* \"contracts/Mooniswap.sol\":643:652  5 minutes */\n      0x012c\n        /* \"contracts/Mooniswap.sol\":604:652  uint256 public constant DECAY_PERIOD = 5 minutes */\n      dup2\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200e498a611e0b463bcdcc2967589c64b9d6b317b90c2775ced29c4649dffafff264736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608c610024600b82828239805160001a607314601757fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80631e9d4904146038575b600080fd5b603e6050565b60408051918252519081900360200190f35b61012c8156fea26469706673582212200e498a611e0b463bcdcc2967589c64b9d6b317b90c2775ced29c4649dffafff264736f6c634300060c0033",
							"opcodes": "PUSH1 0x8C PUSH2 0x24 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x17 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E9D4904 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x50 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x12C DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x49 DUP11 PUSH2 0x1E0B CHAINID EXTCODESIZE 0xCD 0xCC 0x29 PUSH8 0x589C64B9D6B317B9 0xC 0x27 PUSH22 0xCED29C4649DFFAFFF264736F6C634300060C00330000 ",
							"sourceMap": "471:1087:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80631e9d4904146038575b600080fd5b603e6050565b60408051918252519081900360200190f35b61012c8156fea26469706673582212200e498a611e0b463bcdcc2967589c64b9d6b317b90c2775ced29c4649dffafff264736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E9D4904 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x50 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x12C DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x49 DUP11 PUSH2 0x1E0B CHAINID EXTCODESIZE 0xCD 0xCC 0x29 PUSH8 0x589C64B9D6B317B9 0xC 0x27 PUSH22 0xCED29C4649DFFAFFF264736F6C634300060C00330000 ",
							"sourceMap": "471:1087:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;604:48;;;:::i;:::-;;;;;;;;;;;;;;;;;643:9;604:48;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "28000",
								"executionCost": "106",
								"totalCost": "28106"
							},
							"external": {
								"DECAY_PERIOD()": "160"
							},
							"internal": {
								"current(struct VirtualBalance.Data memory,uint256)": "infinite",
								"scale(struct VirtualBalance.Data storage pointer,uint256,uint256,uint256)": "infinite",
								"set(struct VirtualBalance.Data storage pointer,uint256)": "infinite",
								"update(struct VirtualBalance.Data storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 471,
									"end": 1558,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 471,
									"end": 1558,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e498a611e0b463bcdcc2967589c64b9d6b317b90c2775ced29c4649dffafff264736f6c634300060c0033",
									".code": [
										{
											"begin": 471,
											"end": 1558,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "PUSH",
											"source": 9,
											"value": "1E9D4904"
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 471,
											"end": 1558,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 604,
											"end": 652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 604,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 652,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 604,
											"end": 652,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 604,
											"end": 652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 652,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 652,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 643,
											"end": 652,
											"name": "PUSH",
											"source": 9,
											"value": "12C"
										},
										{
											"begin": 604,
											"end": 652,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 604,
											"end": 652,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DECAY_PERIOD()": "1e9d4904"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DECAY_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mooniswap.sol\":\"VirtualBalance\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x6c234834003dfb86e2c23d12dfdde7cc01e78013d71b52162cb308b4873562cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0e3f39b2ec26694a42c89a5d9e489d5228f1880fcf5e375c5c975ba816e5ffe\",\"dweb:/ipfs/QmUErheHopnbBUSLDQAtWsmw6HsEvqTNp1QiBEuSJhmhHn\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf204d98eef08edacf5a02a2af1516ea4febdb6aba7a1ae5ac8deb6e568fd3dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4dea62bffbd180772a6cfe7cb90e3a045c52d6b502bdb2fdff83193da42d8d0\",\"dweb:/ipfs/QmW8qGZ5nngajmv5Aamdrpkeuq7S5YCVaR7rtcqNekKHtK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7de652204c2ee291a61aa984103dfc7ae4392d651fbbc44a0079caee7c69a3\",\"dweb:/ipfs/Qmcw1cQnq9eWDnrCBwU3TNyqLfTMUFg5YKpYUkELoMPuUE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78aa63fd7fbb8df2942b6c6e7bd89349507e306edbd5909ee8d9575c31be57e5\",\"dweb:/ipfs/Qmf6z9KWKCJCfEVokgTBhBVq5yHtE6is31N8AV5BHdMkqQ\"]},\"contracts/Mooniswap.sol\":{\"keccak256\":\"0xc3e852bd2528885b12a531d7b710bc73eb9937f036962e48c8d75a3364e3e940\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e11db3da7d6591f9b17ffd4ad0864c9b1098888dad5b2a00c314f24b19447905\",\"dweb:/ipfs/QmU5NQybwzynQtuaKhTik8K2P8MTNhuPKxoMD2rK9ZTs26\"]},\"contracts/libraries/Sqrt.sol\":{\"keccak256\":\"0x5674ed7d1bb3655d9d6698ff6175cb23261d8cf837915d0af70404aa019b5267\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b79b00374537e2b24bb4b0ef1e4f86e67f7c789201d2cfae430beb11d4deade3\",\"dweb:/ipfs/QmWDXiQrtSHbbAQctNjCo9w3zG4woPQBxz8kGskNDZ3EgZ\"]},\"contracts/libraries/UniERC20.sol\":{\"keccak256\":\"0x003b8d0112322ce396eff4ce68db536a75cc0fe9f9ca8c1942de1c7d812dd46e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362c0cc026bb634bc8f9925b4881d36bec8e35d00b47b3322acefe3024de946c\",\"dweb:/ipfs/QmVaGA8J9EqH2A1c7Aq1WUqQQrqdKak4m9yEaQB2bBo2d2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Sqrt.sol": {
				"Sqrt": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Sqrt.sol\":59:560  library Sqrt {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Sqrt.sol\":59:560  library Sqrt {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026a302af4ac5ff2db40f3138f72ad8c0783c2708f557bd6d19c2326f07d8c9dd64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026a302af4ac5ff2db40f3138f72ad8c0783c2708f557bd6d19c2326f07d8c9dd64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 LOG3 MUL 0xAF 0x4A 0xC5 SELFDESTRUCT 0x2D 0xB4 0xF BALANCE CODESIZE 0xF7 0x2A 0xD8 0xC0 PUSH25 0x3C2708F557BD6D19C2326F07D8C9DD64736F6C634300060C00 CALLER ",
							"sourceMap": "59:501:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026a302af4ac5ff2db40f3138f72ad8c0783c2708f557bd6d19c2326f07d8c9dd64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 LOG3 MUL 0xAF 0x4A 0xC5 SELFDESTRUCT 0x2D 0xB4 0xF BALANCE CODESIZE 0xF7 0x2A 0xD8 0xC0 PUSH25 0x3C2708F557BD6D19C2326F07D8C9DD64736F6C634300060C00 CALLER ",
							"sourceMap": "59:501:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 560,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 560,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 560,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 59,
									"end": 560,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 560,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 560,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 560,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "INVALID",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 560,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 560,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 560,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 59,
									"end": 560,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026a302af4ac5ff2db40f3138f72ad8c0783c2708f557bd6d19c2326f07d8c9dd64736f6c634300060c0033",
									".code": [
										{
											"begin": 59,
											"end": 560,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 59,
											"end": 560,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 59,
											"end": 560,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 59,
											"end": 560,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 560,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 59,
											"end": 560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 560,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 59,
											"end": 560,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Sqrt.sol\":\"Sqrt\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Sqrt.sol\":{\"keccak256\":\"0x5674ed7d1bb3655d9d6698ff6175cb23261d8cf837915d0af70404aa019b5267\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b79b00374537e2b24bb4b0ef1e4f86e67f7c789201d2cfae430beb11d4deade3\",\"dweb:/ipfs/QmWDXiQrtSHbbAQctNjCo9w3zG4woPQBxz8kGskNDZ3EgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/UniERC20.sol": {
				"UniERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/UniERC20.sol\":229:3301  library UniERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/UniERC20.sol\":229:3301  library UniERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220329cfd49fb15f5e503a617044b9ffb9a92ae7786ba9efce8dd474dd58f1e350f64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220329cfd49fb15f5e503a617044b9ffb9a92ae7786ba9efce8dd474dd58f1e350f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN SWAP13 REVERT 0x49 0xFB ISZERO CREATE2 0xE5 SUB 0xA6 OR DIV 0x4B SWAP16 0xFB SWAP11 SWAP3 0xAE PUSH24 0x86BA9EFCE8DD474DD58F1E350F64736F6C634300060C0033 ",
							"sourceMap": "229:3072:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220329cfd49fb15f5e503a617044b9ffb9a92ae7786ba9efce8dd474dd58f1e350f64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN SWAP13 REVERT 0x49 0xFB ISZERO CREATE2 0xE5 SUB 0xA6 OR DIV 0x4B SWAP16 0xFB SWAP11 SWAP3 0xAE PUSH24 0x86BA9EFCE8DD474DD58F1E350F64736F6C634300060C0033 ",
							"sourceMap": "229:3072:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_toHex(address)": "infinite",
								"_toHex(bytes memory)": "infinite",
								"isETH(contract IERC20)": "infinite",
								"uniBalanceOf(contract IERC20,address)": "infinite",
								"uniSymbol(contract IERC20)": "infinite",
								"uniTransfer(contract IERC20,address payable,uint256)": "infinite",
								"uniTransferFromSenderToThis(contract IERC20,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 229,
									"end": 3301,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 229,
									"end": 3301,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220329cfd49fb15f5e503a617044b9ffb9a92ae7786ba9efce8dd474dd58f1e350f64736f6c634300060c0033",
									".code": [
										{
											"begin": 229,
											"end": 3301,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 229,
											"end": 3301,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 229,
											"end": 3301,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 229,
											"end": 3301,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 229,
											"end": 3301,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 229,
											"end": 3301,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 229,
											"end": 3301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 3301,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 229,
											"end": 3301,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/UniERC20.sol\":\"UniERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7de652204c2ee291a61aa984103dfc7ae4392d651fbbc44a0079caee7c69a3\",\"dweb:/ipfs/Qmcw1cQnq9eWDnrCBwU3TNyqLfTMUFg5YKpYUkELoMPuUE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]},\"contracts/libraries/UniERC20.sol\":{\"keccak256\":\"0x003b8d0112322ce396eff4ce68db536a75cc0fe9f9ca8c1942de1c7d812dd46e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362c0cc026bb634bc8f9925b4881d36bec8e35d00b47b3322acefe3024de946c\",\"dweb:/ipfs/QmVaGA8J9EqH2A1c7Aq1WUqQQrqdKak4m9yEaQB2bBo2d2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "660:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "677:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "677:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "670:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "643:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "642:17:0"
									},
									"scope": 22,
									"src": "590:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "765:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "775:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "775:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "915:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "915:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "908:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "717:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "751:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "751:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "750:14:0"
									},
									"scope": 22,
									"src": "700:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "558:374:0"
						}
					],
					"src": "33:900:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 25,
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 23,
							"src": "58:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 27,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "602:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 28,
									"nodeType": "InheritanceSpecifier",
									"src": "602:7:1"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": {
								"id": 26,
								"nodeType": "StructuredDocumentation",
								"src": "87:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 30,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 131,
									"src": "616:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 29,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "616:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 36,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "672:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "703:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "671:57:1"
									},
									"src": "645:84:1"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "855:135:1",
										"statements": [
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 57,
														"src": "865:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 40,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "865:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 42,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "885:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "885:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "865:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 45,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "907:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "916:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "907:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "907:18:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "969:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "961:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 50,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "961:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "961:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 54,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "973:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "940:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "940:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "EmitStatement",
												"src": "935:48:1"
											}
										]
									},
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "735:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 58,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:1"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:0:1"
									},
									"scope": 131,
									"src": "831:159:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1113:30:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1130:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1123:13:1"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "996:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1080:2:1"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "1104:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1103:9:1"
									},
									"scope": 131,
									"src": "1066:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1252:95:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 71,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "1270:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1280:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1280:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1270:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1294:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 70,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1262:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1262:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1262:67:1"
											},
											{
												"id": 78,
												"nodeType": "PlaceholderStatement",
												"src": "1339:1:1"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1149:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 80,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1249:2:1"
									},
									"src": "1231:116:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1743:91:1",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 87,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1779:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 90,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1795:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1787:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 88,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1787:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 86,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1758:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1758:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "EmitStatement",
												"src": "1753:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1808:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1825:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1817:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 95,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1817:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1817:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1808:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1808:19:1"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1353:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 84,
											"modifierName": {
												"argumentTypes": null,
												"id": 83,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "1733:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1733:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1715:2:1"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:0:1"
									},
									"scope": 131,
									"src": "1689:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "2053:170:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 111,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "2071:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2091:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2083:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 112,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2083:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2083:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2071:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2095:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2063:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2063:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "2063:73:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 121,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2172:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2180:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 120,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "2151:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2151:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "EmitStatement",
												"src": "2146:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 125,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2199:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 126,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "2208:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2199:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2199:17:1"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1840:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 108,
											"modifierName": {
												"argumentTypes": null,
												"id": 107,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "2043:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2043:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 130,
												"src": "2010:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2009:18:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:1"
									},
									"scope": 131,
									"src": "1983:240:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 132,
							"src": "582:1643:1"
						}
					],
					"src": "33:2193:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							204
						]
					},
					"id": 205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "58:73:2",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 204,
							"linearizedBaseContracts": [
								204
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "282:38:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 144,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "299:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 145,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "304:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "299:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 148,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "312:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "299:14:2",
													"trueExpression": {
														"argumentTypes": null,
														"id": 147,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "308:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 143,
												"id": 150,
												"nodeType": "Return",
												"src": "292:21:2"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "151:59:2",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 152,
												"src": "228:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 152,
												"src": "239:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "227:22:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 152,
												"src": "273:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "272:9:2"
									},
									"scope": 204,
									"src": "215:105:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "458:37:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 162,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "475:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 163,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "479:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "475:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 166,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "475:13:2",
													"trueExpression": {
														"argumentTypes": null,
														"id": 165,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 168,
												"nodeType": "Return",
												"src": "468:20:2"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "326:60:2",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "404:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "415:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "403:22:2"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "449:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "448:9:2"
									},
									"scope": 204,
									"src": "391:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "679:119:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 180,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 173,
																		"src": "751:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "755:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "751:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 183,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "750:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 184,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 175,
																		"src": "761:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "765:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "761:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 187,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "760:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "750:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 189,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 173,
																					"src": "772:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 190,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "776:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "772:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 192,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 175,
																					"src": "780:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 193,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "784:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "780:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "772:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 196,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "771:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "789:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "771:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 199,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "770:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "750:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 179,
												"id": 201,
												"nodeType": "Return",
												"src": "743:48:2"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "501:102:2",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "625:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "636:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "624:22:2"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "670:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "669:9:2"
									},
									"scope": 204,
									"src": "608:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 205,
							"src": "132:668:2"
						}
					],
					"src": "33:768:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							400
						]
					},
					"id": 401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 206,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 207,
								"nodeType": "StructuredDocumentation",
								"src": "58:563:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 400,
							"linearizedBaseContracts": [
								400
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "941:109:3",
										"statements": [
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 232,
														"src": "951:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "951:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 219,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "963:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 220,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "967:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "963:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "951:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 224,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "986:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 225,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "991:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "986:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "994:29:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "978:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "978:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "978:46:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 230,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 218,
													"src": "1042:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 216,
												"id": 231,
												"nodeType": "Return",
												"src": "1035:8:3"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "645:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 233,
												"src": "887:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 233,
												"src": "898:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "886:22:3"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 233,
												"src": "932:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "931:9:3"
									},
									"scope": 400,
									"src": "874:176:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "1388:67:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 244,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "1409:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 245,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "1412:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1415:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 243,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															250,
															278
														],
														"referencedDeclaration": 278,
														"src": "1405:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1405:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 242,
												"id": 248,
												"nodeType": "Return",
												"src": "1398:50:3"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "1056:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 250,
												"src": "1334:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 250,
												"src": "1345:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1333:22:3"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 250,
												"src": "1379:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1378:9:3"
									},
									"scope": 400,
									"src": "1321:134:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "1841:92:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 263,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "1859:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 264,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "1864:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1859:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 266,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "1867:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1851:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1851:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "1851:29:3"
											},
											{
												"assignments": [
													270
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 277,
														"src": "1890:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 269,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1890:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 271,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "1902:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 272,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "1906:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1902:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1890:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 275,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 270,
													"src": "1925:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 261,
												"id": 276,
												"nodeType": "Return",
												"src": "1918:8:3"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "1461:280:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 278,
												"src": "1759:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 278,
												"src": "1770:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 278,
												"src": "1781:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1781:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1758:50:3"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 278,
												"src": "1832:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1831:9:3"
									},
									"scope": 400,
									"src": "1746:187:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "2247:392:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 288,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "2479:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2484:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2479:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 294,
												"nodeType": "IfStatement",
												"src": "2475:45:3",
												"trueBody": {
													"id": 293,
													"nodeType": "Block",
													"src": "2487:33:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2508:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 287,
															"id": 292,
															"nodeType": "Return",
															"src": "2501:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 312,
														"src": "2530:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2530:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 297,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "2542:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 298,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "2546:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2542:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2530:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 302,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "2565:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 303,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "2569:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2565:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "2574:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2565:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2557:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2557:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "2557:56:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 310,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 296,
													"src": "2631:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 287,
												"id": 311,
												"nodeType": "Return",
												"src": "2624:8:3"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "1939:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "2193:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "2204:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2192:22:3"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "2238:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2237:9:3"
									},
									"scope": 400,
									"src": "2180:459:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "3168:63:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 324,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "3189:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 325,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "3192:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3195:28:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 323,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															330,
															358
														],
														"referencedDeclaration": 358,
														"src": "3185:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3185:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 322,
												"id": 328,
												"nodeType": "Return",
												"src": "3178:46:3"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "2645:451:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "3114:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "3125:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3113:22:3"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "3159:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3159:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3158:9:3"
									},
									"scope": 400,
									"src": "3101:130:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "3808:177:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 343,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "3826:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3830:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3826:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 346,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "3833:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3818:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "3818:28:3"
											},
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 357,
														"src": "3856:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3856:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 351,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "3868:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 352,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "3872:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3868:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3856:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 355,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 350,
													"src": "3977:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 341,
												"id": 356,
												"nodeType": "Return",
												"src": "3970:8:3"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "3237:471:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "3726:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3726:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "3737:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "3748:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3748:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3725:50:3"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "3799:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3799:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3798:9:3"
									},
									"scope": 400,
									"src": "3713:272:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "4503:61:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 369,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4524:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 370,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "4527:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4530:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 368,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															375,
															399
														],
														"referencedDeclaration": 399,
														"src": "4520:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 367,
												"id": 373,
												"nodeType": "Return",
												"src": "4513:44:3"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "3991:440:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 375,
												"src": "4449:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 375,
												"src": "4460:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4460:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4448:22:3"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 375,
												"src": "4494:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4493:9:3"
									},
									"scope": 400,
									"src": "4436:128:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "5130:68:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 388,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "5148:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5153:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5148:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 391,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "5156:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5140:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "5140:29:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 394,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "5186:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 395,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "5190:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5186:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 386,
												"id": 397,
												"nodeType": "Return",
												"src": "5179:12:3"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "4570:460:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "5048:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "5059:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5059:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "5070:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5070:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5047:50:3"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "5121:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5120:9:3"
									},
									"scope": 400,
									"src": "5035:163:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 401,
							"src": "622:4578:3"
						}
					],
					"src": "33:5168:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							907
						]
					},
					"id": 908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 402,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/GSN/Context.sol",
							"file": "../../GSN/Context.sol",
							"id": 403,
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 23,
							"src": "58:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 404,
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 986,
							"src": "90:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 405,
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 401,
							"src": "113:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 406,
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 1403,
							"src": "147:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 408,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "1363:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 409,
									"nodeType": "InheritanceSpecifier",
									"src": "1363:7:4"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 410,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 985,
										"src": "1372:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$985",
											"typeString": "contract IERC20"
										}
									},
									"id": 411,
									"nodeType": "InheritanceSpecifier",
									"src": "1372:6:4"
								}
							],
							"contractDependencies": [
								22,
								985
							],
							"contractKind": "contract",
							"documentation": {
								"id": 407,
								"nodeType": "StructuredDocumentation",
								"src": "182:1162:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 907,
							"linearizedBaseContracts": [
								907,
								985,
								22
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 414,
									"libraryName": {
										"contractScope": null,
										"id": 412,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 400,
										"src": "1391:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$400",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1385:27:4",
									"typeName": {
										"id": 413,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1404:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 417,
									"libraryName": {
										"contractScope": null,
										"id": 415,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1402,
										"src": "1423:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1402",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1417:26:4",
									"typeName": {
										"id": 416,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1435:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 907,
									"src": "1449:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 420,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1458:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1449:28:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 419,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1469:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 907,
									"src": "1502:69:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 426,
										"keyType": {
											"id": 422,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1511:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1502:49:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 425,
											"keyType": {
												"id": 423,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1531:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1522:28:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 424,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1542:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 907,
									"src": "1578:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 428,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1578:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 431,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 907,
									"src": "1613:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1613:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 433,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 907,
									"src": "1639:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 432,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1639:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 435,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 907,
									"src": "1667:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 434,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1667:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "2075:79:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 443,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2085:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 444,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "2093:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2085:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "2085:12:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 447,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "2107:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 448,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "2117:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2107:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "2107:16:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 451,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "2133:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2145:2:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2133:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "2133:14:4"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "1697:311:4",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 456,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 456,
												"src": "2026:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2026:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 456,
												"src": "2046:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 439,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2046:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2025:42:4"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2075:0:4"
									},
									"scope": 907,
									"src": "2013:141:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "2271:29:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 462,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "2288:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 461,
												"id": 463,
												"nodeType": "Return",
												"src": "2281:12:4"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "2160:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:4"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "2256:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2256:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:15:4"
									},
									"scope": 907,
									"src": "2219:81:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "2467:31:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 471,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 433,
													"src": "2484:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 470,
												"id": 472,
												"nodeType": "Return",
												"src": "2477:14:4"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "2306:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2428:2:4"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 474,
												"src": "2452:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 468,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2452:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2451:15:4"
									},
									"scope": 907,
									"src": "2413:85:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "3169:33:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 480,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "3186:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 479,
												"id": 481,
												"nodeType": "Return",
												"src": "3179:16:4"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "2504:612:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3138:2:4"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "3162:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 477,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3161:7:4"
									},
									"scope": 907,
									"src": "3121:81:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										916
									],
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "3324:36:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 490,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "3341:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 489,
												"id": 491,
												"nodeType": "Return",
												"src": "3334:19:4"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "3208:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 486,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3297:8:4"
									},
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3282:2:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "3315:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3315:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3314:9:4"
									},
									"scope": 907,
									"src": "3262:98:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										924
									],
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "3493:42:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 502,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "3510:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 504,
													"indexExpression": {
														"argumentTypes": null,
														"id": 503,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "3520:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3510:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 501,
												"id": 505,
												"nodeType": "Return",
												"src": "3503:25:4"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "3366:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 498,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3466:8:4"
									},
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 507,
												"src": "3437:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3437:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3436:17:4"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 507,
												"src": "3484:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3484:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3483:9:4"
									},
									"scope": 907,
									"src": "3418:117:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										934
									],
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "3830:80:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 519,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3850:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3850:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 521,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3864:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 522,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3875:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 518,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "3840:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "3840:42:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3899:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 517,
												"id": 526,
												"nodeType": "Return",
												"src": "3892:11:4"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "3541:192:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3806:8:4"
									},
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "3756:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "3775:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3775:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "3824:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3824:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3823:6:4"
									},
									"scope": 907,
									"src": "3738:172:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										944
									],
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "4066:51:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 539,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "4083:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 541,
														"indexExpression": {
															"argumentTypes": null,
															"id": 540,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "4095:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4083:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 543,
													"indexExpression": {
														"argumentTypes": null,
														"id": 542,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "4102:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4083:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 538,
												"id": 544,
												"nodeType": "Return",
												"src": "4076:34:4"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "3916:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 535,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4039:8:4"
									},
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 546,
												"src": "3987:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3987:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 546,
												"src": "4002:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4002:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3986:32:4"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 546,
												"src": "4057:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4057:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4056:9:4"
									},
									"scope": 907,
									"src": "3968:149:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										954
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "4344:77:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 558,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4363:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4363:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 560,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "4377:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 561,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "4386:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 557,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "4354:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4354:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "4354:39:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4410:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 556,
												"id": 565,
												"nodeType": "Return",
												"src": "4403:11:4"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "4123:127:4",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 553,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4320:8:4"
									},
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "4272:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4272:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "4289:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4289:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4271:33:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "4338:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4338:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4337:6:4"
									},
									"scope": 907,
									"src": "4255:166:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										966
									],
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "4993:205:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 581,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "5013:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 582,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "5021:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 583,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "5032:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 580,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "5003:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5003:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "5003:36:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 587,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "5058:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 588,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5066:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5066:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 597,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "5118:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5126:42:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 590,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 427,
																			"src": "5080:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 592,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 591,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 570,
																			"src": "5092:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5080:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 595,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 593,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "5100:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5100:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5080:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 278,
																"src": "5080:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5080:89:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 586,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "5049:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5049:121:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "5049:121:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5187:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 579,
												"id": 603,
												"nodeType": "Return",
												"src": "5180:11:4"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "4427:449:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 576,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4969:8:4"
									},
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 605,
												"src": "4903:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 605,
												"src": "4919:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4919:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 605,
												"src": "4938:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4938:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4902:51:4"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 605,
												"src": "4987:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4987:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4986:6:4"
									},
									"scope": 907,
									"src": "4881:317:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "5687:121:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 616,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5706:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5706:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 618,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5720:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 626,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "5768:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 619,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 427,
																			"src": "5729:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 622,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 620,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "5741:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5741:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5729:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 624,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 623,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "5755:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5729:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 233,
																"src": "5729:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5729:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "5697:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5697:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "5697:83:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5797:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 614,
												"id": 631,
												"nodeType": "Return",
												"src": "5790:11:4"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "5204:384:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 633,
												"src": "5620:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5620:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 633,
												"src": "5637:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5637:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5619:37:4"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 633,
												"src": "5681:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5681:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5680:6:4"
									},
									"scope": 907,
									"src": "5593:215:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "6394:167:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 644,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "6413:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6413:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 646,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "6427:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 654,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6475:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6492:39:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 647,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 427,
																			"src": "6436:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 650,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 648,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "6448:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6448:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6436:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 652,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 651,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "6462:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6436:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 278,
																"src": "6436:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6436:96:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 643,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "6404:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6404:129:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "6404:129:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6550:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 642,
												"id": 660,
												"nodeType": "Return",
												"src": "6543:11:4"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "5814:476:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "6322:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6322:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "6339:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6339:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6321:42:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "6388:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6388:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6387:6:4"
									},
									"scope": 907,
									"src": "6295:266:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "7122:443:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 673,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "7140:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7158:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7150:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 674,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7150:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7150:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7140:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7162:39:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7132:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7132:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "7132:70:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 683,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "7220:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7241:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7233:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 684,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7233:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7233:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7220:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7245:37:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7212:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7212:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "7212:71:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 693,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "7315:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 694,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "7323:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 695,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "7334:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 692,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "7294:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7294:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "7294:47:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 698,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "7352:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 700,
														"indexExpression": {
															"argumentTypes": null,
															"id": 699,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "7362:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7352:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 705,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "7394:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7402:40:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 701,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "7372:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 703,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 702,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "7382:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7372:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 278,
															"src": "7372:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7372:71:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7352:91:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "7352:91:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 710,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "7453:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 712,
														"indexExpression": {
															"argumentTypes": null,
															"id": 711,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "7463:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7453:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 717,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "7501:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 713,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "7476:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 715,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 714,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "7486:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7476:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 233,
															"src": "7476:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7476:32:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7453:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "7453:55:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 722,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "7532:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 723,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "7540:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 724,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "7551:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 721,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "7523:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7523:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "EmitStatement",
												"src": "7518:40:4"
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "6567:463:4",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 728,
												"src": "7054:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7054:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 728,
												"src": "7070:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7070:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 728,
												"src": "7089:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7089:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7053:51:4"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7122:0:4"
									},
									"scope": 907,
									"src": "7035:530:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "7900:305:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 737,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "7918:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7937:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7929:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 738,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7929:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7929:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7918:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7941:33:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7910:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7910:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "7910:65:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8015:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8007:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 747,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8007:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8007:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 751,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "8019:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 752,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "8028:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 746,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "7986:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7986:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "7986:49:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 755,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "8046:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 758,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "8078:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 756,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "8061:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 233,
															"src": "8061:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8061:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8046:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "8046:39:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 762,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "8095:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 764,
														"indexExpression": {
															"argumentTypes": null,
															"id": 763,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "8105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8095:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 769,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "8139:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 765,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "8116:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 767,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 766,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "8126:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8116:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 233,
															"src": "8116:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8116:30:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8095:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "8095:51:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8178:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8170:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 774,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8170:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8170:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 778,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "8182:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 779,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "8191:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 773,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "8161:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8161:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "EmitStatement",
												"src": "8156:42:4"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "7571:259:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 783,
												"src": "7850:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7850:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 783,
												"src": "7867:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7849:33:4"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7900:0:4"
									},
									"scope": 907,
									"src": "7835:370:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "8589:345:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 792,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "8607:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8626:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8618:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 793,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8618:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8618:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8607:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8630:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8599:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8599:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "8599:67:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 802,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "8698:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8715:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8707:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 803,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8707:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8707:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "8719:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 801,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "8677:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8677:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "8677:49:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 810,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "8737:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 812,
														"indexExpression": {
															"argumentTypes": null,
															"id": 811,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "8747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8737:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 817,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "8781:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8789:36:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 813,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "8758:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 815,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 814,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "8768:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8758:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 278,
															"src": "8758:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8758:68:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8737:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "8737:89:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 822,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "8836:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 825,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "8868:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 823,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "8851:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 250,
															"src": "8851:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8851:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8836:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "8836:39:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 830,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "8899:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8916:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8908:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 831,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8908:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8908:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 835,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "8920:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 829,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "8890:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8890:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "EmitStatement",
												"src": "8885:42:4"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "8211:308:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 839,
												"src": "8539:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8539:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 839,
												"src": "8556:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8556:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8538:33:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8589:0:4"
									},
									"scope": 907,
									"src": "8524:410:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "9442:257:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 850,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "9460:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 851,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9460:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:38:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 849,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9452:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9452:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "9452:68:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 860,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "9538:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9557:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9549:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 861,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9549:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9549:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9538:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9561:36:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 859,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9530:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9530:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "9530:68:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 869,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "9609:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 872,
															"indexExpression": {
																"argumentTypes": null,
																"id": 870,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "9621:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9609:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 873,
														"indexExpression": {
															"argumentTypes": null,
															"id": 871,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "9628:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9609:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 874,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "9639:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9609:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "9609:36:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 878,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "9669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 879,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "9676:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 880,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "9685:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 877,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "9660:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9660:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "EmitStatement",
												"src": "9655:37:4"
											}
										]
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "8940:414:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 884,
												"src": "9377:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9377:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 884,
												"src": "9392:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9392:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 884,
												"src": "9409:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9376:48:4"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9442:0:4"
									},
									"scope": 907,
									"src": "9359:340:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "10072:38:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 890,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "10082:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 891,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "10094:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10082:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "10082:21:4"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "9705:312:4",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 895,
												"src": "10046:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 886,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10046:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10045:17:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10072:0:4"
									},
									"scope": 907,
									"src": "10022:88:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "10786:3:4",
										"statements": []
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "10116:576:4",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 906,
												"src": "10727:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 906,
												"src": "10741:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10741:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 906,
												"src": "10753:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10726:42:4"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10786:0:4"
									},
									"scope": 907,
									"src": "10697:92:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 908,
							"src": "1345:9446:4"
						}
					],
					"src": "33:10759:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							985
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 909,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 910,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:5"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 916,
												"src": "269:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "268:9:5"
									},
									"scope": 985,
									"src": "223:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 924,
												"src": "380:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "379:17:5"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 924,
												"src": "420:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "419:9:5"
									},
									"scope": 985,
									"src": "361:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 934,
												"src": "667:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 934,
												"src": "686:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "666:35:5"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 934,
												"src": "720:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "719:6:5"
									},
									"scope": 985,
									"src": "649:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 944,
												"src": "1020:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 944,
												"src": "1035:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1019:32:5"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 944,
												"src": "1075:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1074:9:5"
									},
									"scope": 985,
									"src": "1001:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 954,
												"src": "1754:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 954,
												"src": "1771:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1753:33:5"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 954,
												"src": "1805:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1804:6:5"
									},
									"scope": 985,
									"src": "1737:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 966,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 966,
												"src": "2140:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 966,
												"src": "2156:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 966,
												"src": "2175:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2139:51:5"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 966,
												"src": "2209:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 963,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2209:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2208:6:5"
									},
									"scope": 985,
									"src": "2118:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "2221:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 975,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 975,
												"src": "2399:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 975,
												"src": "2421:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 975,
												"src": "2441:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2398:57:5"
									},
									"src": "2384:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "2462:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 984,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 984,
												"src": "2630:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 984,
												"src": "2653:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 984,
												"src": "2678:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2629:63:5"
									},
									"src": "2615:78:5"
								}
							],
							"scope": 986,
							"src": "129:2566:5"
						}
					],
					"src": "33:2663:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							1198
						]
					},
					"id": 1199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 988,
							"nodeType": "ImportDirective",
							"scope": 1199,
							"sourceUnit": 986,
							"src": "58:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 989,
							"nodeType": "ImportDirective",
							"scope": 1199,
							"sourceUnit": 401,
							"src": "81:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 990,
							"nodeType": "ImportDirective",
							"scope": 1199,
							"sourceUnit": 1403,
							"src": "115:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 991,
								"nodeType": "StructuredDocumentation",
								"src": "150:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1198,
							"linearizedBaseContracts": [
								1198
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 994,
									"libraryName": {
										"contractScope": null,
										"id": 992,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 400,
										"src": "638:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$400",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "632:27:6",
									"typeName": {
										"id": 993,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "651:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 997,
									"libraryName": {
										"contractScope": null,
										"id": 995,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1402,
										"src": "670:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1402",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "664:26:6",
									"typeName": {
										"id": 996,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "768:103:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1007,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "798:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1010,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 999,
																			"src": "828:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$985",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 934,
																		"src": "828:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "828:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1013,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "853:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1014,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "857:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1008,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "805:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "805:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "805:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1006,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "778:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "778:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "778:86:6"
											}
										]
									},
									"documentation": null,
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "718:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 998,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "718:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "732:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "744:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "717:41:6"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "768:0:6"
									},
									"scope": 1198,
									"src": "696:175:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "967:113:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1031,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "997:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1034,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1021,
																			"src": "1027:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$985",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 966,
																		"src": "1027:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1027:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1037,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "1056:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1038,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "1062:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1039,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "1066:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1032,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1004:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1004:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1004:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1030,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "977:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "977:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "977:96:6"
											}
										]
									},
									"documentation": null,
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1044,
												"src": "903:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1020,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "903:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1044,
												"src": "917:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1044,
												"src": "931:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1044,
												"src": "943:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "902:55:6"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "967:0:6"
									},
									"scope": 1198,
									"src": "877:203:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "1416:537:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1055,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "1705:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1714:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1705:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1058,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1704:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1063,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1745:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1198",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1198",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1062,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1737:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1061,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1737:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1064,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1737:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1065,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "1752:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1059,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1047,
																					"src": "1721:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$985",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 944,
																				"src": "1721:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1721:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1764:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1721:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1069,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1720:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1704:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:56:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1696:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1696:150:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "1696:150:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1075,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "1876:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1078,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "1906:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$985",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "1906:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1906:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1081,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "1930:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1082,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "1939:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1076,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1883:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1883:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1883:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1074,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "1856:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1856:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "1856:90:6"
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "1086:249:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1087,
												"src": "1361:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1046,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "1361:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1087,
												"src": "1375:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1087,
												"src": "1392:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1360:46:6"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1416:0:6"
									},
									"scope": 1198,
									"src": "1340:613:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "2045:197:6",
										"statements": [
											{
												"assignments": [
													1097
												],
												"declarations": [
													{
														"constant": false,
														"id": 1097,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1122,
														"src": "2055:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1096,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2055:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1109,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1107,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "2122:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1102,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2102:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1198",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1198",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2094:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1100,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2094:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2094:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1104,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "2109:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1098,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "2078:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "2078:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2078:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 233,
														"src": "2078:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2078:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2055:73:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1111,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "2158:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1114,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "2188:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$985",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "2188:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2188:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1117,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "2212:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1118,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "2221:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1112,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2165:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2165:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2165:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1110,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "2138:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2138:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "2138:97:6"
											}
										]
									},
									"documentation": null,
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1123,
												"src": "1990:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1088,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "1990:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1123,
												"src": "2004:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2004:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1123,
												"src": "2021:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1989:46:6"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2045:0:6"
									},
									"scope": 1198,
									"src": "1959:283:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "2334:242:6",
										"statements": [
											{
												"assignments": [
													1133
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1159,
														"src": "2344:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2344:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1146,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1143,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "2411:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2418:43:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1138,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2391:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1198",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1198",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2383:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1136,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2383:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2383:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1140,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "2398:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1134,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "2367:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "2367:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2367:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 278,
														"src": "2367:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2367:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2344:118:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1148,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "2492:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1151,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "2522:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$985",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "2522:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2522:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1154,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "2546:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1155,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "2555:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1149,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2499:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2499:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2499:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1147,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "2472:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2472:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "2472:97:6"
											}
										]
									},
									"documentation": null,
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1160,
												"src": "2279:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1124,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "2279:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1160,
												"src": "2293:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2293:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1160,
												"src": "2310:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2278:46:6"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2334:0:6"
									},
									"scope": 1198,
									"src": "2248:328:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "3029:681:6",
										"statements": [
											{
												"assignments": [
													1169
												],
												"declarations": [
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1196,
														"src": "3378:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1168,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3378:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1178,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1175,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "3432:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3438:34:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1172,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "3412:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3404:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1170,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3404:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3404:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1298,
														"src": "3404:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3404:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3378:95:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1179,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "3487:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3487:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3507:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3487:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1195,
												"nodeType": "IfStatement",
												"src": "3483:221:6",
												"trueBody": {
													"id": 1194,
													"nodeType": "Block",
													"src": "3510:194:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1186,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1169,
																				"src": "3627:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1188,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3640:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1187,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3640:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 1189,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3639:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1184,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3616:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3616:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3616:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3648:44:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1183,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3608:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3608:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1193,
															"nodeType": "ExpressionStatement",
															"src": "3608:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "2582:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1197,
												"src": "2988:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1162,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "2988:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1197,
												"src": "3002:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3002:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2987:33:6"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3029:0:6"
									},
									"scope": 1198,
									"src": "2959:751:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1199,
							"src": "608:3104:6"
						}
					],
					"src": "33:3680:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1402
						]
					},
					"id": 1403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1200,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1201,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1402,
							"linearizedBaseContracts": [
								1402
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "784:544:7",
										"statements": [
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1226,
														"src": "1036:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1209,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1036:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1036:16:7"
											},
											{
												"assignments": [
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1226,
														"src": "1062:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1212,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1062:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1215,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1084:66:7",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1062:88:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1225:36:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1227:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1251:7:7"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "1239:11:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:20:7"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "1227:8:7"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1204,
														"isOffset": false,
														"isSlot": false,
														"src": "1251:7:7",
														"valueSize": 1
													},
													{
														"declaration": 1210,
														"isOffset": false,
														"isSlot": false,
														"src": "1227:8:7",
														"valueSize": 1
													}
												],
												"id": 1216,
												"nodeType": "InlineAssembly",
												"src": "1216:45:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1217,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "1278:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1218,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "1290:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1278:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1220,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "1305:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1317:3:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1305:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1278:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1224,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1277:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1208,
												"id": 1225,
												"nodeType": "Return",
												"src": "1270:51:7"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "738:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "737:17:7"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "778:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "777:6:7"
									},
									"scope": 1402,
									"src": "718:610:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "2316:320:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2342:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1402",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1402",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2334:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2334:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2334:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2334:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1241,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "2359:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2334:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2367:31:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2326:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2326:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "2326:73:7"
											},
											{
												"assignments": [
													1247,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1247,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1260,
														"src": "2488:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1246,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2488:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1254,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2538:2:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1248,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1230,
																"src": "2506:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2506:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1250,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "2529:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2506:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2506:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2487:54:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "2559:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2568:60:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2551:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "2551:78:7"
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "1334:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1261,
												"src": "2264:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2264:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1261,
												"src": "2291:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2263:43:7"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2316:0:7"
									},
									"scope": 1402,
									"src": "2245:391:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "3466:82:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1272,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "3494:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1273,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "3502:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3508:32:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1271,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1278,
															1298
														],
														"referencedDeclaration": 1298,
														"src": "3481:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3481:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1270,
												"id": 1276,
												"nodeType": "Return",
												"src": "3474:67:7"
											}
										]
									},
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "2642:730:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1278,
												"src": "3399:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3399:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1278,
												"src": "3415:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3415:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3398:35:7"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1278,
												"src": "3452:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3452:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3451:14:7"
									},
									"scope": 1402,
									"src": "3377:171:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "3887:77:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1291,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "3927:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1292,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "3935:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3941:1:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1294,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3944:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1290,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "3904:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3904:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1289,
												"id": 1296,
												"nodeType": "Return",
												"src": "3897:60:7"
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "3554:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1298,
												"src": "3792:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3792:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1298,
												"src": "3808:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3808:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1298,
												"src": "3827:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1284,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3827:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3791:63:7"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1298,
												"src": "3873:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3873:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3872:14:7"
									},
									"scope": 1402,
									"src": "3770:194:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "4439:111:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1311,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "4478:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1312,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "4486:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1313,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "4492:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4499:43:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1310,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1318,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "4456:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4456:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1309,
												"id": 1316,
												"nodeType": "Return",
												"src": "4449:94:7"
											}
										]
									},
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "3970:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1318,
												"src": "4357:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4357:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1318,
												"src": "4373:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4373:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1318,
												"src": "4392:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4392:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4356:50:7"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1318,
												"src": "4425:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4425:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4424:14:7"
									},
									"scope": 1402,
									"src": "4326:224:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "4939:172:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1335,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4965:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1402",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1402",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4957:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1333,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4957:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4957:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4957:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1338,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "4982:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4957:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4989:40:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4949:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4949:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "4949:81:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1344,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "5070:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1345,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "5078:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1346,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "5084:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1347,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "5091:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1343,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "5047:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5047:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1331,
												"id": 1349,
												"nodeType": "Return",
												"src": "5040:64:7"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "4556:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1351,
												"src": "4829:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4829:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1351,
												"src": "4845:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4845:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1351,
												"src": "4864:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1351,
												"src": "4879:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1326,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4879:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4828:78:7"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1351,
												"src": "4925:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4925:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4924:14:7"
									},
									"scope": 1402,
									"src": "4798:313:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "5261:814:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1366,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "5290:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1365,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1227,
																"src": "5279:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5279:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5299:31:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5271:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5271:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "5271:60:7"
											},
											{
												"assignments": [
													1372,
													1374
												],
												"declarations": [
													{
														"constant": false,
														"id": 1372,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1400,
														"src": "5402:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1371,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5402:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1374,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1400,
														"src": "5416:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1373,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5416:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1381,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1379,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "5474:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1375,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "5443:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5443:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1377,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "5463:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5443:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5443:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5401:78:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1382,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1372,
													"src": "5493:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1398,
													"nodeType": "Block",
													"src": "5550:519:7",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1386,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1374,
																		"src": "5634:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5634:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5654:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5634:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1396,
																"nodeType": "Block",
																"src": "6006:53:7",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1393,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1359,
																					"src": "6031:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1392,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6024:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6024:20:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1395,
																		"nodeType": "ExpressionStatement",
																		"src": "6024:20:7"
																	}
																]
															},
															"id": 1397,
															"nodeType": "IfStatement",
															"src": "5630:429:7",
															"trueBody": {
																"id": 1391,
																"nodeType": "Block",
																"src": "5657:343:7",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "5841:145:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "5863:40:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "5892:10:7"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "5886:5:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5886:17:7"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "5867:15:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5935:2:7",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "5939:10:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5931:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5931:19:7"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "5952:15:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "5924:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5924:44:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5924:44:7"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1374,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5892:10:7",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1374,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5939:10:7",
																				"valueSize": 1
																			}
																		],
																		"id": 1390,
																		"nodeType": "InlineAssembly",
																		"src": "5832:154:7"
																	}
																]
															}
														}
													]
												},
												"id": 1399,
												"nodeType": "IfStatement",
												"src": "5489:580:7",
												"trueBody": {
													"id": 1385,
													"nodeType": "Block",
													"src": "5502:42:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1383,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "5523:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1363,
															"id": 1384,
															"nodeType": "Return",
															"src": "5516:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1401,
												"src": "5149:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1401,
												"src": "5165:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1354,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5165:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1401,
												"src": "5184:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1401,
												"src": "5202:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5202:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5148:81:7"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1401,
												"src": "5247:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5247:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5246:14:7"
									},
									"scope": 1402,
									"src": "5117:958:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1403,
							"src": "126:5951:7"
						}
					],
					"src": "33:6045:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1404,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1405,
								"nodeType": "StructuredDocumentation",
								"src": "58:750:8",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1442,
							"linearizedBaseContracts": [
								1442
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1408,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1442,
									"src": "1588:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1406,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1588:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 1407,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1628:1:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1411,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1442,
									"src": "1635:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1409,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1635:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 1410,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1671:1:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1413,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1442,
									"src": "1679:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1679:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1420,
										"nodeType": "Block",
										"src": "1733:39:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1416,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "1743:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1417,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "1753:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1743:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "1743:22:8"
											}
										]
									},
									"documentation": null,
									"id": 1421,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:2:8"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1733:0:8"
									},
									"scope": 1442,
									"src": "1709:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "2171:421:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1425,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "2260:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1426,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "2271:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2260:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2281:33:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2252:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2252:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "2252:63:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1431,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "2390:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1432,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "2400:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2390:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "2390:18:8"
											},
											{
												"id": 1435,
												"nodeType": "PlaceholderStatement",
												"src": "2419:1:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1436,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "2563:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1437,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "2573:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2563:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "2563:22:8"
											}
										]
									},
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "1778:364:8",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 1441,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2168:2:8"
									},
									"src": "2147:445:8",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1443,
							"src": "809:1785:8"
						}
					],
					"src": "33:2562:8"
				},
				"id": 8
			},
			"contracts/Mooniswap.sol": {
				"ast": {
					"absolutePath": "contracts/Mooniswap.sol",
					"exportedSymbols": {
						"IFactory": [
							1457
						],
						"Mooniswap": [
							2939
						],
						"VirtualBalance": [
							1592
						]
					},
					"id": 2940,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1445,
							"nodeType": "ImportDirective",
							"scope": 2940,
							"sourceUnit": 132,
							"src": "58:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1446,
							"nodeType": "ImportDirective",
							"scope": 2940,
							"sourceUnit": 1443,
							"src": "111:59:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/Math.sol",
							"file": "@openzeppelin/contracts/math/Math.sol",
							"id": 1447,
							"nodeType": "ImportDirective",
							"scope": 2940,
							"sourceUnit": 205,
							"src": "171:47:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 1448,
							"nodeType": "ImportDirective",
							"scope": 2940,
							"sourceUnit": 401,
							"src": "219:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1449,
							"nodeType": "ImportDirective",
							"scope": 2940,
							"sourceUnit": 908,
							"src": "271:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/UniERC20.sol",
							"file": "./libraries/UniERC20.sol",
							"id": 1450,
							"nodeType": "ImportDirective",
							"scope": 2940,
							"sourceUnit": 3457,
							"src": "327:34:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Sqrt.sol",
							"file": "./libraries/Sqrt.sol",
							"id": 1451,
							"nodeType": "ImportDirective",
							"scope": 2940,
							"sourceUnit": 3000,
							"src": "362:30:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1457,
							"linearizedBaseContracts": [
								1457
							],
							"name": "IFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ddca3f43",
									"id": 1456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:9"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1456,
												"src": "457:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "456:9:9"
									},
									"scope": 1457,
									"src": "420:46:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2940,
							"src": "395:73:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1592,
							"linearizedBaseContracts": [
								1592
							],
							"name": "VirtualBalance",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1460,
									"libraryName": {
										"contractScope": null,
										"id": 1458,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 400,
										"src": "506:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$400",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "500:27:9",
									"typeName": {
										"id": 1459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "519:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "VirtualBalance.Data",
									"id": 1465,
									"members": [
										{
											"constant": false,
											"id": 1462,
											"mutability": "mutable",
											"name": "balance",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1465,
											"src": "555:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint216",
												"typeString": "uint216"
											},
											"typeName": {
												"id": 1461,
												"name": "uint216",
												"nodeType": "ElementaryTypeName",
												"src": "555:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1464,
											"mutability": "mutable",
											"name": "time",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1465,
											"src": "580:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 1463,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "580:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Data",
									"nodeType": "StructDefinition",
									"scope": 1592,
									"src": "533:65:9",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1e9d4904",
									"id": 1468,
									"mutability": "constant",
									"name": "DECAY_PERIOD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1592,
									"src": "604:48:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1466,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "604:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "35",
										"id": 1467,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "643:9:9",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "732:93:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1475,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "742:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
																"typeString": "struct VirtualBalance.Data storage pointer"
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1462,
														"src": "742:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1480,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "765:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "757:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint216_$",
																"typeString": "type(uint216)"
															},
															"typeName": {
																"id": 1478,
																"name": "uint216",
																"nodeType": "ElementaryTypeName",
																"src": "757:7:9",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "757:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "742:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "742:31:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1484,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "783:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
																"typeString": "struct VirtualBalance.Data storage pointer"
															}
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1464,
														"src": "783:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1489,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "802:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "802:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "795:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint40_$",
																"typeString": "type(uint40)"
															},
															"typeName": {
																"id": 1487,
																"name": "uint40",
																"nodeType": "ElementaryTypeName",
																"src": "795:6:9",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "795:23:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "783:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "783:35:9"
											}
										]
									},
									"documentation": null,
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1495,
												"src": "672:32:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
													"typeString": "struct VirtualBalance.Data"
												},
												"typeName": {
													"contractScope": null,
													"id": 1469,
													"name": "VirtualBalance.Data",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1465,
													"src": "672:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
														"typeString": "struct VirtualBalance.Data"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1495,
												"src": "706:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "671:51:9"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "732:0:9"
									},
									"scope": 1592,
									"src": "659:166:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "911:54:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1503,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "925:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
																"typeString": "struct VirtualBalance.Data storage pointer"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1505,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1497,
																	"src": "939:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
																		"typeString": "struct VirtualBalance.Data storage pointer"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1506,
																	"name": "realBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1499,
																	"src": "945:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
																		"typeString": "struct VirtualBalance.Data storage pointer"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1504,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "931:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Data_$1465_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (struct VirtualBalance.Data memory,uint256) view returns (uint256)"
																}
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "931:26:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
																"typeString": "struct VirtualBalance.Data storage pointer"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1502,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "921:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Data_$1465_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (struct VirtualBalance.Data storage pointer,uint256)"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "921:37:9"
											}
										]
									},
									"documentation": null,
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1511,
												"src": "847:32:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
													"typeString": "struct VirtualBalance.Data"
												},
												"typeName": {
													"contractScope": null,
													"id": 1496,
													"name": "VirtualBalance.Data",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1465,
													"src": "847:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
														"typeString": "struct VirtualBalance.Data"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "realBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1511,
												"src": "881:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:55:9"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:9"
									},
									"scope": 1592,
									"src": "831:134:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1542,
										"nodeType": "Block",
										"src": "1078:92:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1523,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "1092:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
																"typeString": "struct VirtualBalance.Data storage pointer"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1538,
																	"name": "denom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "1156:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1534,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1148:1:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1532,
																					"name": "denom",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1519,
																					"src": "1138:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 250,
																				"src": "1138:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1138:12:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1529,
																					"name": "num",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1517,
																					"src": "1129:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1525,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1513,
																							"src": "1106:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
																								"typeString": "struct VirtualBalance.Data storage pointer"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 1526,
																							"name": "realBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1515,
																							"src": "1112:11:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
																								"typeString": "struct VirtualBalance.Data storage pointer"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1524,
																						"name": "current",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1591,
																						"src": "1098:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_struct$_Data_$1465_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (struct VirtualBalance.Data memory,uint256) view returns (uint256)"
																						}
																					},
																					"id": 1527,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1098:26:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 313,
																				"src": "1098:30:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1098:35:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 233,
																		"src": "1098:39:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1098:53:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 330,
																"src": "1098:57:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1098:64:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
																"typeString": "struct VirtualBalance.Data storage pointer"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1522,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "1088:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Data_$1465_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (struct VirtualBalance.Data storage pointer,uint256)"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1088:75:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1541,
												"nodeType": "ExpressionStatement",
												"src": "1088:75:9"
											}
										]
									},
									"documentation": null,
									"id": 1543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "scale",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1543,
												"src": "986:32:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
													"typeString": "struct VirtualBalance.Data"
												},
												"typeName": {
													"contractScope": null,
													"id": 1512,
													"name": "VirtualBalance.Data",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1465,
													"src": "986:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
														"typeString": "struct VirtualBalance.Data"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "realBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1543,
												"src": "1020:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "num",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1543,
												"src": "1041:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "denom",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1543,
												"src": "1054:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "985:83:9"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1078:0:9"
									},
									"scope": 1592,
									"src": "971:199:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "1278:278:9",
										"statements": [
											{
												"assignments": [
													1553
												],
												"declarations": [
													{
														"constant": false,
														"id": 1553,
														"mutability": "mutable",
														"name": "timePassed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1590,
														"src": "1288:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1288:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1564,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1556,
															"name": "DECAY_PERIOD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "1318:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1560,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "1352:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Data_$1465_memory_ptr",
																			"typeString": "struct VirtualBalance.Data memory"
																		}
																	},
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "time",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1464,
																	"src": "1352:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1557,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "1332:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1332:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 250,
																"src": "1332:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1332:30:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1554,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "1309:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$204_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 170,
														"src": "1309:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1309:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1288:75:9"
											},
											{
												"assignments": [
													1566
												],
												"declarations": [
													{
														"constant": false,
														"id": 1566,
														"mutability": "mutable",
														"name": "timeRemain",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1590,
														"src": "1373:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1565,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1373:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1571,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1569,
															"name": "timePassed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "1411:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1567,
															"name": "DECAY_PERIOD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "1394:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "1394:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1394:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1373:49:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1587,
															"name": "DECAY_PERIOD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "1536:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1583,
																			"name": "timePassed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1553,
																			"src": "1510:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1581,
																			"name": "realBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "1494:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 313,
																		"src": "1494:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1494:27:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1578,
																			"name": "timeRemain",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "1465:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1574,
																						"name": "self",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1545,
																						"src": "1447:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Data_$1465_memory_ptr",
																							"typeString": "struct VirtualBalance.Data memory"
																						}
																					},
																					"id": 1575,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1462,
																					"src": "1447:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint216",
																						"typeString": "uint216"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint216",
																						"typeString": "uint216"
																					}
																				],
																				"id": 1573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1439:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1572,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1439:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1439:21:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 313,
																		"src": "1439:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1439:37:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 233,
																"src": "1439:41:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1439:92:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 330,
														"src": "1439:96:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1439:110:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1551,
												"id": 1589,
												"nodeType": "Return",
												"src": "1432:117:9"
											}
										]
									},
									"documentation": null,
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1591,
												"src": "1193:31:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Data_$1465_memory_ptr",
													"typeString": "struct VirtualBalance.Data"
												},
												"typeName": {
													"contractScope": null,
													"id": 1544,
													"name": "VirtualBalance.Data",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1465,
													"src": "1193:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
														"typeString": "struct VirtualBalance.Data"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "realBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1591,
												"src": "1226:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1192:54:9"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1591,
												"src": "1269:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1268:9:9"
									},
									"scope": 1592,
									"src": "1176:380:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2940,
							"src": "471:1087:9"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1593,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 907,
										"src": "1583:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$907",
											"typeString": "contract ERC20"
										}
									},
									"id": 1594,
									"nodeType": "InheritanceSpecifier",
									"src": "1583:5:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1595,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1442,
										"src": "1590:15:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$1442",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 1596,
									"nodeType": "InheritanceSpecifier",
									"src": "1590:15:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1597,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 131,
										"src": "1607:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$131",
											"typeString": "contract Ownable"
										}
									},
									"id": 1598,
									"nodeType": "InheritanceSpecifier",
									"src": "1607:7:9"
								}
							],
							"contractDependencies": [
								22,
								131,
								907,
								985,
								1442
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2939,
							"linearizedBaseContracts": [
								2939,
								131,
								1442,
								907,
								985,
								22
							],
							"name": "Mooniswap",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1601,
									"libraryName": {
										"contractScope": null,
										"id": 1599,
										"name": "Sqrt",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2999,
										"src": "1627:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Sqrt_$2999",
											"typeString": "library Sqrt"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1621:23:9",
									"typeName": {
										"id": 1600,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1636:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1604,
									"libraryName": {
										"contractScope": null,
										"id": 1602,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 400,
										"src": "1655:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$400",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1649:27:9",
									"typeName": {
										"id": 1603,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1668:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1607,
									"libraryName": {
										"contractScope": null,
										"id": 1605,
										"name": "UniERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3456,
										"src": "1687:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UniERC20_$3456",
											"typeString": "library UniERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1681:26:9",
									"typeName": {
										"contractScope": null,
										"id": 1606,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 985,
										"src": "1700:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$985",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 1610,
									"libraryName": {
										"contractScope": null,
										"id": 1608,
										"name": "VirtualBalance",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1592,
										"src": "1718:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_VirtualBalance_$1592",
											"typeString": "library VirtualBalance"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1712:45:9",
									"typeName": {
										"contractScope": null,
										"id": 1609,
										"name": "VirtualBalance.Data",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1465,
										"src": "1737:19:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
											"typeString": "struct VirtualBalance.Data"
										}
									}
								},
								{
									"canonicalName": "Mooniswap.Balances",
									"id": 1615,
									"members": [
										{
											"constant": false,
											"id": 1612,
											"mutability": "mutable",
											"name": "src",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1615,
											"src": "1789:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1611,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1789:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1614,
											"mutability": "mutable",
											"name": "dst",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1615,
											"src": "1810:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1613,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1810:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Balances",
									"nodeType": "StructDefinition",
									"scope": 2939,
									"src": "1763:65:9",
									"visibility": "public"
								},
								{
									"canonicalName": "Mooniswap.SwapVolumes",
									"id": 1620,
									"members": [
										{
											"constant": false,
											"id": 1617,
											"mutability": "mutable",
											"name": "confirmed",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1620,
											"src": "1863:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1616,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1863:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1619,
											"mutability": "mutable",
											"name": "result",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1620,
											"src": "1890:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1618,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1890:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "SwapVolumes",
									"nodeType": "StructDefinition",
									"scope": 2939,
									"src": "1834:77:9",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1626,
									"name": "Deposited",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1626,
												"src": "1942:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1626,
												"src": "1975:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1932:63:9"
									},
									"src": "1917:79:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1632,
									"name": "Withdrawn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1632,
												"src": "2027:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1632,
												"src": "2060:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2017:63:9"
									},
									"src": "2002:79:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1652,
									"name": "Swapped",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "2110:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2110:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"indexed": true,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "2143:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"indexed": true,
												"mutability": "mutable",
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "2172:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "2201:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"indexed": false,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "2225:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"indexed": false,
												"mutability": "mutable",
												"name": "srcBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "2249:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"indexed": false,
												"mutability": "mutable",
												"name": "dstBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "2277:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "2305:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"indexed": false,
												"mutability": "mutable",
												"name": "referral",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "2334:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2334:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2100:256:9"
									},
									"src": "2087:270:9"
								},
								{
									"constant": true,
									"functionSelector": "b21b5a21",
									"id": 1655,
									"mutability": "constant",
									"name": "REFERRAL_SHARE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2939,
									"src": "2363:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1653,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2363:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3230",
										"id": 1654,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2404:2:9",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "baf13a0a",
									"id": 1658,
									"mutability": "constant",
									"name": "BASE_SUPPLY",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2939,
									"src": "2443:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1656,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2443:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31303030",
										"id": 1657,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2481:4:9",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d73792a9",
									"id": 1661,
									"mutability": "constant",
									"name": "FEE_DENOMINATOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2939,
									"src": "2525:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1659,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2525:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31653138",
										"id": 1660,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2567:4:9",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3644e515",
									"id": 1663,
									"mutability": "mutable",
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2939,
									"src": "2581:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1662,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2581:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "30adf81f",
									"id": 1666,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2939,
									"src": "2722:108:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1664,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2722:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 1665,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2764:66:9",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 1668,
									"mutability": "mutable",
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2939,
									"src": "2838:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IFactory_$1457",
										"typeString": "contract IFactory"
									},
									"typeName": {
										"contractScope": null,
										"id": 1667,
										"name": "IFactory",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1457,
										"src": "2838:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFactory_$1457",
											"typeString": "contract IFactory"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f64b2be",
									"id": 1671,
									"mutability": "mutable",
									"name": "tokens",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2939,
									"src": "2867:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage",
										"typeString": "contract IERC20[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 1669,
											"name": "IERC20",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 985,
											"src": "2867:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$985",
												"typeString": "contract IERC20"
											}
										},
										"id": 1670,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "2867:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage_ptr",
											"typeString": "contract IERC20[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ecebe00",
									"id": 1675,
									"mutability": "mutable",
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2939,
									"src": "2895:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1674,
										"keyType": {
											"id": 1672,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2903:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2895:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1673,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2914:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "19f37361",
									"id": 1679,
									"mutability": "mutable",
									"name": "isToken",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2939,
									"src": "2939:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_bool_$",
										"typeString": "mapping(contract IERC20 => bool)"
									},
									"typeName": {
										"id": 1678,
										"keyType": {
											"contractScope": null,
											"id": 1676,
											"name": "IERC20",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 985,
											"src": "2947:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$985",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Mapping",
										"src": "2939:23:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_bool_$",
											"typeString": "mapping(contract IERC20 => bool)"
										},
										"valueType": {
											"id": 1677,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2957:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b1ec4c40",
									"id": 1683,
									"mutability": "mutable",
									"name": "volumes",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2939,
									"src": "2983:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_SwapVolumes_$1620_storage_$",
										"typeString": "mapping(contract IERC20 => struct Mooniswap.SwapVolumes)"
									},
									"typeName": {
										"id": 1682,
										"keyType": {
											"contractScope": null,
											"id": 1680,
											"name": "IERC20",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 985,
											"src": "2991:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$985",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Mapping",
										"src": "2983:30:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_SwapVolumes_$1620_storage_$",
											"typeString": "mapping(contract IERC20 => struct Mooniswap.SwapVolumes)"
										},
										"valueType": {
											"contractScope": null,
											"id": 1681,
											"name": "SwapVolumes",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1620,
											"src": "3001:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_SwapVolumes_$1620_storage_ptr",
												"typeString": "struct Mooniswap.SwapVolumes"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6edc2c09",
									"id": 1687,
									"mutability": "mutable",
									"name": "virtualBalancesForAddition",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2939,
									"src": "3034:72:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
										"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data)"
									},
									"typeName": {
										"id": 1686,
										"keyType": {
											"contractScope": null,
											"id": 1684,
											"name": "IERC20",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 985,
											"src": "3042:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$985",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Mapping",
										"src": "3034:38:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
											"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data)"
										},
										"valueType": {
											"contractScope": null,
											"id": 1685,
											"name": "VirtualBalance.Data",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1465,
											"src": "3052:19:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
												"typeString": "struct VirtualBalance.Data"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5ed9156d",
									"id": 1691,
									"mutability": "mutable",
									"name": "virtualBalancesForRemoval",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2939,
									"src": "3112:71:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
										"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data)"
									},
									"typeName": {
										"id": 1690,
										"keyType": {
											"contractScope": null,
											"id": 1688,
											"name": "IERC20",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 985,
											"src": "3120:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$985",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Mapping",
										"src": "3112:38:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
											"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data)"
										},
										"valueType": {
											"contractScope": null,
											"id": 1689,
											"name": "VirtualBalance.Data",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1465,
											"src": "3130:19:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Data_$1465_storage_ptr",
												"typeString": "struct VirtualBalance.Data"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "3249:467:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1698,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "3259:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFactory_$1457",
															"typeString": "contract IFactory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1700,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "3278:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3278:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 1699,
															"name": "IFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "3269:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IFactory_$1457_$",
																"typeString": "type(contract IFactory)"
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3269:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFactory_$1457",
															"typeString": "contract IFactory"
														}
													},
													"src": "3259:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFactory_$1457",
														"typeString": "contract IFactory"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "3259:30:9"
											},
											{
												"assignments": [
													1706
												],
												"declarations": [
													{
														"constant": false,
														"id": 1706,
														"mutability": "mutable",
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1738,
														"src": "3299:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1705,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3299:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1707,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3299:12:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3330:44:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3344:20:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "3355:7:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3355:9:9"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nodeType": "YulIdentifier",
																	"src": "3344:7:9"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1706,
														"isOffset": false,
														"isSlot": false,
														"src": "3344:7:9",
														"valueSize": 1
													}
												],
												"id": 1708,
												"nodeType": "InlineAssembly",
												"src": "3321:53:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1709,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "3383:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 1714,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3463:84:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 1713,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "3453:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3453:95:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1719,
																							"name": "name",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 465,
																							"src": "3582:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																								"typeString": "function () view returns (string memory)"
																							}
																						},
																						"id": 1720,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3582:6:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 1718,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3576:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1717,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "3576:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 1721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3576:13:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1716,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "3566:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3566:24:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 1726,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3624:3:9",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 1725,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3618:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1724,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "3618:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 1727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3618:10:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1723,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "3608:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3608:21:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1729,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "3647:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1732,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "3680:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Mooniswap_$2939",
																					"typeString": "contract Mooniswap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Mooniswap_$2939",
																					"typeString": "contract Mooniswap"
																				}
																			],
																			"id": 1731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3672:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3672:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3672:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1711,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "3425:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3425:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3425:274:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1710,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -8,
															"src": "3402:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3402:307:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3383:326:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "3383:326:9"
											}
										]
									},
									"documentation": null,
									"id": 1739,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "4c502d4e414d45",
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3225:9:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7c2fd6d816ea9e3aaf8e90b8f5b5280563696c4c20f542479be5c8aaf93664f0",
														"typeString": "literal_string \"LP-NAME\""
													},
													"value": "LP-NAME"
												},
												{
													"argumentTypes": null,
													"hexValue": "534f4d455448494e47",
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3236:11:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f5e6c7b2b825c822ece2b9a176346acfe4b92dab3e3ded71a5f34563a95b261b",
														"typeString": "literal_string \"SOMETHING\""
													},
													"value": "SOMETHING"
												}
											],
											"id": 1696,
											"modifierName": {
												"argumentTypes": null,
												"id": 1693,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 907,
												"src": "3219:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$907_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3219:29:9"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3201:2:9"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3249:0:9"
									},
									"scope": 2939,
									"src": "3190:526:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1795,
										"nodeType": "Block",
										"src": "3780:379:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1746,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "3804:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
																		"typeString": "contract IERC20[] memory"
																	}
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3804:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3821:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3804:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d6f6f6e69737761703a206f6e6c79203220746f6b656e7320616c6c6f776564",
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3824:34:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d14b38ae438db37f741a5e295def199fdc657f2ed43359f0c250c2d30a5c46f5",
																"typeString": "literal_string \"Mooniswap: only 2 tokens allowed\""
															},
															"value": "Mooniswap: only 2 tokens allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d14b38ae438db37f741a5e295def199fdc657f2ed43359f0c250c2d30a5c46f5",
																"typeString": "literal_string \"Mooniswap: only 2 tokens allowed\""
															}
														],
														"id": 1745,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3796:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3796:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "3796:63:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1753,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "3924:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFactory_$1457",
															"typeString": "contract IFactory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1755,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "3943:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3943:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 1754,
															"name": "IFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "3934:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IFactory_$1457_$",
																"typeString": "type(contract IFactory)"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3934:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFactory_$1457",
															"typeString": "contract IFactory"
														}
													},
													"src": "3924:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFactory_$1457",
														"typeString": "contract IFactory"
													}
												},
												"id": 1759,
												"nodeType": "ExpressionStatement",
												"src": "3924:30:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1760,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "3964:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage",
															"typeString": "contract IERC20[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1761,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "3973:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
															"typeString": "contract IERC20[] memory"
														}
													},
													"src": "3964:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage",
														"typeString": "contract IERC20[] storage ref"
													}
												},
												"id": 1763,
												"nodeType": "ExpressionStatement",
												"src": "3964:15:9"
											},
											{
												"body": {
													"id": 1793,
													"nodeType": "Block",
													"src": "4030:123:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "4052:19:9",
																		"subExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1776,
																				"name": "isToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1679,
																				"src": "4053:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_bool_$",
																					"typeString": "mapping(contract IERC20 => bool)"
																				}
																			},
																			"id": 1780,
																			"indexExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1777,
																					"name": "assets",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1742,
																					"src": "4061:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
																						"typeString": "contract IERC20[] memory"
																					}
																				},
																				"id": 1779,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1778,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1765,
																					"src": "4068:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4061:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$985",
																					"typeString": "contract IERC20"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4053:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4d6f6f6e69737761703a206475706c696361746520746f6b656e73",
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4073:29:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_547823f16aa68ed72eaba26635066d8a04b97b159dc2bd42bd24bd95e9cdacb6",
																			"typeString": "literal_string \"Mooniswap: duplicate tokens\""
																		},
																		"value": "Mooniswap: duplicate tokens"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_547823f16aa68ed72eaba26635066d8a04b97b159dc2bd42bd24bd95e9cdacb6",
																			"typeString": "literal_string \"Mooniswap: duplicate tokens\""
																		}
																	],
																	"id": 1775,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "4044:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4044:59:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1784,
															"nodeType": "ExpressionStatement",
															"src": "4044:59:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1785,
																		"name": "isToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1679,
																		"src": "4117:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_bool_$",
																			"typeString": "mapping(contract IERC20 => bool)"
																		}
																	},
																	"id": 1789,
																	"indexExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1786,
																			"name": "assets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "4125:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
																				"typeString": "contract IERC20[] memory"
																			}
																		},
																		"id": 1788,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1787,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1765,
																			"src": "4132:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4125:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4117:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4138:4:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4117:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1792,
															"nodeType": "ExpressionStatement",
															"src": "4117:25:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1768,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1765,
														"src": "4006:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1769,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "4010:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
																"typeString": "contract IERC20[] memory"
															}
														},
														"id": 1770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4010:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4006:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1794,
												"initializationExpression": {
													"assignments": [
														1765
													],
													"declarations": [
														{
															"constant": false,
															"id": 1765,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1794,
															"src": "3994:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1764,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3994:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1767,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4003:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3994:10:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4025:3:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 1772,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "4025:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1774,
													"nodeType": "ExpressionStatement",
													"src": "4025:3:9"
												},
												"nodeType": "ForStatement",
												"src": "3989:164:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "a224cee7",
									"id": 1796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1796,
												"src": "3747:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"contractScope": null,
														"id": 1740,
														"name": "IERC20",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 985,
														"src": "3747:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$985",
															"typeString": "contract IERC20"
														}
													},
													"id": 1741,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3747:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3746:24:9"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3780:0:9"
									},
									"scope": 2939,
									"src": "3727:432:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "4209:37:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1801,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "4226:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFactory_$1457",
																"typeString": "contract IFactory"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1456,
														"src": "4226:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4226:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1800,
												"id": 1804,
												"nodeType": "Return",
												"src": "4219:20:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ddca3f43",
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4177:2:9"
									},
									"returnParameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1806,
												"src": "4200:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4200:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4199:9:9"
									},
									"scope": 2939,
									"src": "4165:81:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "4312:30:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1812,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1671,
													"src": "4329:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage",
														"typeString": "contract IERC20[] storage ref"
													}
												},
												"functionReturnParameters": 1811,
												"id": 1813,
												"nodeType": "Return",
												"src": "4322:13:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "aa6ca808",
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4270:2:9"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1815,
												"src": "4295:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"contractScope": null,
														"id": 1808,
														"name": "IERC20",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 985,
														"src": "4295:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$985",
															"typeString": "contract IERC20"
														}
													},
													"id": 1809,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4295:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4294:17:9"
									},
									"scope": 2939,
									"src": "4252:90:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "4402:51:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1820,
														"name": "VirtualBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "4419:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_VirtualBalance_$1592_$",
															"typeString": "type(library VirtualBalance)"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "DECAY_PERIOD",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1468,
													"src": "4419:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1819,
												"id": 1822,
												"nodeType": "Return",
												"src": "4412:34:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "48d67e1b",
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decayPeriod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4368:2:9"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "4393:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4393:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4392:9:9"
									},
									"scope": 2939,
									"src": "4348:105:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "4533:154:9",
										"statements": [
											{
												"assignments": [
													1832
												],
												"declarations": [
													{
														"constant": false,
														"id": 1832,
														"mutability": "mutable",
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1852,
														"src": "4543:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1831,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1840,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1837,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "4588:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Mooniswap_$2939",
																		"typeString": "contract Mooniswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Mooniswap_$2939",
																		"typeString": "contract Mooniswap"
																	}
																],
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4580:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1835,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4580:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4580:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1833,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "4561:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "uniBalanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3053,
														"src": "4561:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$985_$",
															"typeString": "function (contract IERC20,address) view returns (uint256)"
														}
													},
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4561:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:51:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1847,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1832,
																	"src": "4662:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1843,
																		"name": "virtualBalancesForAddition",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "4620:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
																			"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data storage ref)"
																		}
																	},
																	"id": 1845,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1844,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1826,
																		"src": "4647:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4620:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Data_$1465_storage",
																		"typeString": "struct VirtualBalance.Data storage ref"
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1591,
																"src": "4620:41:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Data_$1465_memory_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_Data_$1465_memory_ptr_$",
																	"typeString": "function (struct VirtualBalance.Data memory,uint256) view returns (uint256)"
																}
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4620:50:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1849,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "4672:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1841,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "4611:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$204_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 152,
														"src": "4611:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4611:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1830,
												"id": 1851,
												"nodeType": "Return",
												"src": "4604:76:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d7d3aab5",
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceForAddition",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1853,
												"src": "4490:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1825,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "4490:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4489:14:9"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1853,
												"src": "4524:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4524:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4523:9:9"
									},
									"scope": 2939,
									"src": "4459:228:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "4766:153:9",
										"statements": [
											{
												"assignments": [
													1861
												],
												"declarations": [
													{
														"constant": false,
														"id": 1861,
														"mutability": "mutable",
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1881,
														"src": "4776:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1860,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4776:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1869,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1866,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "4821:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Mooniswap_$2939",
																		"typeString": "contract Mooniswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Mooniswap_$2939",
																		"typeString": "contract Mooniswap"
																	}
																],
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4813:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1864,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4813:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4813:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1862,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "4794:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														"id": 1863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "uniBalanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3053,
														"src": "4794:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$985_$",
															"typeString": "function (contract IERC20,address) view returns (uint256)"
														}
													},
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4794:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4776:51:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1876,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "4894:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1872,
																		"name": "virtualBalancesForRemoval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "4853:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
																			"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data storage ref)"
																		}
																	},
																	"id": 1874,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1873,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1855,
																		"src": "4879:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4853:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Data_$1465_storage",
																		"typeString": "struct VirtualBalance.Data storage ref"
																	}
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1591,
																"src": "4853:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Data_$1465_memory_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_Data_$1465_memory_ptr_$",
																	"typeString": "function (struct VirtualBalance.Data memory,uint256) view returns (uint256)"
																}
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4853:49:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1878,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1861,
															"src": "4904:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1870,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "4844:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$204_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 170,
														"src": "4844:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4844:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1859,
												"id": 1880,
												"nodeType": "Return",
												"src": "4837:75:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e7ff42c9",
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceForRemoval",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1882,
												"src": "4723:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1854,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "4723:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4722:14:9"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1882,
												"src": "4757:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4757:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4756:9:9"
									},
									"scope": 2939,
									"src": "4693:226:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1905,
										"nodeType": "Block",
										"src": "5015:107:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1894,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "5043:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"id": 1895,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "5048:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"id": 1896,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "5053:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1898,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1884,
																	"src": "5083:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1897,
																"name": "getBalanceForAddition",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "5061:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$returns$_t_uint256_$",
																	"typeString": "function (contract IERC20) view returns (uint256)"
																}
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5061:26:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1901,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "5110:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1900,
																"name": "getBalanceForRemoval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1882,
																"src": "5089:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$returns$_t_uint256_$",
																	"typeString": "function (contract IERC20) view returns (uint256)"
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5089:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1893,
														"name": "_getReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "5032:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$_t_contract$_IERC20_$985_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (contract IERC20,contract IERC20,uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5032:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1892,
												"id": 1904,
												"nodeType": "Return",
												"src": "5025:90:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1e1401f8",
									"id": 1906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1906,
												"src": "4944:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1883,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "4944:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1906,
												"src": "4956:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1885,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "4956:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1906,
												"src": "4968:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4968:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4943:40:9"
									},
									"returnParameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1906,
												"src": "5006:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5006:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5005:9:9"
									},
									"scope": 2939,
									"src": "4925:197:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2274,
										"nodeType": "Block",
										"src": "5262:2455:9",
										"statements": [
											{
												"assignments": [
													1922
												],
												"declarations": [
													{
														"constant": false,
														"id": 1922,
														"mutability": "mutable",
														"name": "_tokens",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2274,
														"src": "5272:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
															"typeString": "contract IERC20[]"
														},
														"typeName": {
															"baseType": {
																"contractScope": null,
																"id": 1920,
																"name": "IERC20",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 985,
																"src": "5272:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1921,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "5272:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage_ptr",
																"typeString": "contract IERC20[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1924,
												"initialValue": {
													"argumentTypes": null,
													"id": 1923,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1671,
													"src": "5298:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage",
														"typeString": "contract IERC20[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5272:32:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1926,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1909,
																	"src": "5322:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5322:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1928,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1922,
																	"src": "5340:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
																		"typeString": "contract IERC20[] memory"
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5340:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5322:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d6f6f6e69737761703a2077726f6e6720616d6f756e7473206c656e677468",
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5356:33:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_732aed2b6df6ffcd35ca028be2c1878a3b744baaac89231d1c939c496c50a8cf",
																"typeString": "literal_string \"Mooniswap: wrong amounts length\""
															},
															"value": "Mooniswap: wrong amounts length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_732aed2b6df6ffcd35ca028be2c1878a3b744baaac89231d1c939c496c50a8cf",
																"typeString": "literal_string \"Mooniswap: wrong amounts length\""
															}
														],
														"id": 1925,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5314:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5314:76:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1933,
												"nodeType": "ExpressionStatement",
												"src": "5314:76:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1935,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "5408:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5408:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"condition": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1937,
																						"name": "_tokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1922,
																						"src": "5422:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
																							"typeString": "contract IERC20[] memory"
																						}
																					},
																					"id": 1939,
																					"indexExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 1938,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5430:1:9",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5422:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$985",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "isETH",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3029,
																				"src": "5422:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$985_$returns$_t_bool_$bound_to$_t_contract$_IERC20_$985_$",
																					"typeString": "function (contract IERC20) pure returns (bool)"
																				}
																			},
																			"id": 1941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5422:18:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"condition": {
																						"argumentTypes": null,
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"argumentTypes": null,
																								"baseExpression": {
																									"argumentTypes": null,
																									"id": 1945,
																									"name": "_tokens",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1922,
																									"src": "5457:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
																										"typeString": "contract IERC20[] memory"
																									}
																								},
																								"id": 1947,
																								"indexExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 1946,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5465:1:9",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5457:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$985",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 1948,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "isETH",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3029,
																							"src": "5457:16:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$985_$returns$_t_bool_$bound_to$_t_contract$_IERC20_$985_$",
																								"typeString": "function (contract IERC20) pure returns (bool)"
																							}
																						},
																						"id": 1949,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5457:18:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 1953,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5491:1:9",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"id": 1954,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "Conditional",
																					"src": "5457:35:9",
																					"trueExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1950,
																							"name": "amounts",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1909,
																							"src": "5478:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																								"typeString": "uint256[] calldata"
																							}
																						},
																						"id": 1952,
																						"indexExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1951,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5486:1:9",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5478:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1955,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5456:37:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "5422:71:9",
																		"trueExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1942,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1909,
																				"src": "5443:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1944,
																			"indexExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5451:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5443:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1957,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5421:73:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5408:86:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d6f6f6e69737761703a2077726f6e672076616c7565207573616765",
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5496:30:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a46874337e04f5973e81e0ae555d34c1cb1861f3f6823e991de227eba323bc91",
																"typeString": "literal_string \"Mooniswap: wrong value usage\""
															},
															"value": "Mooniswap: wrong value usage"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a46874337e04f5973e81e0ae555d34c1cb1861f3f6823e991de227eba323bc91",
																"typeString": "literal_string \"Mooniswap: wrong value usage\""
															}
														],
														"id": 1934,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5400:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5400:127:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1961,
												"nodeType": "ExpressionStatement",
												"src": "5400:127:9"
											},
											{
												"assignments": [
													1966
												],
												"declarations": [
													{
														"constant": false,
														"id": 1966,
														"mutability": "mutable",
														"name": "realBalances",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2274,
														"src": "5538:29:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1964,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5538:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1965,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "5538:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1973,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1970,
																"name": "amounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "5584:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																	"typeString": "uint256[] calldata"
																}
															},
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5584:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5570:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1967,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5574:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1968,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "5574:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5570:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5538:61:9"
											},
											{
												"body": {
													"id": 2010,
													"nodeType": "Block",
													"src": "5656:121:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1985,
																		"name": "realBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "5670:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1987,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1986,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1975,
																		"src": "5683:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5670:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1998,
																							"name": "_tokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1922,
																							"src": "5731:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
																								"typeString": "contract IERC20[] memory"
																							}
																						},
																						"id": 2000,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1999,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1975,
																							"src": "5739:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5731:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$985",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 2001,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isETH",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3029,
																					"src": "5731:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$985_$returns$_t_bool_$bound_to$_t_contract$_IERC20_$985_$",
																						"typeString": "function (contract IERC20) pure returns (bool)"
																					}
																				},
																				"id": 2002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5731:18:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 2005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5764:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 2006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "5731:34:9",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 2003,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "5752:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2004,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "5752:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1994,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "5720:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_Mooniswap_$2939",
																								"typeString": "contract Mooniswap"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_Mooniswap_$2939",
																								"typeString": "contract Mooniswap"
																							}
																						],
																						"id": 1993,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5712:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1992,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "5712:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1995,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5712:13:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1988,
																						"name": "_tokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1922,
																						"src": "5688:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
																							"typeString": "contract IERC20[] memory"
																						}
																					},
																					"id": 1990,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1989,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1975,
																						"src": "5696:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5688:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$985",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "uniBalanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3053,
																				"src": "5688:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$985_$",
																					"typeString": "function (contract IERC20,address) view returns (uint256)"
																				}
																			},
																			"id": 1996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5688:38:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 250,
																		"src": "5688:42:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5688:78:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5670:96:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2009,
															"nodeType": "ExpressionStatement",
															"src": "5670:96:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1978,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "5626:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1979,
															"name": "realBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "5630:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5630:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5626:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2011,
												"initializationExpression": {
													"assignments": [
														1975
													],
													"declarations": [
														{
															"constant": false,
															"id": 1975,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 2011,
															"src": "5614:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1974,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5614:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1977,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5623:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5614:10:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5651:3:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 1982,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "5651:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1984,
													"nodeType": "ExpressionStatement",
													"src": "5651:3:9"
												},
												"nodeType": "ForStatement",
												"src": "5609:168:9"
											},
											{
												"assignments": [
													2013
												],
												"declarations": [
													{
														"constant": false,
														"id": 2013,
														"mutability": "mutable",
														"name": "totalSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2274,
														"src": "5787:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2012,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5787:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2016,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2014,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "5809:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5787:35:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2017,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2013,
														"src": "5836:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5851:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5836:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2098,
													"nodeType": "Block",
													"src": "6215:265:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2059,
																	"name": "fairSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1917,
																	"src": "6268:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6286:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2061,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6286:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			],
																			"id": 2060,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -27,
																			"src": "6281:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6281:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint256",
																			"typeString": "type(uint256)"
																		}
																	},
																	"id": 2064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6281:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6268:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2066,
															"nodeType": "ExpressionStatement",
															"src": "6268:30:9"
														},
														{
															"body": {
																"id": 2096,
																"nodeType": "Block",
																"src": "6354:116:9",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2078,
																				"name": "fairSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1917,
																				"src": "6372:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2081,
																						"name": "fairSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1917,
																						"src": "6394:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"baseExpression": {
																									"argumentTypes": null,
																									"id": 2089,
																									"name": "realBalances",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1966,
																									"src": "6438:12:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																										"typeString": "uint256[] memory"
																									}
																								},
																								"id": 2091,
																								"indexExpression": {
																									"argumentTypes": null,
																									"id": 2090,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2068,
																									"src": "6451:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6438:15:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"baseExpression": {
																											"argumentTypes": null,
																											"id": 2084,
																											"name": "amounts",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1909,
																											"src": "6422:7:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																												"typeString": "uint256[] calldata"
																											}
																										},
																										"id": 2086,
																										"indexExpression": {
																											"argumentTypes": null,
																											"id": 2085,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2068,
																											"src": "6430:1:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "6422:10:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 2082,
																										"name": "totalSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2013,
																										"src": "6406:11:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 2083,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 313,
																									"src": "6406:15:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 2087,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "6406:27:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2088,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 330,
																							"src": "6406:31:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2092,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6406:48:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 2079,
																						"name": "Math",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 204,
																						"src": "6385:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_Math_$204_$",
																							"typeString": "type(library Math)"
																						}
																					},
																					"id": 2080,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "min",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 170,
																					"src": "6385:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2093,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6385:70:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6372:83:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2095,
																		"nodeType": "ExpressionStatement",
																		"src": "6372:83:9"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2071,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2068,
																	"src": "6329:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2072,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "6333:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 2073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6333:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6329:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2097,
															"initializationExpression": {
																"assignments": [
																	2068
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2068,
																		"mutability": "mutable",
																		"name": "i",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 2097,
																		"src": "6317:6:9",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2067,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "6317:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 2070,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6326:1:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6317:10:9"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6349:3:9",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 2075,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2068,
																		"src": "6349:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2077,
																"nodeType": "ExpressionStatement",
																"src": "6349:3:9"
															},
															"nodeType": "ForStatement",
															"src": "6312:158:9"
														}
													]
												},
												"id": 2099,
												"nodeType": "IfStatement",
												"src": "5832:648:9",
												"trueBody": {
													"id": 2058,
													"nodeType": "Block",
													"src": "5854:347:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2020,
																	"name": "fairSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1917,
																	"src": "5868:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "3939",
																			"id": 2023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5897:2:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_99_by_1",
																				"typeString": "int_const 99"
																			},
																			"value": "99"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_99_by_1",
																				"typeString": "int_const 99"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2021,
																			"name": "BASE_SUPPLY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1658,
																			"src": "5881:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 313,
																		"src": "5881:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5881:19:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5868:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2026,
															"nodeType": "ExpressionStatement",
															"src": "5868:32:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2030,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "5928:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Mooniswap_$2939",
																					"typeString": "contract Mooniswap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Mooniswap_$2939",
																					"typeString": "contract Mooniswap"
																				}
																			],
																			"id": 2029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5920:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2028,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5920:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 2031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5920:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2032,
																		"name": "BASE_SUPPLY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "5935:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2027,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "5914:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5914:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2034,
															"nodeType": "ExpressionStatement",
															"src": "5914:33:9"
														},
														{
															"body": {
																"id": 2056,
																"nodeType": "Block",
																"src": "6113:78:9",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2046,
																				"name": "fairSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1917,
																				"src": "6131:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2049,
																						"name": "fairSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1917,
																						"src": "6153:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 2050,
																							"name": "amounts",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1909,
																							"src": "6165:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																								"typeString": "uint256[] calldata"
																							}
																						},
																						"id": 2052,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 2051,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2036,
																							"src": "6173:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6165:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 2047,
																						"name": "Math",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 204,
																						"src": "6144:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_Math_$204_$",
																							"typeString": "type(library Math)"
																						}
																					},
																					"id": 2048,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "max",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 152,
																					"src": "6144:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6144:32:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6131:45:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2055,
																		"nodeType": "ExpressionStatement",
																		"src": "6131:45:9"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2039,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2036,
																	"src": "6088:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2040,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "6092:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6092:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6088:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2057,
															"initializationExpression": {
																"assignments": [
																	2036
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2036,
																		"mutability": "mutable",
																		"name": "i",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 2057,
																		"src": "6076:6:9",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2035,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "6076:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 2038,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6085:1:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6076:10:9"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6108:3:9",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 2043,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2036,
																		"src": "6108:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2045,
																"nodeType": "ExpressionStatement",
																"src": "6108:3:9"
															},
															"nodeType": "ForStatement",
															"src": "6071:120:9"
														}
													]
												}
											},
											{
												"assignments": [
													2101
												],
												"declarations": [
													{
														"constant": false,
														"id": 2101,
														"mutability": "mutable",
														"name": "fairSupplyCached",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2274,
														"src": "6490:24:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2100,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6490:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2103,
												"initialValue": {
													"argumentTypes": null,
													"id": 2102,
													"name": "fairSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1917,
													"src": "6517:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6490:37:9"
											},
											{
												"body": {
													"id": 2203,
													"nodeType": "Block",
													"src": "6579:622:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2116,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1909,
																				"src": "6601:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 2118,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2117,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2105,
																				"src": "6609:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6601:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 2119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6614:1:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6601:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4d6f6f6e69737761703a20616d6f756e74206973207a65726f",
																		"id": 2121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6617:27:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_123962c216733f8b2d542f0fe5d32172d285ddf8ee3b2481cdd480acd4a0da43",
																			"typeString": "literal_string \"Mooniswap: amount is zero\""
																		},
																		"value": "Mooniswap: amount is zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_123962c216733f8b2d542f0fe5d32172d285ddf8ee3b2481cdd480acd4a0da43",
																			"typeString": "literal_string \"Mooniswap: amount is zero\""
																		}
																	],
																	"id": 2115,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "6593:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6593:52:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2123,
															"nodeType": "ExpressionStatement",
															"src": "6593:52:9"
														},
														{
															"assignments": [
																2125
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2125,
																	"mutability": "mutable",
																	"name": "amount",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2203,
																	"src": "6659:14:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2124,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6659:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2148,
															"initialValue": {
																"argumentTypes": null,
																"condition": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2126,
																				"name": "totalSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2013,
																				"src": "6677:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 2127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6692:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "6677:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 2129,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6676:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2145,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2013,
																			"src": "6789:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2142,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2140,
																						"name": "totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2013,
																						"src": "6768:11:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 2141,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6782:1:9",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "6768:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 2137,
																							"name": "fairSupplyCached",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2101,
																							"src": "6746:16:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 2133,
																								"name": "realBalances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1966,
																								"src": "6726:12:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 2135,
																							"indexExpression": {
																								"argumentTypes": null,
																								"id": 2134,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2105,
																								"src": "6739:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6726:15:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2136,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 313,
																						"src": "6726:19:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2138,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6726:37:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2139,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 233,
																				"src": "6726:41:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6726:58:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 330,
																		"src": "6726:62:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6726:75:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "6676:125:9",
																"trueExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2130,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "6697:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 2132,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2131,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2105,
																		"src": "6705:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6697:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6659:142:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2150,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2125,
																			"src": "6823:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2151,
																				"name": "minAmounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1912,
																				"src": "6833:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 2153,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2152,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2105,
																				"src": "6844:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6833:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6823:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4d6f6f6e69737761703a206d696e416d6f756e74206e6f742072656163686564",
																		"id": 2155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6848:34:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9e9a1b6fa17445051149091025eac645e9f9ac26aca45a04b305e8faafa79a0c",
																			"typeString": "literal_string \"Mooniswap: minAmount not reached\""
																		},
																		"value": "Mooniswap: minAmount not reached"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9e9a1b6fa17445051149091025eac645e9f9ac26aca45a04b305e8faafa79a0c",
																			"typeString": "literal_string \"Mooniswap: minAmount not reached\""
																		}
																	],
																	"id": 2149,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "6815:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6815:68:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2157,
															"nodeType": "ExpressionStatement",
															"src": "6815:68:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2162,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2125,
																		"src": "6937:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2158,
																			"name": "_tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "6898:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
																				"typeString": "contract IERC20[] memory"
																			}
																		},
																		"id": 2160,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 2159,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "6906:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6898:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "uniTransferFromSenderToThis",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3144,
																	"src": "6898:38:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$985_$",
																		"typeString": "function (contract IERC20,uint256)"
																	}
																},
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6898:46:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2164,
															"nodeType": "ExpressionStatement",
															"src": "6898:46:9"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2165,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2013,
																	"src": "6962:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6976:1:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6962:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 2202,
															"nodeType": "IfStatement",
															"src": "6958:233:9",
															"trueBody": {
																"id": 2201,
																"nodeType": "Block",
																"src": "6979:212:9",
																"statements": [
																	{
																		"assignments": [
																			2169
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2169,
																				"mutability": "mutable",
																				"name": "confirmed",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 2201,
																				"src": "6997:17:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2168,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6997:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 2184,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 2180,
																						"name": "realBalances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1966,
																						"src": "7060:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 2182,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 2181,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2105,
																						"src": "7073:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7060:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 2176,
																									"name": "this",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": -28,
																									"src": "7049:4:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_Mooniswap_$2939",
																										"typeString": "contract Mooniswap"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_Mooniswap_$2939",
																										"typeString": "contract Mooniswap"
																									}
																								],
																								"id": 2175,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "7041:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2174,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "7041:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": null,
																										"typeString": null
																									}
																								}
																							},
																							"id": 2177,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "7041:13:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 2170,
																								"name": "_tokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1922,
																								"src": "7017:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
																									"typeString": "contract IERC20[] memory"
																								}
																							},
																							"id": 2172,
																							"indexExpression": {
																								"argumentTypes": null,
																								"id": 2171,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2105,
																								"src": "7025:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "7017:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$985",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 2173,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "uniBalanceOf",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3053,
																						"src": "7017:23:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$985_$",
																							"typeString": "function (contract IERC20,address) view returns (uint256)"
																						}
																					},
																					"id": 2178,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7017:38:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 250,
																				"src": "7017:42:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7017:59:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6997:79:9"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2185,
																				"name": "fairSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1917,
																				"src": "7094:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2188,
																						"name": "fairSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1917,
																						"src": "7116:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"baseExpression": {
																									"argumentTypes": null,
																									"id": 2194,
																									"name": "realBalances",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1966,
																									"src": "7159:12:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																										"typeString": "uint256[] memory"
																									}
																								},
																								"id": 2196,
																								"indexExpression": {
																									"argumentTypes": null,
																									"id": 2195,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2105,
																									"src": "7172:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7159:15:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 2191,
																										"name": "confirmed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2169,
																										"src": "7144:9:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 2189,
																										"name": "totalSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2013,
																										"src": "7128:11:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 2190,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 313,
																									"src": "7128:15:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 2192,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "7128:26:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2193,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 330,
																							"src": "7128:30:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2197,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7128:47:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 2186,
																						"name": "Math",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 204,
																						"src": "7107:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_Math_$204_$",
																							"typeString": "type(library Math)"
																						}
																					},
																					"id": 2187,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "min",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 170,
																					"src": "7107:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7107:69:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7094:82:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2200,
																		"nodeType": "ExpressionStatement",
																		"src": "7094:82:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2108,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2105,
														"src": "6554:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2109,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "6558:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6558:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6554:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2204,
												"initializationExpression": {
													"assignments": [
														2105
													],
													"declarations": [
														{
															"constant": false,
															"id": 2105,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 2204,
															"src": "6542:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2104,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6542:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 2107,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6551:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6542:10:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6574:3:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 2112,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "6574:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2114,
													"nodeType": "ExpressionStatement",
													"src": "6574:3:9"
												},
												"nodeType": "ForStatement",
												"src": "6537:664:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2205,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2013,
														"src": "7215:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7229:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7215:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2254,
												"nodeType": "IfStatement",
												"src": "7211:343:9",
												"trueBody": {
													"id": 2253,
													"nodeType": "Block",
													"src": "7232:322:9",
													"statements": [
														{
															"body": {
																"id": 2251,
																"nodeType": "Block",
																"src": "7288:256:9",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 2225,
																						"name": "realBalances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1966,
																						"src": "7350:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 2227,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 2226,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2209,
																						"src": "7363:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7350:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 2230,
																							"name": "fairSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1917,
																							"src": "7383:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 2228,
																							"name": "totalSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2013,
																							"src": "7367:11:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2229,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "add",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 233,
																						"src": "7367:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7367:27:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2232,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2013,
																					"src": "7396:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 2219,
																						"name": "virtualBalancesForRemoval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1691,
																						"src": "7306:25:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
																							"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data storage ref)"
																						}
																					},
																					"id": 2223,
																					"indexExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 2220,
																							"name": "_tokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1922,
																							"src": "7332:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
																								"typeString": "contract IERC20[] memory"
																							}
																						},
																						"id": 2222,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 2221,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2209,
																							"src": "7340:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7332:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$985",
																							"typeString": "contract IERC20"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7306:37:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Data_$1465_storage",
																						"typeString": "struct VirtualBalance.Data storage ref"
																					}
																				},
																				"id": 2224,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "scale",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1543,
																				"src": "7306:43:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Data_$1465_storage_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_Data_$1465_storage_ptr_$",
																					"typeString": "function (struct VirtualBalance.Data storage pointer,uint256,uint256,uint256)"
																				}
																			},
																			"id": 2233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7306:102:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2234,
																		"nodeType": "ExpressionStatement",
																		"src": "7306:102:9"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 2241,
																						"name": "realBalances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1966,
																						"src": "7471:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 2243,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 2242,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2209,
																						"src": "7484:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7471:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 2246,
																							"name": "fairSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1917,
																							"src": "7504:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 2244,
																							"name": "totalSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2013,
																							"src": "7488:11:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2245,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "add",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 233,
																						"src": "7488:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2247,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7488:27:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2248,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2013,
																					"src": "7517:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 2235,
																						"name": "virtualBalancesForAddition",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1687,
																						"src": "7426:26:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
																							"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data storage ref)"
																						}
																					},
																					"id": 2239,
																					"indexExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 2236,
																							"name": "_tokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1922,
																							"src": "7453:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_memory_ptr",
																								"typeString": "contract IERC20[] memory"
																							}
																						},
																						"id": 2238,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 2237,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2209,
																							"src": "7461:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7453:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$985",
																							"typeString": "contract IERC20"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7426:38:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Data_$1465_storage",
																						"typeString": "struct VirtualBalance.Data storage ref"
																					}
																				},
																				"id": 2240,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "scale",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1543,
																				"src": "7426:44:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Data_$1465_storage_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_Data_$1465_storage_ptr_$",
																					"typeString": "function (struct VirtualBalance.Data storage pointer,uint256,uint256,uint256)"
																				}
																			},
																			"id": 2249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7426:103:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2250,
																		"nodeType": "ExpressionStatement",
																		"src": "7426:103:9"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2212,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "7263:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2213,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "7267:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7267:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7263:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2252,
															"initializationExpression": {
																"assignments": [
																	2209
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2209,
																		"mutability": "mutable",
																		"name": "i",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 2252,
																		"src": "7251:6:9",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2208,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "7251:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 2211,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7260:1:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7251:10:9"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "7283:3:9",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 2216,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2209,
																		"src": "7283:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2218,
																"nodeType": "ExpressionStatement",
																"src": "7283:3:9"
															},
															"nodeType": "ForStatement",
															"src": "7246:298:9"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2256,
																"name": "fairSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "7572:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7585:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7572:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d6f6f6e69737761703a20726573756c74206973206e6f7420656e6f756768",
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7588:33:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6f187b81185e9dc7c35c1c8ed11211ebdda252da15ce4801fc8a6fff7f1d1b7",
																"typeString": "literal_string \"Mooniswap: result is not enough\""
															},
															"value": "Mooniswap: result is not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6f187b81185e9dc7c35c1c8ed11211ebdda252da15ce4801fc8a6fff7f1d1b7",
																"typeString": "literal_string \"Mooniswap: result is not enough\""
															}
														],
														"id": 2255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7564:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7564:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2261,
												"nodeType": "ExpressionStatement",
												"src": "7564:58:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2263,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7638:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7638:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2265,
															"name": "fairSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "7650:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2262,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "7632:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7632:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2267,
												"nodeType": "ExpressionStatement",
												"src": "7632:29:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7687:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7687:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2271,
															"name": "fairSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "7699:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2268,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "7677:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7677:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2273,
												"nodeType": "EmitStatement",
												"src": "7672:38:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "f223885a",
									"id": 2275,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1915,
											"modifierName": {
												"argumentTypes": null,
												"id": 1914,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1441,
												"src": "5221:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5221:12:9"
										}
									],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2275,
												"src": "5145:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1907,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5145:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1908,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5145:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "minAmounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2275,
												"src": "5173:29:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1910,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5173:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1911,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5173:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5144:59:9"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "fairSupply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2275,
												"src": "5242:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5242:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5241:20:9"
									},
									"scope": 2939,
									"src": "5128:2589:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2387,
										"nodeType": "Block",
										"src": "7808:732:9",
										"statements": [
											{
												"assignments": [
													2286
												],
												"declarations": [
													{
														"constant": false,
														"id": 2286,
														"mutability": "mutable",
														"name": "totalSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2387,
														"src": "7818:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2285,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2289,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2287,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "7840:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7840:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:35:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2291,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7869:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7869:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2293,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "7881:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2290,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "7863:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7863:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2295,
												"nodeType": "ExpressionStatement",
												"src": "7863:25:9"
											},
											{
												"body": {
													"id": 2379,
													"nodeType": "Block",
													"src": "7940:549:9",
													"statements": [
														{
															"assignments": [
																2308
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2308,
																	"mutability": "mutable",
																	"name": "token",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2379,
																	"src": "7954:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 2307,
																		"name": "IERC20",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 985,
																		"src": "7954:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2312,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2309,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "7969:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage",
																		"typeString": "contract IERC20[] storage ref"
																	}
																},
																"id": 2311,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2310,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2297,
																	"src": "7976:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7969:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7954:24:9"
														},
														{
															"assignments": [
																2314
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2314,
																	"mutability": "mutable",
																	"name": "preBalance",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2379,
																	"src": "7993:18:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2313,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7993:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2322,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2319,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "8041:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Mooniswap_$2939",
																					"typeString": "contract Mooniswap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Mooniswap_$2939",
																					"typeString": "contract Mooniswap"
																				}
																			],
																			"id": 2318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8033:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2317,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8033:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 2320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8033:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2315,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2308,
																		"src": "8014:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "uniBalanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3053,
																	"src": "8014:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$985_$",
																		"typeString": "function (contract IERC20,address) view returns (uint256)"
																	}
																},
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8014:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7993:54:9"
														},
														{
															"assignments": [
																2324
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2324,
																	"mutability": "mutable",
																	"name": "value",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2379,
																	"src": "8061:13:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2323,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8061:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2332,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2330,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2286,
																		"src": "8104:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2327,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2277,
																				"src": "8092:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2325,
																				"name": "preBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2314,
																				"src": "8077:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 313,
																			"src": "8077:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8077:22:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 330,
																	"src": "8077:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8077:39:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8061:55:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2336,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "8148:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8148:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2338,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2324,
																		"src": "8160:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2333,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2308,
																		"src": "8130:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "uniTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3087,
																	"src": "8130:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$985_$",
																		"typeString": "function (contract IERC20,address payable,uint256)"
																	}
																},
																"id": 2339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8130:36:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2340,
															"nodeType": "ExpressionStatement",
															"src": "8130:36:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2342,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2297,
																				"src": "8188:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 2343,
																					"name": "minReturns",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2280,
																					"src": "8193:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "8193:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8188:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2346,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2324,
																				"src": "8214:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 2347,
																					"name": "minReturns",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2280,
																					"src": "8223:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2349,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 2348,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2297,
																					"src": "8234:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8223:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8214:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "8188:48:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4d6f6f6e69737761703a20726573756c74206973206e6f7420656e6f756768",
																		"id": 2352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8238:33:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a6f187b81185e9dc7c35c1c8ed11211ebdda252da15ce4801fc8a6fff7f1d1b7",
																			"typeString": "literal_string \"Mooniswap: result is not enough\""
																		},
																		"value": "Mooniswap: result is not enough"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a6f187b81185e9dc7c35c1c8ed11211ebdda252da15ce4801fc8a6fff7f1d1b7",
																			"typeString": "literal_string \"Mooniswap: result is not enough\""
																		}
																	],
																	"id": 2341,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "8180:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8180:92:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2354,
															"nodeType": "ExpressionStatement",
															"src": "8180:92:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2359,
																		"name": "preBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2314,
																		"src": "8327:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2362,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2277,
																				"src": "8355:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2360,
																				"name": "totalSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2286,
																				"src": "8339:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 250,
																			"src": "8339:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8339:23:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2364,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2286,
																		"src": "8364:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2355,
																			"name": "virtualBalancesForAddition",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1687,
																			"src": "8287:26:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
																				"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data storage ref)"
																			}
																		},
																		"id": 2357,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 2356,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "8314:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$985",
																				"typeString": "contract IERC20"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8287:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Data_$1465_storage",
																			"typeString": "struct VirtualBalance.Data storage ref"
																		}
																	},
																	"id": 2358,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "scale",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1543,
																	"src": "8287:39:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Data_$1465_storage_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_Data_$1465_storage_ptr_$",
																		"typeString": "function (struct VirtualBalance.Data storage pointer,uint256,uint256,uint256)"
																	}
																},
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8287:89:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2366,
															"nodeType": "ExpressionStatement",
															"src": "8287:89:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2371,
																		"name": "preBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2314,
																		"src": "8429:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2374,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2277,
																				"src": "8457:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2372,
																				"name": "totalSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2286,
																				"src": "8441:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 250,
																			"src": "8441:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8441:23:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2376,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2286,
																		"src": "8466:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2367,
																			"name": "virtualBalancesForRemoval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1691,
																			"src": "8390:25:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
																				"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data storage ref)"
																			}
																		},
																		"id": 2369,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 2368,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "8416:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$985",
																				"typeString": "contract IERC20"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8390:32:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Data_$1465_storage",
																			"typeString": "struct VirtualBalance.Data storage ref"
																		}
																	},
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "scale",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1543,
																	"src": "8390:38:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Data_$1465_storage_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_Data_$1465_storage_ptr_$",
																		"typeString": "function (struct VirtualBalance.Data storage pointer,uint256,uint256,uint256)"
																	}
																},
																"id": 2377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8390:88:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2378,
															"nodeType": "ExpressionStatement",
															"src": "8390:88:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2300,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2297,
														"src": "7916:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2301,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "7920:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage",
																"typeString": "contract IERC20[] storage ref"
															}
														},
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7920:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7916:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2380,
												"initializationExpression": {
													"assignments": [
														2297
													],
													"declarations": [
														{
															"constant": false,
															"id": 2297,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 2380,
															"src": "7904:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2296,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7904:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 2299,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7913:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7904:10:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7935:3:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 2304,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "7935:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2306,
													"nodeType": "ExpressionStatement",
													"src": "7935:3:9"
												},
												"nodeType": "ForStatement",
												"src": "7899:590:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2382,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "8514:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8514:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2384,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "8526:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2381,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "8504:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8504:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2386,
												"nodeType": "EmitStatement",
												"src": "8499:34:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "5915d806",
									"id": 2388,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2283,
											"modifierName": {
												"argumentTypes": null,
												"id": 2282,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1441,
												"src": "7795:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7795:12:9"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2388,
												"src": "7741:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7741:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "minReturns",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2388,
												"src": "7757:27:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2278,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7757:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2279,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "7757:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7740:45:9"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:9"
									},
									"scope": 2939,
									"src": "7723:817:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2695,
										"nodeType": "Block",
										"src": "8691:2428:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2406,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "8709:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8709:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"condition": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2408,
																					"name": "src",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2390,
																					"src": "8723:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$985",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "isETH",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3029,
																				"src": "8723:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$985_$returns$_t_bool_$bound_to$_t_contract$_IERC20_$985_$",
																					"typeString": "function (contract IERC20) pure returns (bool)"
																				}
																			},
																			"id": 2410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8723:11:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 2412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8746:1:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8723:24:9",
																		"trueExpression": {
																			"argumentTypes": null,
																			"id": 2411,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "8737:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2414,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8722:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8709:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d6f6f6e69737761703a2077726f6e672076616c7565207573616765",
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8750:30:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a46874337e04f5973e81e0ae555d34c1cb1861f3f6823e991de227eba323bc91",
																"typeString": "literal_string \"Mooniswap: wrong value usage\""
															},
															"value": "Mooniswap: wrong value usage"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a46874337e04f5973e81e0ae555d34c1cb1861f3f6823e991de227eba323bc91",
																"typeString": "literal_string \"Mooniswap: wrong value usage\""
															}
														],
														"id": 2405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8701:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8701:80:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2418,
												"nodeType": "ExpressionStatement",
												"src": "8701:80:9"
											},
											{
												"assignments": [
													2420
												],
												"declarations": [
													{
														"constant": false,
														"id": 2420,
														"mutability": "mutable",
														"name": "balances",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2695,
														"src": "8792:24:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
															"typeString": "struct Mooniswap.Balances"
														},
														"typeName": {
															"contractScope": null,
															"id": 2419,
															"name": "Balances",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1615,
															"src": "8792:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balances_$1615_storage_ptr",
																"typeString": "struct Mooniswap.Balances"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2446,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"condition": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2430,
																				"name": "src",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2390,
																				"src": "8883:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$985",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 2431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "isETH",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3029,
																			"src": "8883:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$985_$returns$_t_bool_$bound_to$_t_contract$_IERC20_$985_$",
																				"typeString": "function (contract IERC20) pure returns (bool)"
																			}
																		},
																		"id": 2432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8883:11:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8909:1:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "8883:27:9",
																	"trueExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2433,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "8897:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8897:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2426,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -28,
																					"src": "8872:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Mooniswap_$2939",
																						"typeString": "contract Mooniswap"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Mooniswap_$2939",
																						"typeString": "contract Mooniswap"
																					}
																				],
																				"id": 2425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8864:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2424,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8864:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 2427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8864:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2422,
																			"name": "src",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "8847:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$985",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "uniBalanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3053,
																		"src": "8847:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$985_$",
																			"typeString": "function (contract IERC20,address) view returns (uint256)"
																		}
																	},
																	"id": 2428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8847:31:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 250,
																"src": "8847:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8847:64:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2442,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "8955:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Mooniswap_$2939",
																				"typeString": "contract Mooniswap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Mooniswap_$2939",
																				"typeString": "contract Mooniswap"
																			}
																		],
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8947:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2440,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8947:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8947:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2438,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "8930:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "uniBalanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3053,
																"src": "8930:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$985_$",
																	"typeString": "function (contract IERC20,address) view returns (uint256)"
																}
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8930:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2421,
														"name": "Balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "8819:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Balances_$1615_storage_ptr_$",
															"typeString": "type(struct Mooniswap.Balances storage pointer)"
														}
													},
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"src",
														"dst"
													],
													"nodeType": "FunctionCall",
													"src": "8819:153:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
														"typeString": "struct Mooniswap.Balances memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8792:180:9"
											},
											{
												"assignments": [
													2448
												],
												"declarations": [
													{
														"constant": false,
														"id": 2448,
														"mutability": "mutable",
														"name": "srcAdditionBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2695,
														"src": "9071:26:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2447,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9071:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2461,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2455,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2420,
																		"src": "9149:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																			"typeString": "struct Mooniswap.Balances memory"
																		}
																	},
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "src",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1612,
																	"src": "9149:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2451,
																		"name": "virtualBalancesForAddition",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "9109:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
																			"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data storage ref)"
																		}
																	},
																	"id": 2453,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2452,
																		"name": "src",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2390,
																		"src": "9136:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9109:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Data_$1465_storage",
																		"typeString": "struct VirtualBalance.Data storage ref"
																	}
																},
																"id": 2454,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1591,
																"src": "9109:39:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Data_$1465_memory_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_Data_$1465_memory_ptr_$",
																	"typeString": "function (struct VirtualBalance.Data memory,uint256) view returns (uint256)"
																}
															},
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9109:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2458,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2420,
																"src": "9164:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																	"typeString": "struct Mooniswap.Balances memory"
																}
															},
															"id": 2459,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "src",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1612,
															"src": "9164:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2449,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "9100:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$204_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 2450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 152,
														"src": "9100:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9100:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9071:106:9"
											},
											{
												"assignments": [
													2463
												],
												"declarations": [
													{
														"constant": false,
														"id": 2463,
														"mutability": "mutable",
														"name": "dstRemovalBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2695,
														"src": "9187:25:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2462,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9187:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2476,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2470,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2420,
																		"src": "9263:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																			"typeString": "struct Mooniswap.Balances memory"
																		}
																	},
																	"id": 2471,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "dst",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1614,
																	"src": "9263:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2466,
																		"name": "virtualBalancesForRemoval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "9224:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
																			"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data storage ref)"
																		}
																	},
																	"id": 2468,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2467,
																		"name": "dst",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "9250:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9224:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Data_$1465_storage",
																		"typeString": "struct VirtualBalance.Data storage ref"
																	}
																},
																"id": 2469,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1591,
																"src": "9224:38:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Data_$1465_memory_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_Data_$1465_memory_ptr_$",
																	"typeString": "function (struct VirtualBalance.Data memory,uint256) view returns (uint256)"
																}
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9224:52:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2473,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2420,
																"src": "9278:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																	"typeString": "struct Mooniswap.Balances memory"
																}
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "dst",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1614,
															"src": "9278:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2464,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "9215:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$204_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 2465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 170,
														"src": "9215:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9215:76:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9187:104:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2480,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2394,
															"src": "9334:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2477,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "9302:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														"id": 2479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "uniTransferFromSenderToThis",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3144,
														"src": "9302:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$985_$",
															"typeString": "function (contract IERC20,uint256)"
														}
													},
													"id": 2481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9302:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2482,
												"nodeType": "ExpressionStatement",
												"src": "9302:39:9"
											},
											{
												"assignments": [
													2484
												],
												"declarations": [
													{
														"constant": false,
														"id": 2484,
														"mutability": "mutable",
														"name": "confirmed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2695,
														"src": "9351:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9351:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2496,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2493,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2420,
																"src": "9407:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																	"typeString": "struct Mooniswap.Balances memory"
																}
															},
															"id": 2494,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "src",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1612,
															"src": "9407:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2489,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "9396:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Mooniswap_$2939",
																				"typeString": "contract Mooniswap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Mooniswap_$2939",
																				"typeString": "contract Mooniswap"
																			}
																		],
																		"id": 2488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9388:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2487,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9388:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9388:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2485,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2390,
																	"src": "9371:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "uniBalanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3053,
																"src": "9371:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$985_$",
																	"typeString": "function (contract IERC20,address) view returns (uint256)"
																}
															},
															"id": 2491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9371:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "9371:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9371:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9351:69:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2497,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2403,
														"src": "9430:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2499,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2390,
																"src": "9450:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																}
															},
															{
																"argumentTypes": null,
																"id": 2500,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "9455:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																}
															},
															{
																"argumentTypes": null,
																"id": 2501,
																"name": "confirmed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2484,
																"src": "9460:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 2502,
																"name": "srcAdditionBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "9471:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 2503,
																"name": "dstRemovalBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2463,
																"src": "9491:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2498,
															"name": "_getReturn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2855,
															"src": "9439:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$_t_contract$_IERC20_$985_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (contract IERC20,contract IERC20,uint256,uint256,uint256) view returns (uint256)"
															}
														},
														"id": 2504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9439:70:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9430:79:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2506,
												"nodeType": "ExpressionStatement",
												"src": "9430:79:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2508,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "9527:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9536:1:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9527:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2511,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "9541:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2512,
																	"name": "minReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "9551:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9541:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9527:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d6f6f6e69737761703a2072657475726e206973206e6f7420656e6f756768",
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9562:33:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0be102d38ec038ab1a97805b8ddde7cce9248b0bc20b18ef4a6ff185abc6bc22",
																"typeString": "literal_string \"Mooniswap: return is not enough\""
															},
															"value": "Mooniswap: return is not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0be102d38ec038ab1a97805b8ddde7cce9248b0bc20b18ef4a6ff185abc6bc22",
																"typeString": "literal_string \"Mooniswap: return is not enough\""
															}
														],
														"id": 2507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9519:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9519:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2517,
												"nodeType": "ExpressionStatement",
												"src": "9519:77:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2521,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "9622:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9622:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2523,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "9634:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2518,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "9606:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														"id": 2520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "uniTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3087,
														"src": "9606:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$985_$",
															"typeString": "function (contract IERC20,address payable,uint256)"
														}
													},
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9606:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2525,
												"nodeType": "ExpressionStatement",
												"src": "9606:35:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2526,
														"name": "srcAdditionBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2448,
														"src": "9738:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2527,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2420,
															"src": "9760:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																"typeString": "struct Mooniswap.Balances memory"
															}
														},
														"id": 2528,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "src",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1612,
														"src": "9760:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9738:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2541,
												"nodeType": "IfStatement",
												"src": "9734:135:9",
												"trueBody": {
													"id": 2540,
													"nodeType": "Block",
													"src": "9774:95:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2536,
																				"name": "confirmed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2484,
																				"src": "9847:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2534,
																				"name": "srcAdditionBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2448,
																				"src": "9824:18:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 233,
																			"src": "9824:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9824:33:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2530,
																			"name": "virtualBalancesForAddition",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1687,
																			"src": "9788:26:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
																				"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data storage ref)"
																			}
																		},
																		"id": 2532,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 2531,
																			"name": "src",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "9815:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$985",
																				"typeString": "contract IERC20"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9788:31:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Data_$1465_storage",
																			"typeString": "struct VirtualBalance.Data storage ref"
																		}
																	},
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "set",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1495,
																	"src": "9788:35:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Data_$1465_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Data_$1465_storage_ptr_$",
																		"typeString": "function (struct VirtualBalance.Data storage pointer,uint256)"
																	}
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9788:70:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2539,
															"nodeType": "ExpressionStatement",
															"src": "9788:70:9"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2542,
														"name": "dstRemovalBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2463,
														"src": "9882:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2543,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2420,
															"src": "9903:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																"typeString": "struct Mooniswap.Balances memory"
															}
														},
														"id": 2544,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "dst",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1614,
														"src": "9903:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9882:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2557,
												"nodeType": "IfStatement",
												"src": "9878:129:9",
												"trueBody": {
													"id": 2556,
													"nodeType": "Block",
													"src": "9917:90:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2552,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2403,
																				"src": "9988:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2550,
																				"name": "dstRemovalBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2463,
																				"src": "9966:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 250,
																			"src": "9966:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9966:29:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2546,
																			"name": "virtualBalancesForRemoval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1691,
																			"src": "9931:25:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
																				"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data storage ref)"
																			}
																		},
																		"id": 2548,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 2547,
																			"name": "dst",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2392,
																			"src": "9957:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$985",
																				"typeString": "contract IERC20"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9931:30:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Data_$1465_storage",
																			"typeString": "struct VirtualBalance.Data storage ref"
																		}
																	},
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "set",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1495,
																	"src": "9931:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Data_$1465_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Data_$1465_storage_ptr_$",
																		"typeString": "function (struct VirtualBalance.Data storage pointer,uint256)"
																	}
																},
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9931:65:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2555,
															"nodeType": "ExpressionStatement",
															"src": "9931:65:9"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2562,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2420,
																"src": "10116:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																	"typeString": "struct Mooniswap.Balances memory"
																}
															},
															"id": 2563,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "src",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1612,
															"src": "10116:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2558,
																"name": "virtualBalancesForRemoval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "10078:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
																	"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data storage ref)"
																}
															},
															"id": 2560,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2559,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2390,
																"src": "10104:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10078:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Data_$1465_storage",
																"typeString": "struct VirtualBalance.Data storage ref"
															}
														},
														"id": 2561,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1511,
														"src": "10078:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Data_$1465_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Data_$1465_storage_ptr_$",
															"typeString": "function (struct VirtualBalance.Data storage pointer,uint256)"
														}
													},
													"id": 2564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10078:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2565,
												"nodeType": "ExpressionStatement",
												"src": "10078:51:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2570,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2420,
																"src": "10178:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																	"typeString": "struct Mooniswap.Balances memory"
																}
															},
															"id": 2571,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "dst",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1614,
															"src": "10178:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2566,
																"name": "virtualBalancesForAddition",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "10139:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_Data_$1465_storage_$",
																	"typeString": "mapping(contract IERC20 => struct VirtualBalance.Data storage ref)"
																}
															},
															"id": 2568,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2567,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "10166:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10139:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Data_$1465_storage",
																"typeString": "struct VirtualBalance.Data storage ref"
															}
														},
														"id": 2569,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1511,
														"src": "10139:38:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Data_$1465_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Data_$1465_storage_ptr_$",
															"typeString": "function (struct VirtualBalance.Data storage pointer,uint256)"
														}
													},
													"id": 2572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10139:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2573,
												"nodeType": "ExpressionStatement",
												"src": "10139:52:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2574,
														"name": "referral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2398,
														"src": "10206:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10226:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10218:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2575,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10218:7:9",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 2578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10218:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10206:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2652,
												"nodeType": "IfStatement",
												"src": "10202:631:9",
												"trueBody": {
													"id": 2651,
													"nodeType": "Block",
													"src": "10230:603:9",
													"statements": [
														{
															"assignments": [
																2581
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2581,
																	"mutability": "mutable",
																	"name": "invariantRatio",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2651,
																	"src": "10244:22:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2580,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10244:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2586,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "31653336",
																		"id": 2584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10277:4:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																			"typeString": "int_const 1000...(29 digits omitted)...0000"
																		},
																		"value": "1e36"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																			"typeString": "int_const 1000...(29 digits omitted)...0000"
																		}
																	],
																	"id": 2583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10269:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2582,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10269:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10269:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10244:38:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2587,
																	"name": "invariantRatio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2581,
																	"src": "10296:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2597,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2420,
																				"src": "10365:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																					"typeString": "struct Mooniswap.Balances memory"
																				}
																			},
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "src",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1612,
																			"src": "10365:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 2593,
																							"name": "confirmed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2484,
																							"src": "10349:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 2590,
																								"name": "balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2420,
																								"src": "10332:8:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																									"typeString": "struct Mooniswap.Balances memory"
																								}
																							},
																							"id": 2591,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "src",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1612,
																							"src": "10332:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2592,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "add",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 233,
																						"src": "10332:16:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2594,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10332:27:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2588,
																					"name": "invariantRatio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2581,
																					"src": "10313:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 313,
																				"src": "10313:18:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10313:47:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 330,
																		"src": "10313:51:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10313:65:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10296:82:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2601,
															"nodeType": "ExpressionStatement",
															"src": "10296:82:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2602,
																	"name": "invariantRatio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2581,
																	"src": "10392:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2612,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2420,
																				"src": "10458:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																					"typeString": "struct Mooniswap.Balances memory"
																				}
																			},
																			"id": 2613,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "dst",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1614,
																			"src": "10458:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 2608,
																							"name": "result",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2403,
																							"src": "10445:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 2605,
																								"name": "balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2420,
																								"src": "10428:8:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																									"typeString": "struct Mooniswap.Balances memory"
																								}
																							},
																							"id": 2606,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "dst",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1614,
																							"src": "10428:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2607,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 250,
																						"src": "10428:16:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2609,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10428:24:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2603,
																					"name": "invariantRatio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2581,
																					"src": "10409:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 313,
																				"src": "10409:18:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10409:44:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 330,
																		"src": "10409:48:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10409:62:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10392:79:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2616,
															"nodeType": "ExpressionStatement",
															"src": "10392:79:9"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2617,
																	"name": "invariantRatio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2581,
																	"src": "10489:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31653336",
																	"id": 2618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10506:4:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																		"typeString": "int_const 1000...(29 digits omitted)...0000"
																	},
																	"value": "1e36"
																},
																"src": "10489:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 2650,
															"nodeType": "IfStatement",
															"src": "10485:338:9",
															"trueBody": {
																"id": 2649,
																"nodeType": "Block",
																"src": "10512:311:9",
																"statements": [
																	{
																		"assignments": [
																			2621
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2621,
																				"mutability": "mutable",
																				"name": "referralShare",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 2649,
																				"src": "10593:21:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2620,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10593:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 2638,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2636,
																					"name": "REFERRAL_SHARE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1655,
																					"src": "10682:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "31653138",
																							"id": 2633,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10672:4:9",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"arguments": [],
																									"expression": {
																										"argumentTypes": [],
																										"id": 2629,
																										"name": "totalSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 493,
																										"src": "10653:11:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																											"typeString": "function () view returns (uint256)"
																										}
																									},
																									"id": 2630,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "10653:13:9",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"hexValue": "31653138",
																											"id": 2626,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "10643:4:9",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1000000000000000000_by_1",
																												"typeString": "int_const 1000000000000000000"
																											},
																											"value": "1e18"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_rational_1000000000000000000_by_1",
																												"typeString": "int_const 1000000000000000000"
																											}
																										],
																										"expression": {
																											"argumentTypes": null,
																											"arguments": [],
																											"expression": {
																												"argumentTypes": [],
																												"expression": {
																													"argumentTypes": null,
																													"id": 2622,
																													"name": "invariantRatio",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2581,
																													"src": "10617:14:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"id": 2623,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "sqrt",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 2998,
																												"src": "10617:19:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																													"typeString": "function (uint256) pure returns (uint256)"
																												}
																											},
																											"id": 2624,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "10617:21:9",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2625,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sub",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 250,
																										"src": "10617:25:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2627,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "10617:31:9",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2628,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 313,
																								"src": "10617:35:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2631,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "10617:50:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2632,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "div",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 330,
																						"src": "10617:54:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2634,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10617:60:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 330,
																				"src": "10617:64:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10617:80:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10593:104:9"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2639,
																				"name": "referralShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2621,
																				"src": "10719:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 2640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10735:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "10719:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 2648,
																		"nodeType": "IfStatement",
																		"src": "10715:94:9",
																		"trueBody": {
																			"id": 2647,
																			"nodeType": "Block",
																			"src": "10738:71:9",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 2643,
																								"name": "referral",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2398,
																								"src": "10766:8:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 2644,
																								"name": "referralShare",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2621,
																								"src": "10776:13:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2642,
																							"name": "_mint",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 783,
																							"src": "10760:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256)"
																							}
																						},
																						"id": 2645,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "10760:30:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2646,
																					"nodeType": "ExpressionStatement",
																					"src": "10760:30:9"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2654,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10856:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10856:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2658,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2390,
																	"src": "10876:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10868:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2656,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10868:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10868:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2662,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "10890:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10882:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2660,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10882:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10882:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2664,
															"name": "confirmed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2484,
															"src": "10896:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2665,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "10907:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2666,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2420,
																"src": "10915:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																	"typeString": "struct Mooniswap.Balances memory"
																}
															},
															"id": 2667,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "src",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1612,
															"src": "10915:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2668,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2420,
																"src": "10929:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balances_$1615_memory_ptr",
																	"typeString": "struct Mooniswap.Balances memory"
																}
															},
															"id": 2669,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "dst",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1614,
															"src": "10929:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2670,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "10943:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10943:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2672,
															"name": "referral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2398,
															"src": "10958:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2653,
														"name": "Swapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1652,
														"src": "10848:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,uint256,uint256,uint256,address)"
														}
													},
													"id": 2673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10848:119:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2674,
												"nodeType": "EmitStatement",
												"src": "10843:124:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2675,
																"name": "volumes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "11020:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_SwapVolumes_$1620_storage_$",
																	"typeString": "mapping(contract IERC20 => struct Mooniswap.SwapVolumes storage ref)"
																}
															},
															"id": 2677,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2676,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2390,
																"src": "11028:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11020:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SwapVolumes_$1620_storage",
																"typeString": "struct Mooniswap.SwapVolumes storage ref"
															}
														},
														"id": 2678,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "confirmed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1617,
														"src": "11020:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2681,
																"name": "confirmed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2484,
																"src": "11054:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11046:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint128_$",
																"typeString": "type(uint128)"
															},
															"typeName": {
																"id": 2679,
																"name": "uint128",
																"nodeType": "ElementaryTypeName",
																"src": "11046:7:9",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 2682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11046:18:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "11020:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 2684,
												"nodeType": "ExpressionStatement",
												"src": "11020:44:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2685,
																"name": "volumes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "11074:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_struct$_SwapVolumes_$1620_storage_$",
																	"typeString": "mapping(contract IERC20 => struct Mooniswap.SwapVolumes storage ref)"
																}
															},
															"id": 2687,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2686,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2390,
																"src": "11082:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11074:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SwapVolumes_$1620_storage",
																"typeString": "struct Mooniswap.SwapVolumes storage ref"
															}
														},
														"id": 2688,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "result",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1619,
														"src": "11074:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2691,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2403,
																"src": "11105:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11097:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint128_$",
																"typeString": "type(uint128)"
															},
															"typeName": {
																"id": 2689,
																"name": "uint128",
																"nodeType": "ElementaryTypeName",
																"src": "11097:7:9",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 2692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11097:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "11074:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 2694,
												"nodeType": "ExpressionStatement",
												"src": "11074:38:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d5bcb9b5",
									"id": 2696,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2401,
											"modifierName": {
												"argumentTypes": null,
												"id": 2400,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1441,
												"src": "8654:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8654:12:9"
										}
									],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2696,
												"src": "8560:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2389,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "8560:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2696,
												"src": "8572:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2391,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "8572:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2696,
												"src": "8584:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8584:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "minReturn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2696,
												"src": "8600:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8600:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "referral",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2696,
												"src": "8619:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8619:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8559:77:9"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2696,
												"src": "8675:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8675:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8674:16:9"
									},
									"scope": 2939,
									"src": "8546:2573:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2796,
										"nodeType": "Block",
										"src": "11208:502:9",
										"statements": [
											{
												"assignments": [
													2711
												],
												"declarations": [
													{
														"constant": false,
														"id": 2711,
														"mutability": "mutable",
														"name": "balances",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2796,
														"src": "11218:25:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2709,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11218:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2710,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "11218:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2718,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2715,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "11260:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage",
																	"typeString": "contract IERC20[] storage ref"
																}
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11260:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "11246:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2712,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11250:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2713,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "11250:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11246:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11218:56:9"
											},
											{
												"body": {
													"id": 2744,
													"nodeType": "Block",
													"src": "11327:76:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2730,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2711,
																		"src": "11341:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2732,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2731,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2720,
																		"src": "11350:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11341:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2739,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -28,
																					"src": "11386:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Mooniswap_$2939",
																						"typeString": "contract Mooniswap"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Mooniswap_$2939",
																						"typeString": "contract Mooniswap"
																					}
																				],
																				"id": 2738,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11378:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2737,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "11378:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11378:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2733,
																				"name": "tokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1671,
																				"src": "11355:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage",
																					"typeString": "contract IERC20[] storage ref"
																				}
																			},
																			"id": 2735,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2734,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2720,
																				"src": "11362:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11355:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$985",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "uniBalanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3053,
																		"src": "11355:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$985_$",
																			"typeString": "function (contract IERC20,address) view returns (uint256)"
																		}
																	},
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11355:37:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11341:51:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2743,
															"nodeType": "ExpressionStatement",
															"src": "11341:51:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2723,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2720,
														"src": "11301:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2724,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2711,
															"src": "11305:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11305:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11301:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2745,
												"initializationExpression": {
													"assignments": [
														2720
													],
													"declarations": [
														{
															"constant": false,
															"id": 2720,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 2745,
															"src": "11289:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2719,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "11289:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 2722,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11298:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11289:10:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11322:3:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 2727,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2720,
															"src": "11322:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2729,
													"nodeType": "ExpressionStatement",
													"src": "11322:3:9"
												},
												"nodeType": "ForStatement",
												"src": "11284:119:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2749,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "11431:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11431:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2751,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2700,
															"src": "11443:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2746,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2698,
															"src": "11413:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														"id": 2748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "uniTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3087,
														"src": "11413:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$985_$",
															"typeString": "function (contract IERC20,address payable,uint256)"
														}
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11413:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2753,
												"nodeType": "ExpressionStatement",
												"src": "11413:37:9"
											},
											{
												"body": {
													"id": 2782,
													"nodeType": "Block",
													"src": "11504:114:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 2772,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "11557:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_Mooniswap_$2939",
																								"typeString": "contract Mooniswap"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_Mooniswap_$2939",
																								"typeString": "contract Mooniswap"
																							}
																						],
																						"id": 2771,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11549:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2770,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "11549:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 2773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11549:13:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 2766,
																						"name": "tokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1671,
																						"src": "11526:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_contract$_IERC20_$985_$dyn_storage",
																							"typeString": "contract IERC20[] storage ref"
																						}
																					},
																					"id": 2768,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 2767,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2755,
																						"src": "11533:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11526:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$985",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "uniBalanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3053,
																				"src": "11526:22:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$985_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$985_$",
																					"typeString": "function (contract IERC20,address) view returns (uint256)"
																				}
																			},
																			"id": 2774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11526:37:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2775,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2711,
																				"src": "11567:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2777,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2776,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2755,
																				"src": "11576:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11567:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11526:52:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4d6f6f6e69737761703a206163636573732064656e696564",
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11580:26:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_00054040a5b72b87efc24e70d6f8e85550d05f94ab326f8006a86d85085ec5ee",
																			"typeString": "literal_string \"Mooniswap: access denied\""
																		},
																		"value": "Mooniswap: access denied"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_00054040a5b72b87efc24e70d6f8e85550d05f94ab326f8006a86d85085ec5ee",
																			"typeString": "literal_string \"Mooniswap: access denied\""
																		}
																	],
																	"id": 2765,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "11518:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11518:89:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2781,
															"nodeType": "ExpressionStatement",
															"src": "11518:89:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2758,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2755,
														"src": "11478:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2759,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2711,
															"src": "11482:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11482:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11478:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2783,
												"initializationExpression": {
													"assignments": [
														2755
													],
													"declarations": [
														{
															"constant": false,
															"id": 2755,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 2783,
															"src": "11466:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2754,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "11466:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 2757,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11475:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11466:10:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11499:3:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 2762,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2755,
															"src": "11499:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2764,
													"nodeType": "ExpressionStatement",
													"src": "11499:3:9"
												},
												"nodeType": "ForStatement",
												"src": "11461:157:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2788,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "11653:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Mooniswap_$2939",
																					"typeString": "contract Mooniswap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Mooniswap_$2939",
																					"typeString": "contract Mooniswap"
																				}
																			],
																			"id": 2787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11645:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2786,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11645:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11645:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2785,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "11635:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11635:24:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2791,
																"name": "BASE_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "11663:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11635:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d6f6f6e69737761703a206163636573732064656e696564",
															"id": 2793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11676:26:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00054040a5b72b87efc24e70d6f8e85550d05f94ab326f8006a86d85085ec5ee",
																"typeString": "literal_string \"Mooniswap: access denied\""
															},
															"value": "Mooniswap: access denied"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00054040a5b72b87efc24e70d6f8e85550d05f94ab326f8006a86d85085ec5ee",
																"typeString": "literal_string \"Mooniswap: access denied\""
															}
														],
														"id": 2784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11627:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11627:76:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2795,
												"nodeType": "ExpressionStatement",
												"src": "11627:76:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "78e3214f",
									"id": 2797,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2703,
											"modifierName": {
												"argumentTypes": null,
												"id": 2702,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1441,
												"src": "11185:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11185:12:9"
										},
										{
											"arguments": null,
											"id": 2705,
											"modifierName": {
												"argumentTypes": null,
												"id": 2704,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "11198:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11198:9:9"
										}
									],
									"name": "rescueFunds",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2797,
												"src": "11146:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2697,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "11146:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2797,
												"src": "11160:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11160:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11145:30:9"
									},
									"returnParameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11208:0:9"
									},
									"scope": 2939,
									"src": "11125:585:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2854,
										"nodeType": "Block",
										"src": "11847:256:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2812,
																	"name": "isToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "11861:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_bool_$",
																		"typeString": "mapping(contract IERC20 => bool)"
																	}
																},
																"id": 2814,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2813,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2799,
																	"src": "11869:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11861:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2815,
																	"name": "isToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "11877:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_contract$_IERC20_$985_$_t_bool_$",
																		"typeString": "mapping(contract IERC20 => bool)"
																	}
																},
																"id": 2817,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2816,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2801,
																	"src": "11885:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11877:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11861:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															},
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2819,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "11893:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2820,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2801,
																"src": "11900:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																}
															},
															"src": "11893:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "11861:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2823,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2803,
															"src": "11907:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11916:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11907:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11861:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2853,
												"nodeType": "IfStatement",
												"src": "11857:240:9",
												"trueBody": {
													"id": 2852,
													"nodeType": "Block",
													"src": "11919:178:9",
													"statements": [
														{
															"assignments": [
																2828
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2828,
																	"mutability": "mutable",
																	"name": "taxedAmount",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2852,
																	"src": "11933:19:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2827,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11933:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2840,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2837,
																				"name": "FEE_DENOMINATOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "11988:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2833,
																							"name": "fee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1806,
																							"src": "11977:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																								"typeString": "function () view returns (uint256)"
																							}
																						},
																						"id": 2834,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11977:5:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 2831,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2803,
																						"src": "11966:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2832,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 313,
																					"src": "11966:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2835,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11966:17:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 330,
																			"src": "11966:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11966:38:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2829,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2803,
																		"src": "11955:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 250,
																	"src": "11955:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11955:50:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11933:72:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2848,
																				"name": "taxedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2828,
																				"src": "12073:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2846,
																				"name": "srcBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2805,
																				"src": "12058:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 233,
																			"src": "12058:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12058:27:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2843,
																				"name": "dstBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2807,
																				"src": "12042:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2841,
																				"name": "taxedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2828,
																				"src": "12026:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 313,
																			"src": "12026:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12026:27:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 330,
																	"src": "12026:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12026:60:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2811,
															"id": 2851,
															"nodeType": "Return",
															"src": "12019:67:9"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2855,
												"src": "11736:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2798,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "11736:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2855,
												"src": "11748:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2800,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "11748:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2855,
												"src": "11760:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11760:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "srcBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2855,
												"src": "11776:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11776:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "dstBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2855,
												"src": "11796:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11796:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11735:80:9"
									},
									"returnParameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2855,
												"src": "11838:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11838:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11837:9:9"
									},
									"scope": 2939,
									"src": "11716:387:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2937,
										"nodeType": "Block",
										"src": "12226:566:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2873,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2863,
																"src": "12244:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2874,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "12256:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12256:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12244:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45585049524544",
															"id": 2877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12273:9:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a",
																"typeString": "literal_string \"EXPIRED\""
															},
															"value": "EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a",
																"typeString": "literal_string \"EXPIRED\""
															}
														],
														"id": 2872,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12236:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12236:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2879,
												"nodeType": "ExpressionStatement",
												"src": "12236:47:9"
											},
											{
												"assignments": [
													2881
												],
												"declarations": [
													{
														"constant": false,
														"id": 2881,
														"mutability": "mutable",
														"name": "nonce",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2937,
														"src": "12293:10:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2880,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12293:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2886,
												"initialValue": {
													"argumentTypes": null,
													"id": 2885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "12306:16:9",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2882,
															"name": "nonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "12306:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2884,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2883,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "12313:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12306:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12293:29:9"
											},
											{
												"assignments": [
													2888
												],
												"declarations": [
													{
														"constant": false,
														"id": 2888,
														"mutability": "mutable",
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2937,
														"src": "12332:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2887,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "12332:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2907,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 2892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12406:10:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 2893,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1663,
																	"src": "12434:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2897,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1666,
																					"src": "12489:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2898,
																					"name": "_owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2857,
																					"src": "12506:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2899,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2859,
																					"src": "12514:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2900,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2861,
																					"src": "12523:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2901,
																					"name": "nonce",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2881,
																					"src": "12530:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2902,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2863,
																					"src": "12537:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2895,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "12478:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "12478:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12478:68:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 2894,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -8,
																		"src": "12468:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 2904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12468:79:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2890,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "12372:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12372:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12372:189:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2889,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "12349:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12349:222:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12332:239:9"
											},
											{
												"assignments": [
													2909
												],
												"declarations": [
													{
														"constant": false,
														"id": 2909,
														"mutability": "mutable",
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2937,
														"src": "12581:24:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2908,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12581:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2916,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2911,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2888,
															"src": "12618:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 2912,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2865,
															"src": "12626:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 2913,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2867,
															"src": "12629:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 2914,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2869,
															"src": "12632:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2910,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "12608:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12608:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12581:53:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2918,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2909,
																	"src": "12652:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 2921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12680:1:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12672:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2919,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12672:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12672:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "12652:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2924,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2909,
																	"src": "12686:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2925,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2857,
																	"src": "12706:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12686:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12652:60:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "494e56414c49445f5349474e4154555245",
															"id": 2928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12714:19:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88",
																"typeString": "literal_string \"INVALID_SIGNATURE\""
															},
															"value": "INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88",
																"typeString": "literal_string \"INVALID_SIGNATURE\""
															}
														],
														"id": 2917,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12644:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12644:90:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2930,
												"nodeType": "ExpressionStatement",
												"src": "12644:90:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2932,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "12762:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2933,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2859,
															"src": "12770:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2934,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2861,
															"src": "12779:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2931,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "12753:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12753:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2936,
												"nodeType": "ExpressionStatement",
												"src": "12753:32:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d505accf",
									"id": 2938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2938,
												"src": "12126:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12126:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2859,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2938,
												"src": "12142:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12142:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2861,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2938,
												"src": "12159:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2860,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12159:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2938,
												"src": "12171:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2862,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12171:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2938,
												"src": "12186:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2864,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12186:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2938,
												"src": "12195:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2866,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12195:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2938,
												"src": "12206:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2868,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12206:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12125:91:9"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12226:0:9"
									},
									"scope": 2939,
									"src": "12110:682:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2940,
							"src": "1561:11233:9"
						}
					],
					"src": "33:12762:9"
				},
				"id": 9
			},
			"contracts/libraries/Sqrt.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Sqrt.sol",
					"exportedSymbols": {
						"Sqrt": [
							2999
						]
					},
					"id": 3000,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2941,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2999,
							"linearizedBaseContracts": [
								2999
							],
							"name": "Sqrt",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2997,
										"nodeType": "Block",
										"src": "244:314:10",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2948,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2943,
														"src": "258:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 2949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "262:1:10",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "258:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2986,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2943,
															"src": "472:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "477:1:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "472:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2994,
														"nodeType": "Block",
														"src": "519:33:10",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "540:1:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 2947,
																"id": 2993,
																"nodeType": "Return",
																"src": "533:8:10"
															}
														]
													},
													"id": 2995,
													"nodeType": "IfStatement",
													"src": "468:84:10",
													"trueBody": {
														"id": 2991,
														"nodeType": "Block",
														"src": "480:33:10",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 2989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "501:1:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"functionReturnParameters": 2947,
																"id": 2990,
																"nodeType": "Return",
																"src": "494:8:10"
															}
														]
													}
												},
												"id": 2996,
												"nodeType": "IfStatement",
												"src": "254:298:10",
												"trueBody": {
													"id": 2985,
													"nodeType": "Block",
													"src": "265:197:10",
													"statements": [
														{
															"assignments": [
																2952
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2952,
																	"mutability": "mutable",
																	"name": "z",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2985,
																	"src": "279:9:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2951,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "279:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2954,
															"initialValue": {
																"argumentTypes": null,
																"id": 2953,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2943,
																"src": "291:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "279:13:10"
														},
														{
															"assignments": [
																2956
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2956,
																	"mutability": "mutable",
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2985,
																	"src": "306:9:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2955,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "306:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2962,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2957,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2943,
																		"src": "318:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 2958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "322:1:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "318:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 2960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "326:1:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "318:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "306:21:10"
														},
														{
															"body": {
																"id": 2981,
																"nodeType": "Block",
																"src": "355:75:10",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2966,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2952,
																				"src": "373:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 2967,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2956,
																				"src": "377:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "373:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2969,
																		"nodeType": "ExpressionStatement",
																		"src": "373:5:10"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2970,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2956,
																				"src": "396:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2975,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2973,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 2971,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2943,
																									"src": "401:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 2972,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2956,
																									"src": "405:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "401:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 2974,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2956,
																								"src": "409:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "401:9:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2976,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "400:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 2977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "414:1:10",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "400:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "396:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2980,
																		"nodeType": "ExpressionStatement",
																		"src": "396:19:10"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2963,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2956,
																	"src": "348:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2964,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2952,
																	"src": "352:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "348:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2982,
															"nodeType": "WhileStatement",
															"src": "341:89:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2983,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2952,
																"src": "450:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2947,
															"id": 2984,
															"nodeType": "Return",
															"src": "443:8:10"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2998,
												"src": "201:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "201:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "200:11:10"
									},
									"returnParameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2998,
												"src": "235:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "234:9:10"
									},
									"scope": 2999,
									"src": "187:371:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3000,
							"src": "59:501:10"
						}
					],
					"src": "33:528:10"
				},
				"id": 10
			},
			"contracts/libraries/UniERC20.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/UniERC20.sol",
					"exportedSymbols": {
						"UniERC20": [
							3456
						]
					},
					"id": 3457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3001,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 3002,
							"nodeType": "ImportDirective",
							"scope": 3457,
							"sourceUnit": 401,
							"src": "58:51:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3003,
							"nodeType": "ImportDirective",
							"scope": 3457,
							"sourceUnit": 986,
							"src": "110:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"id": 3004,
							"nodeType": "ImportDirective",
							"scope": 3457,
							"sourceUnit": 1199,
							"src": "167:59:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 3456,
							"linearizedBaseContracts": [
								3456
							],
							"name": "UniERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3007,
									"libraryName": {
										"contractScope": null,
										"id": 3005,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 400,
										"src": "258:8:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$400",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "252:27:11",
									"typeName": {
										"id": 3006,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "271:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 3010,
									"libraryName": {
										"contractScope": null,
										"id": 3008,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1198,
										"src": "290:9:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1198",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "284:27:11",
									"typeName": {
										"contractScope": null,
										"id": 3009,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 985,
										"src": "304:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$985",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"body": {
										"id": 3028,
										"nodeType": "Block",
										"src": "374:54:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 3019,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3012,
																		"src": "400:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 3018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "392:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3017,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "392:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 3020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "392:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 3023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "418:1:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "410:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3021,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "410:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 3024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "410:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "392:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 3026,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "391:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3016,
												"id": 3027,
												"nodeType": "Return",
												"src": "384:37:11"
											}
										]
									},
									"documentation": null,
									"id": 3029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3012,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3029,
												"src": "332:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 3011,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "332:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "331:14:11"
									},
									"returnParameters": {
										"id": 3016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3015,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3029,
												"src": "368:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "368:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "367:6:11"
									},
									"scope": 3456,
									"src": "317:111:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3052,
										"nodeType": "Block",
										"src": "519:143:11",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3039,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3031,
															"src": "539:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														],
														"id": 3038,
														"name": "isETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3029,
														"src": "533:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$985_$returns$_t_bool_$",
															"typeString": "function (contract IERC20) pure returns (bool)"
														}
													},
													"id": 3040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "533:12:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3050,
													"nodeType": "Block",
													"src": "600:56:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 3047,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3033,
																		"src": "637:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 3045,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3031,
																		"src": "621:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 3046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 924,
																	"src": "621:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 3048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "621:24:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3037,
															"id": 3049,
															"nodeType": "Return",
															"src": "614:31:11"
														}
													]
												},
												"id": 3051,
												"nodeType": "IfStatement",
												"src": "529:127:11",
												"trueBody": {
													"id": 3044,
													"nodeType": "Block",
													"src": "547:47:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 3041,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3033,
																	"src": "568:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "568:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3037,
															"id": 3043,
															"nodeType": "Return",
															"src": "561:22:11"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 3053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniBalanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3031,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3053,
												"src": "456:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 3030,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "456:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3053,
												"src": "470:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "455:31:11"
									},
									"returnParameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3053,
												"src": "510:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "509:9:11"
									},
									"scope": 3456,
									"src": "434:228:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3086,
										"nodeType": "Block",
										"src": "748:195:11",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 3062,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3059,
														"src": "762:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 3063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "771:1:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "762:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 3085,
												"nodeType": "IfStatement",
												"src": "758:179:11",
												"trueBody": {
													"id": 3084,
													"nodeType": "Block",
													"src": "774:163:11",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 3066,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3055,
																		"src": "798:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 3065,
																	"name": "isETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3029,
																	"src": "792:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$985_$returns$_t_bool_$",
																		"typeString": "function (contract IERC20) pure returns (bool)"
																	}
																},
																"id": 3067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "792:12:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 3082,
																"nodeType": "Block",
																"src": "864:63:11",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3078,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3057,
																					"src": "901:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 3079,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3059,
																					"src": "905:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 3075,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3055,
																					"src": "882:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$985",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 3077,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1019,
																				"src": "882:18:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$985_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 3080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "882:30:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3081,
																		"nodeType": "ExpressionStatement",
																		"src": "882:30:11"
																	}
																]
															},
															"id": 3083,
															"nodeType": "IfStatement",
															"src": "788:139:11",
															"trueBody": {
																"id": 3074,
																"nodeType": "Block",
																"src": "806:52:11",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3071,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3059,
																					"src": "836:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 3068,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3057,
																					"src": "824:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 3070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "824:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 3072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "824:19:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3073,
																		"nodeType": "ExpressionStatement",
																		"src": "824:19:11"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 3087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3087,
												"src": "689:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 3054,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "689:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3057,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3087,
												"src": "703:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "703:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3059,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3087,
												"src": "723:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "688:50:11"
									},
									"returnParameters": {
										"id": 3061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "748:0:11"
									},
									"scope": 3456,
									"src": "668:275:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3143,
										"nodeType": "Block",
										"src": "1025:434:11",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 3094,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3091,
														"src": "1039:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 3095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1048:1:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1039:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 3142,
												"nodeType": "IfStatement",
												"src": "1035:418:11",
												"trueBody": {
													"id": 3141,
													"nodeType": "Block",
													"src": "1051:402:11",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 3098,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3089,
																		"src": "1075:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 3097,
																	"name": "isETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3029,
																	"src": "1069:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$985_$returns$_t_bool_$",
																		"typeString": "function (contract IERC20) pure returns (bool)"
																	}
																},
																"id": 3099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1069:12:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 3139,
																"nodeType": "Block",
																"src": "1353:90:11",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 3130,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -15,
																						"src": "1394:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 3131,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "1394:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 3134,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1414:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_UniERC20_$3456",
																								"typeString": "library UniERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_UniERC20_$3456",
																								"typeString": "library UniERC20"
																							}
																						],
																						"id": 3133,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1406:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 3132,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1406:7:11",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 3135,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1406:13:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 3136,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3091,
																					"src": "1421:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 3127,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3089,
																					"src": "1371:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$985",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 3129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1044,
																				"src": "1371:22:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$985_$",
																					"typeString": "function (contract IERC20,address,address,uint256)"
																				}
																			},
																			"id": 3137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1371:57:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3138,
																		"nodeType": "ExpressionStatement",
																		"src": "1371:57:11"
																	}
																]
															},
															"id": 3140,
															"nodeType": "IfStatement",
															"src": "1065:378:11",
															"trueBody": {
																"id": 3126,
																"nodeType": "Block",
																"src": "1083:264:11",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3104,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 3101,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -15,
																							"src": "1109:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 3102,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "value",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "1109:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 3103,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3091,
																						"src": "1122:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1109:19:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "556e6945524332303a206e6f7420656e6f7567682076616c7565",
																					"id": 3105,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1130:28:11",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_f063ea9425249c7c19d20c520ff74fdd489d423cacb235aa2b2d9a0850ee4f0f",
																						"typeString": "literal_string \"UniERC20: not enough value\""
																					},
																					"value": "UniERC20: not enough value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_f063ea9425249c7c19d20c520ff74fdd489d423cacb235aa2b2d9a0850ee4f0f",
																						"typeString": "literal_string \"UniERC20: not enough value\""
																					}
																				],
																				"id": 3100,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "1101:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 3106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1101:58:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3107,
																		"nodeType": "ExpressionStatement",
																		"src": "1101:58:11"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 3108,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "1181:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3109,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1181:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 3110,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3091,
																				"src": "1193:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1181:18:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 3125,
																		"nodeType": "IfStatement",
																		"src": "1177:156:11",
																		"trueBody": {
																			"id": 3124,
																			"nodeType": "Block",
																			"src": "1201:132:11",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 3120,
																										"name": "amount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3091,
																										"src": "1306:6:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"expression": {
																											"argumentTypes": null,
																											"id": 3117,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": -15,
																											"src": "1292:3:11",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 3118,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "value",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": null,
																										"src": "1292:9:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 3119,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sub",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 250,
																									"src": "1292:13:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 3121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1292:21:11",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 3112,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": -15,
																									"src": "1272:3:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 3115,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "1272:10:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							},
																							"id": 3116,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "1272:19:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																								"typeString": "function (uint256)"
																							}
																						},
																						"id": 3122,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1272:42:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 3123,
																					"nodeType": "ExpressionStatement",
																					"src": "1272:42:11"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 3144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniTransferFromSenderToThis",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3144,
												"src": "986:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 3088,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "986:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3091,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3144,
												"src": "1000:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "985:30:11"
									},
									"returnParameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:11"
									},
									"scope": 3456,
									"src": "949:510:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3319,
										"nodeType": "Block",
										"src": "1535:1139:11",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3152,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3146,
															"src": "1555:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														],
														"id": 3151,
														"name": "isETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3029,
														"src": "1549:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$985_$returns$_t_bool_$",
															"typeString": "function (contract IERC20) pure returns (bool)"
														}
													},
													"id": 3153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1549:12:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 3157,
												"nodeType": "IfStatement",
												"src": "1545:55:11",
												"trueBody": {
													"id": 3156,
													"nodeType": "Block",
													"src": "1563:37:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "455448",
																"id": 3154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1584:5:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
																	"typeString": "literal_string \"ETH\""
																},
																"value": "ETH"
															},
															"functionReturnParameters": 3150,
															"id": 3155,
															"nodeType": "Return",
															"src": "1577:12:11"
														}
													]
												}
											},
											{
												"assignments": [
													3159,
													3161
												],
												"declarations": [
													{
														"constant": false,
														"id": 3159,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3319,
														"src": "1611:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3158,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1611:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3161,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3319,
														"src": "1625:17:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3160,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1625:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3174,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "73796d626f6c2829",
																	"id": 3171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1723:10:11",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_95d89b41e2f5f391a79ec54e9d87c79d6e777c63e32c28da95b4e9e4a79250ec",
																		"typeString": "literal_string \"symbol()\""
																	},
																	"value": "symbol()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_95d89b41e2f5f391a79ec54e9d87c79d6e777c63e32c28da95b4e9e4a79250ec",
																		"typeString": "literal_string \"symbol()\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3169,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1699:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1699:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 3172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1699:35:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 3164,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3146,
																		"src": "1654:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 3163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1646:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3162,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1646:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 3165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1646:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "staticcall",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1646:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) view returns (bool,bytes memory)"
															}
														},
														"id": 3168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"gas"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"hexValue": "3230303030",
																"id": 3167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1678:5:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20000_by_1",
																	"typeString": "int_const 20000"
																},
																"value": "20000"
															}
														],
														"src": "1646:39:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 3173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1646:98:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1610:134:11"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 3176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1758:8:11",
													"subExpression": {
														"argumentTypes": null,
														"id": 3175,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3159,
														"src": "1759:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 3195,
												"nodeType": "IfStatement",
												"src": "1754:163:11",
												"trueBody": {
													"id": 3194,
													"nodeType": "Block",
													"src": "1768:149:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 3192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"id": 3177,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3159,
																			"src": "1783:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 3178,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3161,
																			"src": "1792:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"id": 3179,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "1782:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(bool,bytes memory)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "53594d424f4c2829",
																					"id": 3189,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1881:10:11",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_f76f8d7879ebad29e9c8d569fc5504b048b2a036ce9b09a321bc8a05e3e1ec05",
																						"typeString": "literal_string \"SYMBOL()\""
																					},
																					"value": "SYMBOL()"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_f76f8d7879ebad29e9c8d569fc5504b048b2a036ce9b09a321bc8a05e3e1ec05",
																						"typeString": "literal_string \"SYMBOL()\""
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 3187,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "1857:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodeWithSignature",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1857:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function (string memory) pure returns (bytes memory)"
																				}
																			},
																			"id": 3190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1857:35:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 3182,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3146,
																						"src": "1808:5:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$985",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$985",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 3181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1800:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 3180,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1800:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 3183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1800:14:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 3184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "staticcall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1800:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes memory) view returns (bool,bytes memory)"
																			}
																		},
																		"id": 3186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"names": [
																			"gas"
																		],
																		"nodeType": "FunctionCallOptions",
																		"options": [
																			{
																				"argumentTypes": null,
																				"hexValue": "3230303030",
																				"id": 3185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1832:5:11",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_20000_by_1",
																					"typeString": "int_const 20000"
																				},
																				"value": "20000"
																			}
																		],
																		"src": "1800:39:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
																			"typeString": "function (bytes memory) view returns (bool,bytes memory)"
																		}
																	},
																	"id": 3191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1800:106:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(bool,bytes memory)"
																	}
																},
																"src": "1782:124:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3193,
															"nodeType": "ExpressionStatement",
															"src": "1782:124:11"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 3196,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3159,
														"src": "1931:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 3197,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3161,
																"src": "1942:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 3198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1942:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3936",
															"id": 3199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1957:2:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_96_by_1",
																"typeString": "int_const 96"
															},
															"value": "96"
														},
														"src": "1942:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1931:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 3241,
												"nodeType": "IfStatement",
												"src": "1927:258:11",
												"trueBody": {
													"id": 3240,
													"nodeType": "Block",
													"src": "1961:224:11",
													"statements": [
														{
															"assignments": [
																3203,
																3205
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3203,
																	"mutability": "mutable",
																	"name": "offset",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 3240,
																	"src": "1976:14:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3202,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1976:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 3205,
																	"mutability": "mutable",
																	"name": "len",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 3240,
																	"src": "1992:11:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3204,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1992:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 3215,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 3208,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3161,
																		"src": "2018:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 3210,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2025:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 3209,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2025:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 3212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2034:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 3211,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2034:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			}
																		],
																		"id": 3213,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2024:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
																			"typeString": "tuple(type(uint256),type(uint256))"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
																			"typeString": "tuple(type(uint256),type(uint256))"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 3206,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "2007:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 3207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2007:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2007:36:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1975:68:11"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 3222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 3216,
																			"name": "offset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3203,
																			"src": "2061:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30783230",
																			"id": 3217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2071:4:11",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "0x20"
																		},
																		"src": "2061:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 3219,
																			"name": "len",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3205,
																			"src": "2079:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 3220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2085:1:11",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2079:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2061:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 3223,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3205,
																		"src": "2090:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "323536",
																		"id": 3224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:3:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"value": "256"
																	},
																	"src": "2090:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2061:39:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 3239,
															"nodeType": "IfStatement",
															"src": "2057:118:11",
															"trueBody": {
																"id": 3238,
																"nodeType": "Block",
																"src": "2102:73:11",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 3231,
																							"name": "data",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3161,
																							"src": "2145:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"components": [
																								{
																									"argumentTypes": null,
																									"id": 3233,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "2152:5:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																										"typeString": "type(bytes storage pointer)"
																									},
																									"typeName": {
																										"id": 3232,
																										"name": "bytes",
																										"nodeType": "ElementaryTypeName",
																										"src": "2152:5:11",
																										"typeDescriptions": {
																											"typeIdentifier": null,
																											"typeString": null
																										}
																									}
																								}
																							],
																							"id": 3234,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "2151:7:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																								"typeString": "type(bytes storage pointer)"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							},
																							{
																								"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																								"typeString": "type(bytes storage pointer)"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 3229,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -1,
																							"src": "2134:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 3230,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "decode",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "2134:10:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 3235,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2134:25:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 3228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2127:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				},
																				"typeName": {
																					"id": 3227,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "2127:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 3236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2127:33:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"functionReturnParameters": 3150,
																		"id": 3237,
																		"nodeType": "Return",
																		"src": "2120:40:11"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 3242,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3159,
														"src": "2199:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 3243,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3161,
																"src": "2210:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 3244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2210:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 3245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2225:2:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "2210:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2199:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 3311,
												"nodeType": "IfStatement",
												"src": "2195:433:11",
												"trueBody": {
													"id": 3310,
													"nodeType": "Block",
													"src": "2229:399:11",
													"statements": [
														{
															"assignments": [
																3249
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3249,
																	"mutability": "mutable",
																	"name": "len",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 3310,
																	"src": "2243:8:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3248,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2243:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 3251,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 3250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2254:1:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2243:12:11"
														},
														{
															"body": {
																"id": 3271,
																"nodeType": "Block",
																"src": "2337:38:11",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 3269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2355:5:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 3268,
																				"name": "len",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3249,
																				"src": "2355:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3270,
																		"nodeType": "ExpressionStatement",
																		"src": "2355:5:11"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 3261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 3252,
																			"name": "len",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3249,
																			"src": "2276:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 3253,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3161,
																				"src": "2282:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 3254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "2282:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2276:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		},
																		"id": 3260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 3256,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3161,
																				"src": "2297:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 3258,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 3257,
																				"name": "len",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3249,
																				"src": "2302:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2297:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30783230",
																			"id": 3259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2310:4:11",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "0x20"
																		},
																		"src": "2297:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2276:38:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	"id": 3266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 3262,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3161,
																			"src": "2318:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 3264,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 3263,
																			"name": "len",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3249,
																			"src": "2323:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2318:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30783745",
																		"id": 3265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2331:4:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_126_by_1",
																			"typeString": "int_const 126"
																		},
																		"value": "0x7E"
																	},
																	"src": "2318:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2276:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3272,
															"nodeType": "WhileStatement",
															"src": "2269:106:11"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 3273,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3249,
																	"src": "2393:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 3274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2399:1:11",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2393:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 3309,
															"nodeType": "IfStatement",
															"src": "2389:229:11",
															"trueBody": {
																"id": 3308,
																"nodeType": "Block",
																"src": "2402:216:11",
																"statements": [
																	{
																		"assignments": [
																			3277
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3277,
																				"mutability": "mutable",
																				"name": "result",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 3308,
																				"src": "2420:19:11",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 3276,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "2420:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 3282,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3280,
																					"name": "len",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3249,
																					"src": "2452:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "NewExpression",
																				"src": "2442:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (bytes memory)"
																				},
																				"typeName": {
																					"id": 3278,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "2446:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				}
																			},
																			"id": 3281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2442:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2420:36:11"
																	},
																	{
																		"body": {
																			"id": 3301,
																			"nodeType": "Block",
																			"src": "2505:60:11",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 3299,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 3293,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3277,
																								"src": "2527:6:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 3295,
																							"indexExpression": {
																								"argumentTypes": null,
																								"id": 3294,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3284,
																								"src": "2534:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "2527:9:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes1",
																								"typeString": "bytes1"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 3296,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3161,
																								"src": "2539:4:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 3298,
																							"indexExpression": {
																								"argumentTypes": null,
																								"id": 3297,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3284,
																								"src": "2544:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2539:7:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes1",
																								"typeString": "bytes1"
																							}
																						},
																						"src": "2527:19:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes1",
																							"typeString": "bytes1"
																						}
																					},
																					"id": 3300,
																					"nodeType": "ExpressionStatement",
																					"src": "2527:19:11"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3287,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3284,
																				"src": "2491:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 3288,
																				"name": "len",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3249,
																				"src": "2495:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2491:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3302,
																		"initializationExpression": {
																			"assignments": [
																				3284
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 3284,
																					"mutability": "mutable",
																					"name": "i",
																					"nodeType": "VariableDeclaration",
																					"overrides": null,
																					"scope": 3302,
																					"src": "2479:6:11",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 3283,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "2479:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"value": null,
																					"visibility": "internal"
																				}
																			],
																			"id": 3286,
																			"initialValue": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 3285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2488:1:11",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "2479:10:11"
																		},
																		"loopExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 3291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "2500:3:11",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 3290,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3284,
																					"src": "2500:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3292,
																			"nodeType": "ExpressionStatement",
																			"src": "2500:3:11"
																		},
																		"nodeType": "ForStatement",
																		"src": "2474:91:11"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3305,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3277,
																					"src": "2596:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 3304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2589:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				},
																				"typeName": {
																					"id": 3303,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "2589:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 3306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2589:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"functionReturnParameters": 3150,
																		"id": 3307,
																		"nodeType": "Return",
																		"src": "2582:21:11"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3315,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "2660:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 3314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2652:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3313,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2652:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 3316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2652:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3312,
														"name": "_toHex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3335,
															3455
														],
														"referencedDeclaration": 3335,
														"src": "2645:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
															"typeString": "function (address) pure returns (string memory)"
														}
													},
													"id": 3317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2645:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3150,
												"id": 3318,
												"nodeType": "Return",
												"src": "2638:29:11"
											}
										]
									},
									"documentation": null,
									"id": 3320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniSymbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3146,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3320,
												"src": "1484:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 3145,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 985,
													"src": "1484:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1483:14:11"
									},
									"returnParameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3320,
												"src": "1520:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1520:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1519:15:11"
									},
									"scope": 3456,
									"src": "1465:1209:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3334,
										"nodeType": "Block",
										"src": "2749:57:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3330,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3322,
																	"src": "2790:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3328,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2773:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2773:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2773:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3327,
														"name": "_toHex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3335,
															3455
														],
														"referencedDeclaration": 3455,
														"src": "2766:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (bytes memory) pure returns (string memory)"
														}
													},
													"id": 3332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3326,
												"id": 3333,
												"nodeType": "Return",
												"src": "2759:40:11"
											}
										]
									},
									"documentation": null,
									"id": 3335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toHex",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3322,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3335,
												"src": "2696:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2695:17:11"
									},
									"returnParameters": {
										"id": 3326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3325,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3335,
												"src": "2734:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3324,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2734:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2733:15:11"
									},
									"scope": 3456,
									"src": "2680:126:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3454,
										"nodeType": "Block",
										"src": "2883:416:11",
										"statements": [
											{
												"assignments": [
													3343
												],
												"declarations": [
													{
														"constant": false,
														"id": 3343,
														"mutability": "mutable",
														"name": "str",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3454,
														"src": "2893:16:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3342,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2893:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3353,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 3346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2922:1:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 3347,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3337,
																		"src": "2926:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2926:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 3349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2940:1:11",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2926:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2922:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2912:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 3344,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2916:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 3352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2912:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2893:49:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 3358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 3354,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3343,
															"src": "2952:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3356,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 3355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2956:1:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2952:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 3357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2961:3:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2952:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3359,
												"nodeType": "ExpressionStatement",
												"src": "2952:12:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 3364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 3360,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3343,
															"src": "2974:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3362,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 3361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2978:1:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2974:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "78",
														"id": 3363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2983:3:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2974:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3365,
												"nodeType": "ExpressionStatement",
												"src": "2974:12:11"
											},
											{
												"assignments": [
													3367
												],
												"declarations": [
													{
														"constant": false,
														"id": 3367,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3454,
														"src": "2996:6:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3366,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2996:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3369,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "32",
													"id": 3368,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3005:1:11",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2996:10:11"
											},
											{
												"body": {
													"id": 3447,
													"nodeType": "Block",
													"src": "3055:209:11",
													"statements": [
														{
															"assignments": [
																3382
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3382,
																	"mutability": "mutable",
																	"name": "a",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 3447,
																	"src": "3069:6:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3381,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3069:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 3391,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 3390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 3385,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3337,
																				"src": "3084:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 3387,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 3386,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3371,
																				"src": "3089:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3084:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		],
																		"id": 3384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3078:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 3383,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "3078:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 3388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3078:14:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "34",
																	"id": 3389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3096:1:11",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3078:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3069:28:11"
														},
														{
															"assignments": [
																3393
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3393,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 3447,
																	"src": "3111:6:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3392,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3111:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 3402,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 3401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 3396,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3337,
																				"src": "3126:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 3398,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 3397,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3371,
																				"src": "3131:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3126:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		],
																		"id": 3395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3120:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 3394,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "3120:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 3399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3120:14:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30783066",
																	"id": 3400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3137:4:11",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_15_by_1",
																		"typeString": "int_const 15"
																	},
																	"value": "0x0f"
																},
																"src": "3120:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3111:30:11"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 3423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 3403,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3343,
																		"src": "3155:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3406,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 3405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "3159:3:11",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 3404,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3367,
																			"src": "3159:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3155:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3420,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3413,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 3411,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3382,
																							"src": "3177:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "3438",
																							"id": 3412,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3181:2:11",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_48_by_1",
																								"typeString": "int_const 48"
																							},
																							"value": "48"
																						},
																						"src": "3177:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3419,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"components": [
																								{
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 3416,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"id": 3414,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3382,
																										"src": "3187:1:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "/",
																									"rightExpression": {
																										"argumentTypes": null,
																										"hexValue": "3130",
																										"id": 3415,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3189:2:11",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_10_by_1",
																											"typeString": "int_const 10"
																										},
																										"value": "10"
																									},
																									"src": "3187:4:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 3417,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "3186:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "3339",
																							"id": 3418,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3193:2:11",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_39_by_1",
																								"typeString": "int_const 39"
																							},
																							"value": "39"
																						},
																						"src": "3186:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3177:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3171:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 3409,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "3171:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 3421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3171:25:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 3408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3166:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 3407,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "3166:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 3422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3166:31:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "3155:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 3424,
															"nodeType": "ExpressionStatement",
															"src": "3155:42:11"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 3445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 3425,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3343,
																		"src": "3211:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3428,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 3427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "3215:3:11",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 3426,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3367,
																			"src": "3215:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3211:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3442,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3435,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 3433,
																							"name": "b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3393,
																							"src": "3233:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "3438",
																							"id": 3434,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3237:2:11",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_48_by_1",
																								"typeString": "int_const 48"
																							},
																							"value": "48"
																						},
																						"src": "3233:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3441,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"components": [
																								{
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 3438,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"id": 3436,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3393,
																										"src": "3243:1:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "/",
																									"rightExpression": {
																										"argumentTypes": null,
																										"hexValue": "3130",
																										"id": 3437,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3245:2:11",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_10_by_1",
																											"typeString": "int_const 10"
																										},
																										"value": "10"
																									},
																									"src": "3243:4:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 3439,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "3242:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "3339",
																							"id": 3440,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3249:2:11",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_39_by_1",
																								"typeString": "int_const 39"
																							},
																							"value": "39"
																						},
																						"src": "3242:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3233:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3227:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 3431,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "3227:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 3443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3227:25:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 3430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3222:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 3429,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "3222:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 3444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3222:31:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "3211:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 3446,
															"nodeType": "ExpressionStatement",
															"src": "3211:42:11"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 3374,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3371,
														"src": "3033:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 3375,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3337,
															"src": "3037:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3037:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3033:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3448,
												"initializationExpression": {
													"assignments": [
														3371
													],
													"declarations": [
														{
															"constant": false,
															"id": 3371,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 3448,
															"src": "3021:6:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3370,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3021:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 3373,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 3372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3030:1:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3021:10:11"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 3379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3050:3:11",
														"subExpression": {
															"argumentTypes": null,
															"id": 3378,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3371,
															"src": "3050:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3380,
													"nodeType": "ExpressionStatement",
													"src": "3050:3:11"
												},
												"nodeType": "ForStatement",
												"src": "3016:248:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3451,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3343,
															"src": "3288:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3281:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 3449,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3281:6:11",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 3452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3281:11:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3341,
												"id": 3453,
												"nodeType": "Return",
												"src": "3274:18:11"
											}
										]
									},
									"documentation": null,
									"id": 3455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toHex",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3337,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3455,
												"src": "2828:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2828:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2827:19:11"
									},
									"returnParameters": {
										"id": 3341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3340,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3455,
												"src": "2868:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2868:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2867:15:11"
									},
									"scope": 3456,
									"src": "2812:487:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3457,
							"src": "229:3072:11"
						}
					],
					"src": "33:3269:11"
				},
				"id": 11
			}
		}
	}
}